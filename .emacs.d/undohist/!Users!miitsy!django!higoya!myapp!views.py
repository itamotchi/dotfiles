
((digest . "6565d5116cb67ebc137fa37f7c1b1911") (undo-list nil (#("0" 0 1 (fontified t)) . -1103) nil (1105 . 1106) nil (#("0" 0 1 (fontified t)) . -1105) (t 20723 . 46541) nil (1104 . 1107) nil (1103 . 1104) nil (#("0" 0 1 (fontified t)) . -1103) nil (#("]" 0 1 (fontified t)) . -1104) (t 20723 . 46508) ((marker*) . 1) ((marker) . -1) nil (1102 . 1105) nil (1101 . 1102) nil (1081 . 1101) nil (1071 . 1081) nil (1067 . 1071) nil (1066 . 1067) (t 20720 . 3219) nil (1569 . 1577) nil (1567 . 1569) nil (1560 . 1562) nil (#("." 0 1 (fontified t)) . -1560) nil (1559 . 1566) nil (1555 . 1559) nil (1554 . 1555) nil (1506 . 1510) (#("        " 0 8 (fontified t)) . 1506) 1510 nil (1485 . 1489) nil (#("        " 0 8 (fontified t)) . 1485) 1493 nil (#("
" 0 1 (fontified t)) . 1485) nil (#("    else:" 0 4 (fontified t) 4 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t)) . 1485) nil (1528 . 1538) nil (#("]" 0 1 (fontified t)) . 1528) nil (#("'" 0 1 (face font-lock-string-face fontified t)) . 1528) nil (#("['entry" 0 1 (fontified t) 1 7 (face font-lock-string-face fontified t)) . 1528) nil (#("c" 0 1 (fontified t)) . 1528) (t 20719 . 43676) nil (143 . 152) (t 20719 . 43661) nil (1560 . 1562) nil (1509 . 1510) nil (1494 . 1509) nil (1486 . 1494) nil (1485 . 1486) (t 20719 . 43619) nil (1527 . 1536) (t 20719 . 43589) nil (1516 . 1527) nil (1504 . 1516) nil (1494 . 1504) nil (1486 . 1494) nil (1485 . 1486) nil (1484 . 1485) nil (1480 . 1484) nil (1476 . 1480) nil (#("        " 0 8 (fontified t)) . 1476) 1484 nil (1476 . 1484) nil (1475 . 1476) nil (1387 . 1392) nil (#("]" 0 1 (fontified t)) . 1387) nil (#("'" 0 1 (fontified t face font-lock-string-face)) . 1387) nil (#("['entry" 0 1 (fontified t) 1 7 (fontified t face font-lock-string-face)) . 1387) nil (#("c" 0 1 (fontified t)) . 1387) nil (nil rear-nonsticky nil 143 . 144) (nil fontified nil 143 . 144) (nil fontified nil 134 . 143) (nil fontified nil 128 . 134) (nil fontified nil 111 . 128) (nil fontified nil 107 . 111) (107 . 144) nil (#("
" 0 1 (fontified t)) . 155) nil (#("from django.template import Template" 0 4 (fontified t face font-lock-keyword-face) 4 21 (fontified t) 21 27 (fontified t face font-lock-keyword-face) 27 36 (fontified t)) . 155) nil (174 . 191) nil (154 . 174) (t 20719 . 43317) nil (#("
" 0 1 (fontified t)) . 1333) nil (1351 . 1361) nil (#("b" 0 1 (fontified t)) . 1351) nil (#("        
" 0 8 (fontified t) 8 9 (fontified t)) . 1436) nil (#("
" 0 1 (fontified t)) . 1436) nil (#("    else:" 0 4 (fontified t) 4 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t)) . 1436) nil (1446 . 1454) nil (1445 . 1446) nil (1444 . 1445) nil (1440 . 1444) nil (1436 . 1440) nil (#("        " 0 8 (fontified t)) . 1436) 1444 nil (1436 . 1444) nil (1430 . 1435) nil (1245 . 1251) nil (1404 . 1424) nil (#("e" 0 1 (fontified t)) . -1404) nil (1403 . 1405) nil (1395 . 1403) nil (1394 . 1395) nil (1393 . 1394) nil (1387 . 1393) nil (1383 . 1387) nil (#("        " 0 8 (fontified t)) . 1383) 1391 nil (1383 . 1391) nil (#("    extract:" 0 12 (fontified t)) . 1383) nil (1394 . 1395) nil (1387 . 1394) nil (1383 . 1387) nil (#("        " 0 8 (fontified t)) . 1383) 1391 nil (1383 . 1391) nil (1382 . 1383) nil (1381 . 1382) nil (1365 . 1381) nil (1345 . 1365) nil (1337 . 1345) nil (1336 . 1337) nil (1335 . 1336) nil (1332 . 1335) nil (1328 . 1332) nil (1328 . 1329) nil (1327 . 1328) nil (1326 . 1327) (t 20719 . 42303) nil (#("
" 0 1 (fontified t)) . 1120) nil (#("    blogs = " 0 12 (fontified t)) . 1120) nil (nil rear-nonsticky nil 1167 . 1168) (nil fontified nil 1150 . 1168) (1150 . 1168) nil (#("Y" 0 1 (fontified t)) . -1150) nil (1149 . 1151) nil (#("Blog.objects.all()" 0 18 (fontified t)) . 1132) nil (#(" " 0 1 (fontified t)) . -1167) nil (#("b" 0 1 (fontified t)) . -1168) nil (#("l" 0 1 (fontified t)) . -1169) nil (1165 . 1170) nil (1156 . 1165) nil (#("." 0 1 (fontified t)) . -1156) nil (1155 . 1157) nil (1151 . 1155) nil (1150 . 1151) nil (1145 . 1150) nil (#("g" 0 1 (fontified t)) . -1145) nil (#("e" 0 1 (fontified t)) . -1146) nil (#("t" 0 1 (fontified t)) . -1147) nil (1144 . 1148) nil (1124 . 1144) nil (1120 . 1124) nil (1119 . 1120) (t 20719 . 33073) nil (604 . 612) nil (592 . 604) nil (591 . 592) nil (#(" " 0 1 (fontified t)) . -591) nil (590 . 592) nil (575 . 590) nil (567 . 575) nil (566 . 567) nil (334 . 335) nil (#("
" 0 1 (fontified t)) . 335) nil (#("         'img_url': settings.IMG_URL,}" 0 9 (fontified t) 9 18 (fontified t face font-lock-string-face) 18 38 (fontified t)) . 335) nil (#("
" 0 1 (fontified t)) . 335) nil (#("         'js_url': settings.JS_URL," 0 9 (fontified t) 9 17 (fontified t face font-lock-string-face) 17 35 (fontified t)) . 335) nil (#("
" 0 1 (fontified t)) . 335) nil (#("         'css_url': settings.CSS_URL," 0 9 (fontified t) 9 18 (fontified t face font-lock-string-face) 18 37 (fontified t)) . 335) nil (664 . 678) nil (#("settings" 0 8 (fontified t)) . 664) nil (722 . 729) nil (#("]" 0 1 (fontified t)) . 722) nil (#("[ext" 0 4 (fontified t)) . 722) nil (#(".MEDIA" 0 6 (fontified t)) . 722) nil (#("settings" 0 8 (fontified t)) . 722) nil (688 . 695) nil (#("]" 0 1 (fontified t)) . 688) nil (#("[ext" 0 4 (fontified t)) . 688) nil (#("media" 0 5 (fontified t)) . 688) nil (617 . 637) nil (609 . 617) nil (608 . 609) nil (659 . 664) nil (#(".MEDIA" 0 6 (fontified t)) . 659) nil (#("settings" 0 8 (fontified t)) . 659) nil (456 . 474) nil (#("s" 0 1 (fontified t)) . -456) nil (452 . 457) nil (448 . 452) nil (447 . 448) nil (605 . 616) nil (592 . 605) nil (#("'" 0 1 (fontified t face font-lock-string-face)) . -592) nil (590 . 593) nil (582 . 590) nil (581 . 582) nil (#("
" 0 1 (fontified t)) . 560) nil (#("        c[" 0 10 (fontified t)) . 560) nil (568 . 570) nil (560 . 568) nil (559 . 560) nil (471 . 478) nil (180 . 184) nil (#("b" 0 1 (fontified t)) . -180) nil (165 . 181) nil (#(" " 0 1 (fontified t)) . -165) nil (165 . 166) nil (#("." 0 1 (fontified t)) . -165) nil (160 . 166) nil (#("d" 0 1 (fontified t)) . -160) nil (#("j" 0 1 (fontified t)) . -161) nil (#("a" 0 1 (fontified t)) . -162) nil (155 . 163) nil (#("from myapp.mycontext import mycontext" 0 4 (fontified t face font-lock-keyword-face) 4 21 (fontified t) 21 27 (fontified t face font-lock-keyword-face) 27 37 (fontified t)) . 155) (t 20719 . 32698) nil (1289 . 1296) nil (1118 . 1125) (t 20719 . 32639) nil (672 . 674) nil (#("]" 0 1 (fontified t face font-lock-string-face)) . -672) nil (663 . 673) nil (652 . 663) nil (#(").upper()]" 0 10 (fontified t)) . 652) nil (#("_' + ext" 0 1 (fontified t) 1 2 (fontified t face font-lock-string-face) 2 8 (fontified t face font-lock-string-face)) . 652) nil (#("[('default" 0 2 (fontified t) 2 3 (fontified t face font-lock-string-face) 3 10 (fontified t face font-lock-string-face)) . 652) nil (#(")" 0 1 (fontified t)) . 624) nil (#("(" 0 1 (fontified t)) . 624) nil (#(").upper" 0 7 (fontified t)) . 624) nil (#("_" 0 1 (fontified t face font-lock-string-face)) . 619) nil (617 . 618) nil (#(" " 0 1 (fontified t)) . 617) nil (#("+" 0 1 (fontified t)) . 617) nil (#(" " 0 1 (fontified t)) . 617) nil (616 . 617) nil (#(":" 0 1 (fontified t)) . -616) nil (616 . 617) nil (#("(" 0 1 (fontified t)) . 613) nil (606 . 612) (t 20719 . 32299) nil (#("." 0 1 (fontified t)) . 658) (t 20719 . 32263) nil (#("
" 0 1 (fontified t)) . 1291) nil (1269 . 1273) (#("されてる" 0 4 (fontified t face font-lock-comment-face)) . -1269) (1269 . 1273) (#("されてr" 0 4 (fontified t face font-lock-comment-face)) . -1269) (1269 . 1273) (#("されて" 0 3 (fontified t face font-lock-comment-face)) . -1269) (1269 . 1272) (#("されt" 0 3 (fontified t face font-lock-comment-face)) . -1269) (1269 . 1272) (#("され" 0 2 (fontified t face font-lock-comment-face)) . -1269) (1269 . 1271) (#("さr" 0 2 (fontified t face font-lock-comment-face)) . -1269) (1269 . 1271) (#("さ" 0 1 (fontified t face font-lock-comment-face)) . -1269) (1269 . 1270) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -1269) (1267 . 1270) (#("定義" 0 2 (fontified t face font-lock-comment-face)) . -1267) (1267 . 1269) (#("ていぎ" 0 3 (fontified t face font-lock-comment-face)) . -1267) (1267 . 1270) (#("ていg" 0 3 (fontified t face font-lock-comment-face)) . -1267) (1267 . 1270) (#("てい" 0 2 (fontified t face font-lock-comment-face)) . -1267) (1267 . 1269) (#("て" 0 1 (fontified t face font-lock-comment-face)) . -1267) (1267 . 1268) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -1267) (1266 . 1268) nil (#("で" 0 1 (fontified t face font-lock-comment-face)) . -1266) (1266 . 1267) (#("d" 0 1 (fontified t face font-lock-comment-face)) . -1266) (1266 . 1267) (#("." 0 1 (fontified t face font-lock-comment-face)) . -1266) nil (1262 . 1267) nil (#("U" 0 1 (fontified t face font-lock-comment-face)) . -1262) nil (1257 . 1263) (#("ファイルは" 0 5 (fontified t face font-lock-comment-face)) . -1257) (1257 . 1262) (#("ふぁいるは" 0 5 (fontified t face font-lock-comment-face)) . -1257) (1257 . 1262) (#("ふぁいるh" 0 5 (fontified t face font-lock-comment-face)) . -1257) (1257 . 1262) (#("ふぁいる" 0 4 (fontified t face font-lock-comment-face)) . -1257) (1257 . 1261) (#("ふぁいr" 0 4 (fontified t face font-lock-comment-face)) . -1257) (1257 . 1261) (#("ふぁい" 0 3 (fontified t face font-lock-comment-face)) . -1257) (1257 . 1260) (#("ふぁ" 0 2 (fontified t face font-lock-comment-face)) . -1257) (1257 . 1259) (#("f" 0 1 (fontified t face font-lock-comment-face)) . -1257) (1251 . 1258) (#("テンプレート" 0 6 (fontified t face font-lock-comment-face)) . -1251) (1251 . 1257) (#("てんぷれーと" 0 6 (fontified t face font-lock-comment-face)) . -1251) (1251 . 1257) (#("てんぷれーt" 0 6 (fontified t face font-lock-comment-face)) . -1251) (1251 . 1257) (#("てんぷれー" 0 5 (fontified t face font-lock-comment-face)) . -1251) (1251 . 1256) (#("てんぷれ" 0 4 (fontified t face font-lock-comment-face)) . -1251) (1251 . 1255) (#("てんぷr" 0 4 (fontified t face font-lock-comment-face)) . -1251) (1251 . 1255) (#("てんぷ" 0 3 (fontified t face font-lock-comment-face)) . -1251) (1251 . 1254) (#("てんp" 0 3 (fontified t face font-lock-comment-face)) . -1251) (1251 . 1254) (#("てん" 0 2 (fontified t face font-lock-comment-face)) . -1251) (1251 . 1253) (#("てn" 0 2 (fontified t face font-lock-comment-face)) . -1251) (1251 . 1253) (#("て" 0 1 (fontified t face font-lock-comment-face)) . -1251) (1251 . 1252) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -1251) (1249 . 1252) nil (1245 . 1249) nil (1244 . 1245) nil (524 . 529) (#("デフォルト" 0 5 (fontified t face font-lock-comment-face)) . -524) (524 . 529) (#("でふぉると" 0 5 (fontified t face font-lock-comment-face)) . -524) (524 . 529) (#("でふぉるt" 0 5 (fontified t face font-lock-comment-face)) . -524) (524 . 529) (#("でふぉる" 0 4 (fontified t face font-lock-comment-face)) . -524) (524 . 528) (#("でふぉr" 0 4 (fontified t face font-lock-comment-face)) . -524) (524 . 528) (#("でふぉ" 0 3 (fontified t face font-lock-comment-face)) . -524) (524 . 527) (#("でf" 0 2 (fontified t face font-lock-comment-face)) . -524) (524 . 526) (#("で" 0 1 (fontified t face font-lock-comment-face)) . -524) (524 . 525) (#("d" 0 1 (fontified t face font-lock-comment-face)) . -524) (522 . 525) nil (520 . 522) (#("なければ" 0 4 (fontified t face font-lock-comment-face)) . -520) (520 . 524) (#("なければ" 0 4 (fontified t face font-lock-comment-face)) . -520) (520 . 524) (#("なけれb" 0 4 (fontified t face font-lock-comment-face)) . -520) (520 . 524) (#("なけれ" 0 3 (fontified t face font-lock-comment-face)) . -520) (520 . 523) (#("なけr" 0 3 (fontified t face font-lock-comment-face)) . -520) (520 . 523) (#("なけ" 0 2 (fontified t face font-lock-comment-face)) . -520) (520 . 522) (#("なk" 0 2 (fontified t face font-lock-comment-face)) . -520) (520 . 522) (#("な" 0 1 (fontified t face font-lock-comment-face)) . -520) (520 . 521) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -520) (519 . 521) (#("。" 0 1 (fontified t face font-lock-comment-face)) . -519) (517 . 520) (#("使う" 0 2 (fontified t face font-lock-comment-face)) . -517) (517 . 519) (#("つかう" 0 3 (fontified t face font-lock-comment-face)) . -517) (517 . 520) (#("つか" 0 2 (fontified t face font-lock-comment-face)) . -517) (517 . 519) (#("つk" 0 2 (fontified t face font-lock-comment-face)) . -517) (517 . 519) (#("つ" 0 1 (fontified t face font-lock-comment-face)) . -517) (517 . 518) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -517) (514 . 518) (#("これを" 0 3 (fontified t face font-lock-comment-face)) . -514) (514 . 517) (#("これw" 0 3 (fontified t face font-lock-comment-face)) . -514) (514 . 517) (#("これ" 0 2 (fontified t face font-lock-comment-face)) . -514) (514 . 516) (#("こr" 0 2 (fontified t face font-lock-comment-face)) . -514) (514 . 516) (#("こ" 0 1 (fontified t face font-lock-comment-face)) . -514) (514 . 515) (#("k" 0 1 (fontified t face font-lock-comment-face)) . -514) (511 . 515) (#("あれば" 0 3 (fontified t face font-lock-comment-face)) . -511) (511 . 514) (#("あれb" 0 3 (fontified t face font-lock-comment-face)) . -511) (511 . 514) (#("あれ" 0 2 (fontified t face font-lock-comment-face)) . -511) (511 . 513) (#("あれあ" 0 3 (fontified t face font-lock-comment-face)) . -511) (511 . 514) (#("あれ" 0 2 (fontified t face font-lock-comment-face)) . -511) (511 . 513) (#("あr" 0 2 (fontified t face font-lock-comment-face)) . -511) (511 . 513) (#("あ" 0 1 (fontified t face font-lock-comment-face)) . -511) (506 . 512) (#("ファイルが" 0 5 (fontified t face font-lock-comment-face)) . -506) (506 . 511) (#("ふぁいるが" 0 5 (fontified t face font-lock-comment-face)) . -506) (506 . 511) (#("ふぁいるg" 0 5 (fontified t face font-lock-comment-face)) . -506) (506 . 511) (#("ふぁいる" 0 4 (fontified t face font-lock-comment-face)) . -506) (506 . 510) (#("ふぁいr" 0 4 (fontified t face font-lock-comment-face)) . -506) (506 . 510) (#("ふぁい" 0 3 (fontified t face font-lock-comment-face)) . -506) (506 . 509) (#("ふぁ" 0 2 (fontified t face font-lock-comment-face)) . -506) (506 . 508) (#("f" 0 1 (fontified t face font-lock-comment-face)) . -506) (502 . 507) nil (#("'" 0 1 (fontified t face font-lock-comment-face)) . -502) nil (495 . 503) (#("名前の" 0 3 (fontified t face font-lock-comment-face)) . -495) (495 . 498) (#("なまえの" 0 4 (fontified t face font-lock-comment-face)) . -495) (495 . 499) (#("なまえn" 0 4 (fontified t face font-lock-comment-face)) . -495) (495 . 499) (#("なまえ" 0 3 (fontified t face font-lock-comment-face)) . -495) (495 . 498) (#("なま" 0 2 (fontified t face font-lock-comment-face)) . -495) (495 . 497) (#("なm" 0 2 (fontified t face font-lock-comment-face)) . -495) (495 . 497) (#("な" 0 1 (fontified t face font-lock-comment-face)) . -495) (495 . 496) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -495) (493 . 496) (#("同じ" 0 2 (fontified t face font-lock-comment-face)) . -493) (493 . 495) (#("おなじ" 0 3 (fontified t face font-lock-comment-face)) . -493) (493 . 496) (#("おなj" 0 3 (fontified t face font-lock-comment-face)) . -493) (493 . 496) (#("おな" 0 2 (fontified t face font-lock-comment-face)) . -493) (493 . 495) (#("おn" 0 2 (fontified t face font-lock-comment-face)) . -493) (493 . 495) (#("お" 0 1 (fontified t face font-lock-comment-face)) . -493) (487 . 494) (#("ファイル名と" 0 6 (fontified t face font-lock-comment-face)) . -487) (487 . 493) (#("ふぁいるめいと" 0 7 (fontified t face font-lock-comment-face)) . -487) (487 . 494) (#("ふぁいるめいt" 0 7 (fontified t face font-lock-comment-face)) . -487) (487 . 494) (#("ふぁいるめい" 0 6 (fontified t face font-lock-comment-face)) . -487) (487 . 493) (#("ふぁいるめ" 0 5 (fontified t face font-lock-comment-face)) . -487) (487 . 492) (#("ふぁいるm" 0 5 (fontified t face font-lock-comment-face)) . -487) (487 . 492) (#("ふぁいる" 0 4 (fontified t face font-lock-comment-face)) . -487) (487 . 491) (#("ふぁいr" 0 4 (fontified t face font-lock-comment-face)) . -487) (487 . 491) (#("ふぁい" 0 3 (fontified t face font-lock-comment-face)) . -487) (487 . 490) (#("ふぁ" 0 2 (fontified t face font-lock-comment-face)) . -487) (487 . 489) (#("f" 0 1 (fontified t face font-lock-comment-face)) . -487) (485 . 488) nil (481 . 485) nil (480 . 481) nil (1238 . 1242) nil (1218 . 1238) nil (1214 . 1218) nil (1213 . 1214) nil (1212 . 1213) nil (1200 . 1212) nil (1196 . 1200) nil (1195 . 1196) nil (1167 . 1170) nil (1183 . 1191) nil (#("path" 0 4 (fontified t)) . 1183) nil (1140 . 1160) nil (#(" " 0 1 (fontified t)) . 1133) nil (#("," 0 1 (fontified t)) . 1133) nil (#("path" 0 4 (fontified t)) . 1133) nil (1101 . 1102) nil (#("path" 0 4 (fontified t)) . 1101) nil (1068 . 1076) nil (#("path" 0 4 (fontified t)) . 1068) nil (1034 . 1042) nil (#("path" 0 4 (fontified t)) . 1034) nil (1045 . 1048) nil (950 . 953) nil (#("
" 0 1 (fontified t)) . 976) nil (#("    t = filenaem + '.html'" 0 8 (fontified t) 8 19 (fontified t) 19 20 (fontified t face font-lock-string-face) 20 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face)) . 976) nil (807 . 811) nil (#(", t" 0 3 (fontified t)) . 807) nil (#("c" 0 1 (fontified t)) . 807) nil (850 . 854) nil (#(", t" 0 3 (fontified t)) . 850) nil (#("c" 0 1 (fontified t)) . 850) nil (#("
" 0 1 (fontified t)) . 879) nil (#("    t = filename + '.html'" 0 8 (fontified t) 8 19 (fontified t) 19 20 (fontified t face font-lock-string-face) 20 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face)) . 879) nil (851 . 854) nil (810 . 812) nil (#("filename + '.html')" 0 11 (fontified t) 11 12 (fontified t face font-lock-string-face) 12 17 (fontified t face font-lock-string-face) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t)) . 810) nil (#(")" 0 1 (fontified t)) . -794) nil (793 . 795) nil (773 . 793) nil (#("e" 0 1 (fontified t)) . -773) nil (772 . 774) nil (768 . 772) nil (#("            " 0 12 (fontified t)) . 768) 780 nil (768 . 780) nil (767 . 768) nil (799 . 802) nil (779 . 799) nil (#("c" 0 1 (fontified t)) . -779) nil (760 . 767) nil (#("d[ext]['default']" 0 7 (fontified t) 7 8 (fontified t face font-lock-string-face) 8 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t)) . 760) nil (665 . 669) nil (#("]" 0 1 (fontified t)) . 665) nil (#("'" 0 1 (fontified t face font-lock-string-face)) . 665) nil (#("]['root" 0 2 (fontified t) 2 3 (fontified t face font-lock-string-face) 3 7 (fontified t face font-lock-string-face)) . 665) nil (#("[ext" 0 4 (fontified t)) . 665) nil (#("d" 0 1 (fontified t)) . 665) nil (#("
" 0 1 (fontified t)) . 639) nil (#("    for ext in exts.keys():" 0 4 (fontified t) 4 7 (fontified t face font-lock-keyword-face) 7 12 (fontified t) 12 14 (fontified t face font-lock-keyword-face) 14 27 (fontified t)) . 639) nil (#("
" 0 1 (fontified t)) . 639) nil (#("            }" 0 12 (fontified t) 12 13 (fontified t)) . 639) nil (#("," 0 1 (fontified t)) . -638) nil (598 . 600) nil (#(":" 0 1 (fontified t)) . 598) nil (#("'" 0 1 (fontified t face font-lock-string-face)) . 598) nil (#("'" 0 1 (fontified t face font-lock-string-face)) . 591) nil (583 . 591) (#("            " 0 12 (fontified t)) . 583) nil (#("," 0 1 (fontified t)) . -582) nil (520 . 533) nil (512 . 520) nil (511 . 512) nil (524 . 526) nil (#(":" 0 1 (fontified t)) . 524) nil (#("'" 0 1 (fontified t face font-lock-string-face)) . 524) nil (#("'" 0 1 (fontified t face font-lock-string-face)) . 520) nil (512 . 520) (#("            " 0 12 (fontified t)) . 512) nil (#("
" 0 1 (fontified t)) . 512) nil (#("        exts[ext] = {" 0 21 (fontified t)) . 512) nil (489 . 490) nil (#("ext" 0 3 (fontified t)) . 489) nil (512 . 513) nil (511 . 512) nil (510 . 511) nil (496 . 506) nil (#(".keys():" 0 8 (fontified t)) . 500) nil (479 . 480) nil (#("}" 0 1 (fontified t)) . -479) nil (467 . 468) nil (#("{" 0 1 (fontified t)) . -467) nil (677 . 681) nil (#("d" 0 1 (fontified t)) . 677) nil (#("
" 0 1 (fontified t)) . 662) nil (#("                'default': settings.DEFAULT_JS,},}" 0 16 (fontified t) 16 17 (fontified t face font-lock-string-face) 17 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 50 (fontified t)) . 662) nil (#("
" 0 1 (fontified t)) . 662) nil (#("         'js': {'root': settings.JS_ROOT," 0 9 (fontified t) 9 10 (fontified t face font-lock-string-face) 10 12 (fontified t face font-lock-string-face) 12 13 (fontified t face font-lock-string-face) 13 16 (fontified t) 16 17 (fontified t face font-lock-string-face) 17 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 41 (fontified t)) . 662) nil (648 . 660) 649 nil (647 . 649) nil (646 . 647) nil (645 . 646) nil (637 . 645) nil (628 . 637) nil (620 . 621) nil (#("e" 0 1 (fontified t)) . -620) nil (#("x" 0 1 (fontified t)) . -621) nil (#("t" 0 1 (fontified t)) . -622) nil (#(" " 0 1 (fontified t)) . -623) nil (#("+" 0 1 (fontified t)) . -624) nil (#(" " 0 1 (fontified t)) . -625) nil (#("'" 0 1 (fontified t face font-lock-string-face)) . -626) nil (#("_" 0 1 (fontified t face font-lock-string-face)) . -627) nil (618 . 635) nil (#("DEFAULT_CSS,}," 0 14 (fontified t)) . 618) nil (#("]" 0 1 (fontified t)) . 598) nil (#("[ext" 0 4 (fontified t)) . 598) nil (#("exts" 0 4 (fontified t)) . 598) nil (586 . 598) (#("        " 0 8 (fontified t)) . 586) nil (584 . 585) nil (549 . 550) nil (#(" " 0 1 (fontified t)) . -549) nil (#("=" 0 1 (fontified t)) . -550) nil (#("]" 0 1 (fontified t)) . 549) nil (#("[" 0 1 (fontified t)) . 543) nil (531 . 543) nil (530 . 531) nil (526 . 530) nil (#("}" 0 1 (fontified t)) . 479) nil (#("{" 0 1 (fontified t)) . 479) nil (#(" " 0 1 (fontified t)) . 479) nil (#(":" 0 1 (fontified t)) . 479) nil (#("}" 0 1 (fontified t)) . 473) nil (#("{" 0 1 (fontified t)) . 473) nil (#(" " 0 1 (fontified t)) . 473) nil (#(":" 0 1 (fontified t)) . 473) nil (473 . 482) nil (#(": {}, 'js" 0 4 (fontified t) 4 6 (fontified t) 6 9 (fontified t face font-lock-string-face)) . 473) nil (#(" " 0 1 (fontified t)) . -534) nil (534 . 535) nil (587 . 596) nil (579 . 587) (#("                 " 0 17 (fontified t)) . 579) nil (#("
" 0 1 (fontified t)) . 579) nil (#("    d = {'css': {'root': settings.CSS_ROOT," 0 9 (fontified t) 9 10 (fontified t face font-lock-string-face) 10 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face) 14 17 (fontified t) 17 18 (fontified t face font-lock-string-face) 18 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 43 (fontified t)) . 579) nil (577 . 578) nil (569 . 577) nil (568 . 569) nil (554 . 555) nil (563 . 566) nil (#("t" 0 1 (fontified t face font-lock-string-face)) . -563) nil (#("o" 0 1 (fontified t face font-lock-string-face)) . -564) nil (#("o" 0 1 (fontified t face font-lock-string-face)) . -565) nil (562 . 566) nil (#("ROOT" 0 4 (fontified t face font-lock-string-face)) . 562) nil (#("." 0 1 (fontified t)) . -557) nil (#("u" 0 1 (fontified t)) . -558) nil (#("p" 0 1 (fontified t)) . -559) nil (#("p" 0 1 (fontified t)) . -560) nil (#("e" 0 1 (fontified t)) . -561) nil (#("r" 0 1 (fontified t)) . -562) nil (#("(" 0 1 (fontified t)) . -563) nil (#(")" 0 1 (fontified t)) . -564) nil (570 . 575) nil (#("r" 0 1 (fontified t face font-lock-string-face)) . -570) nil (565 . 571) nil (562 . 565) nil (542 . 562) nil (534 . 542) nil (525 . 534) nil (517 . 525) nil (516 . 517) nil (515 . 516) nil (497 . 515) nil (#("d" 0 1 (fontified t)) . -497) nil (460 . 464) nil (#("d" 0 1 (fontified t)) . -460) nil (494 . 495) nil (484 . 485) nil (480 . 484) nil (#("]" 0 1 (fontified t)) . 480) nil (470 . 474) nil (464 . 465) nil (#("[" 0 1 (fontified t)) . -464) nil (#("_keys" 0 5 (fontified t)) . 461) nil (487 . 491) nil (483 . 487) nil (482 . 483) nil (480 . 482) nil (460 . 480) nil (456 . 460) nil (455 . 456) nil (#("
" 0 1 (fontified t)) . 645) nil (#("    # logging.info(pprint(settings.CSS_ROOT))" 0 4 (fontified t) 4 45 (fontified t face font-lock-comment-face)) . 645) nil (#("
" 0 1 (fontified t)) . 716) nil (#("        # logging.info(pprint(d[ext]['root'] + root + '.' + ext))" 0 8 (fontified t) 8 65 (fontified t face font-lock-comment-face)) . 716) nil (869 . 877) nil (#("root" 0 4 (fontified t)) . 869) nil (830 . 833) nil (#("n" 0 1 (fontified t)) . -830) nil (825 . 831) nil (#("root" 0 4 (fontified t)) . 825) nil (#("
" 0 1 (fontified t)) . 456) nil (#("    root, ext = os.path.splitext(path)" 0 38 (fontified t)) . 456) nil (278 . 286) nil (#("path" 0 4 (fontified t)) . 278) nil (#("
" 0 1 (fontified t)) . 1273) nil (1215 . 1216) nil (1182 . 1184) nil (1162 . 1182) nil (1158 . 1162) nil (1157 . 1158) nil (1091 . 1092) nil (#("path" 0 4 (fontified t)) . 1091) nil (1058 . 1060) nil (1038 . 1058) nil (1034 . 1038) nil (1033 . 1034) nil (#("f" 0 1 (fontified t)) . -1164) nil (#("i" 0 1 (fontified t)) . -1165) nil (#("l" 0 1 (fontified t)) . -1166) nil (#("a" 0 1 (fontified t)) . -1167) nil (1164 . 1168) nil (#("path" 0 4 (fontified t)) . 1164) nil (1124 . 1132) nil (#("path" 0 4 (fontified t)) . 1124) nil (1093 . 1101) nil (#("path" 0 4 (fontified t)) . 1093) nil (1024 . 1032) nil (#("path" 0 4 (fontified t)) . 1024) nil (993 . 1001) nil (#("path" 0 4 (fontified t)) . 993) nil (#(" " 0 1 (fontified t)) . 1020) nil (#("," 0 1 (fontified t)) . 1020) nil (#("request" 0 7 (fontified t)) . 1020) nil (#(" " 0 1 (fontified t)) . 1121) nil (#("," 0 1 (fontified t)) . 1121) nil (#("request" 0 7 (fontified t)) . 1121) nil (#(" " 0 1 (fontified t)) . 1221) nil (#("," 0 1 (fontified t)) . 1221) nil (#("request" 0 7 (fontified t)) . 1221) nil (#(" " 0 1 (fontified t)) . 1331) nil (#("," 0 1 (fontified t)) . 1331) nil (#("request" 0 7 (fontified t)) . 1331) nil (988 . 993) nil (#("y" 0 1 (fontified t)) . -988) nil (#("e" 0 1 (fontified t)) . -989) nil (984 . 990) nil (278 . 282) nil (#("key" 0 3 (fontified t)) . 278) nil (278 . 281) nil (#("path" 0 4 (fontified t)) . 278) nil (#(" " 0 1 (fontified t)) . 984) nil (#("," 0 1 (fontified t)) . 984) nil (#("request" 0 7 (fontified t)) . 984) nil (#(" " 0 1 (fontified t)) . 278) nil (#("," 0 1 (fontified t)) . 278) nil (#("request" 0 7 (fontified t)) . 278) nil (1340 . 1349) nil (#("'" 0 1 (fontified t face font-lock-string-face)) . 1344) nil (#(".html" 0 5 (fontified t)) . 1344) nil (#(", 'blog" 0 2 (fontified t) 2 7 (fontified t face font-lock-string-face)) . 1344) nil (1304 . 1310) nil (#(":" 0 1 (fontified t)) . -1352) nil (1352 . 1353) nil (1338 . 1352) nil (1318 . 1338) nil (1313 . 1314) nil (1304 . 1311) nil (#("id" 0 2 (fontified t face font-lock-builtin-face)) . 1304) nil (1307 . 1308) nil (1298 . 1307) nil (1278 . 1298) nil (1269 . 1273) nil (#("t" 0 1 (fontified t)) . 1269) nil (#("        t = path" 0 16 (fontified t)) . 1245) nil (#("
" 0 1 (fontified t)) . 1245) nil (#("    else:" 0 4 (fontified t) 4 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t)) . 1245) nil (#("
" 0 1 (fontified t)) . 1245) nil (#("        t = 'blog_detail.html'" 0 12 (fontified t) 12 30 (fontified t face font-lock-string-face)) . 1245) nil (#("
" 0 1 (fontified t)) . 1245) nil (#("    if blog_id:" 0 4 (fontified t) 4 6 (fontified t face font-lock-keyword-face) 6 15 (fontified t)) . 1245) nil (#("_id" 0 3 (fontified t)) . 1207) nil (#(", blog" 0 6 (fontified t)) . 1207) (t 20719 . 29077) nil (1207 . 1213) nil (1207 . 1210) nil (#("
" 0 1 (fontified t)) . 1244) nil (#("    " 0 4 (fontified t)) . 1245) nil (1245 . 1250) nil (#("    
" 0 5 (fontified t)) . 1245) nil (1245 . 1249) nil (1244 . 1245) nil (#("_id" 0 3 (fontified t)) . 1207) nil (#(", blog" 0 6 (fontified t)) . 1207) (t 20719 . 29077) nil (1282 . 1300) nil (1301 . 1309) nil (1293 . 1301) nil (1292 . 1293) nil (1291 . 1292) nil (#(" " 0 1 (fontified t)) . -1291) nil (1287 . 1292) nil (1283 . 1287) nil (#("        " 0 8 (fontified t)) . 1283) 1291 nil (1283 . 1291) nil (1282 . 1283) nil (1306 . 1307) nil (#("path" 0 4 (fontified t)) . 1306) nil (1283 . 1287) nil (#("        " 0 8 (fontified t)) . 1283) 1291 nil (#("
" 0 1 (fontified t)) . 1283) nil (#("    else:" 0 4 (fontified t) 4 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t)) . 1283) nil (1278 . 1282) nil (1270 . 1278) nil (#("        pass" 0 8 (fontified t) 8 12 (fontified t face font-lock-keyword-face)) . 1270) nil (1321 . 1328) nil (1301 . 1321) nil (1293 . 1301) nil (1292 . 1293) nil (1291 . 1292) nil (1287 . 1291) nil (1280 . 1282) nil (#("d" 0 1 (fontified t)) . -1280) nil (#("d" 0 1 (fontified t)) . -1281) nil (1283 . 1287) nil (#("        " 0 8 (fontified t)) . 1283) 1291 nil (1283 . 1291) nil (1282 . 1283) nil (1278 . 1282) nil (1270 . 1278) nil (1269 . 1270) nil (1268 . 1269) nil (1266 . 1268) nil (#("d" 0 1 (fontified t)) . -1266) nil (#("i" 0 1 (fontified t)) . -1267) nil (1258 . 1268) nil (1254 . 1258) nil (1253 . 1254) nil (#("
" 0 1 (fontified t)) . 1184) nil (nil rear-nonsticky nil 1183 . 1184) (nil fontified nil 1155 . 1184) (nil fontified nil 1149 . 1155) (nil fontified nil 1145 . 1149) (nil fontified nil 1144 . 1145) (nil fontified nil 1110 . 1144) (1110 . 1184) nil (#("    c " 0 6 (fontified t)) . 1110) nil (1114 . 1116) nil (1110 . 1114) nil (1109 . 1110) nil (1108 . 1109) nil (1103 . 1108) nil (1083 . 1103) nil (1082 . 1083) nil (1108 . 1115) nil (#("query" 0 5 (fontified t)) . 1108) nil (1151 . 1155) nil (1150 . 1151) nil (1145 . 1150) nil (1125 . 1145) nil (#("k" 0 1 (fontified t)) . -1125) nil (#("a" 0 1 (fontified t)) . -1126) nil (1124 . 1127) nil (1106 . 1113) nil (1113 . 1117) nil (1108 . 1109) nil (1107 . 1108) nil (#(" " 0 1 (fontified t)) . -1107) nil (1107 . 1108) nil (1104 . 1107) nil (1084 . 1104) nil (#("# def css(request, path):
#     root, filename, extension = split_path(path)
#     c = get_context(filename)
#     return render_to_response(path, c, mimetype=\"text/css\")

# def js(request, path):
#     root, filename, extension = split_path(path)
#     c = get_context(filename)
#     return render_to_response(path, c, mimetype=\"text/javascript\")
" 0 26 (fontified t face font-lock-comment-face) 26 77 (fontified t face font-lock-comment-face) 77 109 (fontified t face font-lock-comment-face) 109 171 (fontified t face font-lock-comment-face) 171 172 (fontified t) 172 197 (fontified t face font-lock-comment-face) 197 248 (fontified t face font-lock-comment-face) 248 280 (fontified t face font-lock-comment-face) 280 349 (fontified t face font-lock-comment-face)) . -1084) nil (1039 . 1043) nil (#("t" 0 1 (fontified t)) . -1039) nil (1033 . 1040) nil (1013 . 1033) nil (1009 . 1013) nil (971 . 979) nil (967 . 971) nil (#("            " 0 12 (fontified t)) . 967) 979 nil (967 . 979) nil (966 . 967) nil (nil rear-nonsticky nil 966 . 967) (nil fontified nil 965 . 967) (nil fontified nil 956 . 965) (nil fontified nil 926 . 956) (nil fontified nil 922 . 926) (nil fontified nil 879 . 922) (nil fontified nil 876 . 879) (nil fontified nil 865 . 876) (nil fontified nil 859 . 865) (nil fontified nil 836 . 859) (nil fontified nil 834 . 836) (nil fontified nil 826 . 834) (nil fontified nil 768 . 826) (nil fontified nil 749 . 768) (nil fontified nil 747 . 749) (nil fontified nil 742 . 747) (nil fontified nil 739 . 742) (nil fontified nil 735 . 739) (nil fontified nil 693 . 735) (nil fontified nil 663 . 693) (nil fontified nil 654 . 663) (nil fontified nil 618 . 654) (nil fontified nil 612 . 618) (nil fontified nil 609 . 612) (nil fontified nil 605 . 609) (nil fontified nil 570 . 605) (nil fontified nil 561 . 570) (nil fontified nil 544 . 561) (nil fontified nil 523 . 544) (nil fontified nil 517 . 523) (nil fontified nil 514 . 517) (nil fontified nil 509 . 514) (nil fontified nil 440 . 509) (nil fontified nil 431 . 440) (nil fontified nil 403 . 431) (nil fontified nil 395 . 403) (nil fontified nil 366 . 395) (nil fontified nil 357 . 366) (nil fontified nil 314 . 357) (nil fontified nil 303 . 314) (nil fontified nil 294 . 303) (294 . 967) nil (#("    c = {'this_year': datetime.datetime.today().year,
         'css_url': settings.CSS_URL,
         'js_url': settings.JS_URL,
         'img_url': settings.IMG_URL,}
    root, ext = os.path.splitext(path)
    d = {'css': {'root': settings.CSS_ROOT,
                 'default': settings.DEFAULT_CSS,},
         'js': {'root': settings.JS_ROOT,
                'default': settings.DEFAULT_JS,},}
    # logging.info(pprint(settings.CSS_ROOT))
    for ext in d.keys():
        # logging.info(pprint(d[ext]['root'] + root + '.' + ext))
        if os.path.exists(d[ext]['root'] + root + '.' + ext):
            c[ext] = root
        else:
            c[ext] = d[ext]['default']
" 0 9 (fontified t) 9 20 (fontified t face font-lock-string-face) 20 63 (fontified t) 63 72 (fontified t face font-lock-string-face) 72 101 (fontified t) 101 109 (fontified t face font-lock-string-face) 109 137 (fontified t) 137 146 (fontified t face font-lock-string-face) 146 215 (fontified t) 215 220 (fontified t face font-lock-string-face) 220 223 (fontified t) 223 229 (fontified t face font-lock-string-face) 229 250 (fontified t) 250 267 (fontified t) 267 276 (fontified t face font-lock-string-face) 276 311 (fontified t) 311 315 (fontified t face font-lock-string-face) 315 318 (fontified t) 318 324 (fontified t face font-lock-string-face) 324 360 (fontified t) 360 369 (fontified t face font-lock-string-face) 369 399 (fontified t) 399 441 (fontified t face font-lock-comment-face) 441 445 (fontified t) 445 448 (fontified t face font-lock-keyword-face) 448 453 (fontified t) 453 455 (fontified t face font-lock-keyword-face) 455 474 (fontified t) 474 532 (fontified t face font-lock-comment-face) 532 540 (fontified t) 540 542 (fontified t face font-lock-keyword-face) 542 565 (fontified t) 565 571 (fontified t face font-lock-string-face) 571 582 (fontified t) 582 585 (fontified t face font-lock-string-face) 585 628 (fontified t) 628 632 (fontified t face font-lock-keyword-face) 632 662 (fontified t) 662 671 (fontified t face font-lock-string-face) 671 673 (fontified t)) . -323) nil (292 . 293) nil (281 . 292) nil (261 . 281) nil (260 . 261) (t 20689 . 1368)))
