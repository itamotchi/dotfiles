
((digest . "23cb8bb5a459c5e091f7bbd2b5bec2be") (undo-list nil (52 . 54) nil (#("i" 0 1 (fontified t)) . -52) nil (#("r" 0 1 (fontified t)) . -53) (t 19855 . 57894) nil (76 . 77) nil (71 . 76) nil (59 . 71) nil (58 . 59) nil (50 . 58) nil (32 . 50) nil (26 . 32) nil (#("b" 0 1 (fontified t)) . -26) nil (#("g" 0 1 (fontified t)) . -27) nil (#("e" 0 1 (fontified t)) . -28) nil (19 . 29) nil (#("p" 0 1 (fontified t)) . -19) nil (#(" " 0 1 (fontified t)) . -20) nil (#("i" 0 1 (fontified t)) . -21) nil (#("n" 0 1 (fontified t face font-lock-keyword-face)) . -22) nil (#(" " 0 1 (fontified t)) . -23) nil (#("m" 0 1 (fontified t)) . -24) nil (#("a" 0 1 (fontified t)) . -25) nil (#("p" 0 1 (fontified t face font-lock-builtin-face)) . -26) nil (#("(" 0 1 (fontified t)) . -27) nil (15 . 28) nil (#("if (2 ** X) in L:" 0 2 (fontified t face font-lock-keyword-face) 2 12 (fontified t) 12 14 (fontified t face font-lock-keyword-face) 14 17 (fontified t)) . 15) nil (#("1" 0 1 (fontified t)) . -6) nil (#("," 0 1 (fontified t)) . -7) nil (#(" " 0 1 (fontified t)) . -8) nil (#("2" 0 1 (fontified t)) . -9) nil (#("," 0 1 (fontified t)) . -10) nil (#(" " 0 1 (fontified t)) . -11) nil (#("4" 0 1 (fontified t)) . -12) nil (#("," 0 1 (fontified t)) . -13) nil (#(" " 0 1 (fontified t)) . -14) nil (#("8" 0 1 (fontified t)) . -15) nil (#("," 0 1 (fontified t)) . -16) nil (#(" " 0 1 (fontified t)) . -17) nil (#("1" 0 1 (fontified t)) . -18) nil (#("6" 0 1 (fontified t)) . -19) nil (#("," 0 1 (fontified t)) . -20) nil (#(" " 0 1 (fontified t)) . -21) nil (#("3" 0 1 (fontified t)) . -22) nil (#("2" 0 1 (fontified t)) . -23) nil (#("," 0 1 (fontified t)) . -24) nil (#(" " 0 1 (fontified t)) . -25) nil (#("6" 0 1 (fontified t)) . -26) nil (#("4" 0 1 (fontified t)) . -27) nil (#("
" 0 1 (fontified t)) . -28) nil (28 . 29) (t 19855 . 57739) nil (#("
" 0 1 (fontified t)) . 93) nil (#("    break" 0 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face)) . 93) nil (86 . 91) nil (#(" " 0 1 (fontified t)) . -86) nil (85 . 87) nil (#("p" 0 1 (fontified t)) . -85) nil (88 . 92) (#("        " 0 8 (fontified t)) . 88) nil (55 . 59) (#("        " 0 8 (fontified t)) . 55) nil (#("
" 0 1 (fontified t)) . 55) ((marker . 78) . -1) ((marker . 78) . -1) nil (#("    if 2 ** X == p:" 0 4 (fontified t) 4 6 (fontified t face font-lock-keyword-face) 6 19 (fontified t)) . 55) nil (53 . 54) nil (48 . 53) nil (37 . 48) nil (#("for " 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t)) . 37) nil (37 . 41) nil (#("for p in L:" 0 3 (fontified t face font-lock-keyword-face) 3 6 (fontified t) 6 8 (fontified t face font-lock-keyword-face) 8 11 (fontified t)) . 37) (t 19855 . 57445) ((marker . 77) . -11) nil (47 . 48) (t 19855 . 57437) nil (94 . 104) nil (#("X" 0 1 (fontified t)) . -94) nil (65 . 66) nil (#("]" 0 1 (fontified t)) . 65) nil (#("[i" 0 2 (fontified t)) . 65) nil (#("L" 0 1 (fontified t)) . 65) nil (45 . 47) nil (#("L" 0 1 (fontified t)) . -45) nil (37 . 46) nil (#("for not X in L.index(X)" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 7 (fontified t face font-lock-keyword-face) 7 10 (fontified t) 10 12 (fontified t face font-lock-keyword-face) 12 15 (fontified t) 15 23 (fontified t)) . 37) nil (110 . 111) nil (#("i" 0 1 (rear-nonsticky t fontified t)) . -110) nil (#("
" 0 1 (fontified t)) . 126) nil (#("    i = i+1" 0 4 (fontified t) 4 11 (fontified t)) . 126) nil (41 . 60) nil (#("X" 0 1 (fontified t)) . -41) nil (41 . 42) nil (#("i" 0 1 (fontified t)) . -41) nil (37 . 42) nil (#("while i < len(L):" 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 10 (fontified t) 10 13 (fontified t face font-lock-builtin-face) 13 17 (fontified t)) . 37) nil (#("
" 0 1 (fontified t)) . 37) nil (#("i = 0" 0 1 (fontified t face font-lock-variable-name-face) 1 5 (fontified t)) . 37) (t 19855 . 57231) ((marker . 77) . -5) nil (36 . 42) (t 19855 . 57217) nil (#(" " 0 1 (fontified t)) . 43) nil (#("d" 0 1 (fontified t)) . 43) nil (#("n" 0 1 (fontified t)) . 43) nil (#("a" 0 1 (fontified t face font-lock-keyword-face)) . 43) (t 19855 . 57208) nil (#("
" 0 1 (fontified t)) . 37) nil (#("und = i = 0" 0 3 (fontified t face font-lock-variable-name-face) 3 11 (fontified t)) . 37) nil (#("o" 0 1 (fontified t face font-lock-variable-name-face)) . 37) nil (#("f" 0 1 (fontified t face font-lock-variable-name-face)) . 37) nil (#(" " 0 1 (fontified t)) . 57) nil (#(" found" 0 1 (fontified t) 1 6 (fontified t)) . 57) nil (#("not" 0 3 (fontified t face font-lock-keyword-face)) . 57) (t 19855 . 57129) nil (190 . 191) 152 nil (#("
" 0 1 (fontified t)) . 166) nil (#("else:" 0 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t)) . 166) nil (#("
" 0 1 (fontified t)) . 166) nil (#("
" 0 1 (fontified t)) . 166) nil (#("if found:" 0 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t) 3 9 (fontified t)) . 166) nil (#("
" 0 1 (fontified t)) . 166) nil (#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 166) nil (106 . 114) (#("    " 0 4 (fontified t)) . 106) nil (nil rear-nonsticky nil 128 . 129) (nil fontified nil 126 . 129) (nil fontified nil 120 . 126) (nil fontified nil 117 . 120) (nil fontified nil 116 . 117) (nil fontified nil 115 . 116) (nil fontified nil 110 . 115) (nil fontified nil 106 . 110) (106 . 129) nil (#("    print 'at index', i" 0 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 11 (fontified t face font-lock-string-face) 11 14 (fontified t face font-lock-string-face) 14 20 (fontified t face font-lock-string-face) 20 23 (fontified t)) . 155) nil (#("        fond = 1" 0 8 (fontified t) 8 16 (fontified t)) . 106) nil (131 . 136) nil (123 . 131) nil (122 . 123) nil (141 . 145) nil (140 . 141) nil (139 . 140) nil (#("]" 0 1 (fontified t)) . -139) nil (134 . 140) nil (123 . 127) (#("        " 0 8 (fontified t)) . 123) 131 nil (#("
" 0 1 (fontified t)) . 123) nil (#("    else:" 0 4 (fontified t) 4 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t)) . 123) nil (203 . 214) nil (#("n" 0 1 (fontified t)) . -203) nil (194 . 204) nil (190 . 194) nil (189 . 190) nil (188 . 189) nil (#(" " 0 1 (fontified t)) . -188) nil (183 . 189) nil (164 . 183) nil (160 . 164) nil (159 . 160) nil (158 . 159) nil (149 . 158) nil (148 . 149) nil (146 . 148) nil (#("+" 0 1 (fontified t)) . -146) nil (141 . 147) nil (133 . 141) nil (132 . 133) nil (123 . 127) (#("        " 0 8 (fontified nil)) . 123) (135 . 136) nil (#("]" 0 1 (fontified t)) . -135) nil (131 . 136) nil (123 . 131) nil (122 . 123) nil (117 . 122) nil (#("t" 0 1 (fontified t)) . -117) nil (114 . 118) nil (106 . 114) nil (105 . 106) nil (104 . 105) nil (102 . 104) nil (#("8" 0 1 (fontified t)) . -102) nil (87 . 103) nil (83 . 87) nil (82 . 83) nil (81 . 82) nil (70 . 81) nil (50 . 70) nil (49 . 50) nil (#("9" 0 1 (fontified t)) . -49) nil (36 . 50) nil (35 . 36) nil (32 . 35) nil (#("0" 0 1 (fontified t)) . -32) nil (32 . 33) nil (#("-" 0 1 (fontified t)) . -32) nil (29 . 33) nil (28 . 29) nil (#("[" 0 1 (fontified t)) . -28) nil (27 . 29) nil (#("3" 0 1 (fontified t)) . -27) nil (26 . 28) nil (#("7" 0 1 (fontified t)) . -26) nil (15 . 27) nil (#("7" 0 1 (fontified t)) . -15) nil (15 . 16) nil (#("6" 0 1 (fontified t)) . -15) nil (15 . 16) nil (#("5" 0 1 (fontified t)) . -15) nil (12 . 16) nil (#("3" 0 1 (fontified t)) . -12) nil (#("," 0 1 (fontified t)) . -13) nil (#(" " 0 1 (fontified t)) . -14) nil (#("4" 0 1 (fontified t)) . -15) nil (#("," 0 1 (fontified t)) . -16) nil (#(" " 0 1 (fontified t)) . -17) nil (7 . 18) nil (#("m" 0 1 (fontified t)) . -7) nil (5 . 8) nil (#("{" 0 1 (fontified t)) . -5) nil (1 . 6) (t 65535 . 65535)))
