
((digest . "5b8288fce01d1083375ae90bb23b476f") (undo-list nil (3469 . 3470) nil (#("_" 0 1 (fontified t)) . -3469) nil (856 . 857) nil (#("_" 0 1 (fontified t)) . -856) nil (702 . 703) nil (#("_" 0 1 (fontified t)) . -702) nil (605 . 606) nil (#("_" 0 1 (fontified t)) . -605) nil (#("_context" 0 8 (fontified t)) . 408) (t 20714 . 12465) nil (400 . 416) nil (#(" " 0 1 (fontified t)) . -400) nil (nil rear-nonsticky nil 141 . 142) (nil fontified nil 133 . 142) (nil fontified nil 127 . 133) (nil fontified nil 114 . 127) (nil fontified nil 110 . 114) (110 . 142) nil (#("from django.conf import settings" 0 4 (face font-lock-keyword-face fontified t) 4 17 (fontified t) 17 23 (face font-lock-keyword-face fontified t) 23 32 (fontified t)) . 110) nil (#("common_context = Context({
    'css_url': settings.CSS_URL,
    'js_url': settings.JS_URL,
    'img_url': settings.IMG_URL,
})

" 0 14 (face font-lock-variable-name-face fontified t) 14 31 (fontified t) 31 40 (face font-lock-string-face fontified t) 40 64 (fontified t) 64 72 (face font-lock-string-face fontified t) 72 95 (fontified t) 95 104 (face font-lock-string-face fontified t) 104 128 (fontified t)) . -552) nil (#("
" 0 1 (fontified t)) . 179) nil (#("from django.template import Context, Template" 0 4 (face font-lock-keyword-face fontified t) 4 21 (fontified t) 21 27 (face font-lock-keyword-face fontified t) 27 45 (fontified t)) . 179) (t 20713 . 30360) nil (224 . 225) nil (nil rear-nonsticky nil 223 . 224) (nil fontified nil 206 . 224) (nil fontified nil 200 . 206) (nil fontified nil 183 . 200) (nil fontified nil 179 . 183) (179 . 224) (t 20713 . 29682) nil (#("
" 0 1 (fontified t)) . -3962) nil (#("
" 0 1 (fontified t)) . -3963) nil (3959 . 3960) nil (#(";" 0 1 (fontified t)) . -3918) nil (3918 . 3919) nil (3917 . 3918) nil (nil rear-nonsticky nil 3916 . 3917) (nil fontified nil 3905 . 3917) (nil fontified nil 3895 . 3905) (nil fontified nil 3886 . 3895) (nil fontified nil 3879 . 3886) (nil fontified nil 3878 . 3879) (3878 . 3917) nil (3877 . 3878) nil (#("{'entry': entry, 'archives': archives,}" 0 1 (fontified t) 1 8 (face font-lock-string-face fontified t) 8 17 (fontified t) 17 27 (face font-lock-string-face fontified t) 27 39 (fontified t)) . -3918) nil (3869 . 3877) nil (3865 . 3869) nil (3864 . 3865) nil (nil fontified nil 3597 . 3598) (nil fontified nil 3576 . 3597) (3576 . 3598) (#("{'title_list': title_list, 'entries': entries, 
                                         'next': next, 'prev': prev,}" 0 1 (fontified t) 1 13 (face font-lock-string-face fontified t) 13 27 (fontified t) 27 36 (face font-lock-string-face fontified t) 36 48 (fontified t) 48 89 (fontified t) 89 95 (face font-lock-string-face fontified t) 95 103 (fontified t) 103 109 (face font-lock-string-face fontified t) 109 116 (fontified t) 116 117 (rear-nonsticky t fontified t)) . -3576) nil (nil rear-nonsticky nil 3692 . 3693) (nil fontified nil 3685 . 3693) (nil fontified nil 3679 . 3685) (nil fontified nil 3671 . 3679) (nil fontified nil 3665 . 3671) (nil fontified nil 3624 . 3665) (nil fontified nil 3612 . 3624) (nil fontified nil 3603 . 3612) (nil fontified nil 3589 . 3603) (nil fontified nil 3577 . 3589) (nil fontified nil 3576 . 3577) (3576 . 3693) nil (3575 . 3576) nil (3537 . 3538) nil (3495 . 3496) nil (3466 . 3467) (#("                                          " 0 1 (fontified nil) 1 42 (fontified nil)) . 3466) (#("
" 0 1 (fontified t)) . -3467) 3535 nil (nil rear-nonsticky nil 3536 . 3537) (nil fontified nil 3529 . 3537) (nil fontified nil 3523 . 3529) (nil fontified nil 3515 . 3523) (nil fontified nil 3509 . 3515) (nil fontified nil 3468 . 3509) (nil fontified nil 3456 . 3468) (nil fontified nil 3447 . 3456) (nil fontified nil 3433 . 3447) (nil fontified nil 3421 . 3433) (nil fontified nil 3420 . 3421) (3420 . 3537) nil (#("{'title_list': title_list, 'entries': entries, 
                                         'next': next, 'prev': prev,}" 0 1 (fontified t) 1 13 (face font-lock-string-face fontified t) 13 27 (fontified t) 27 36 (face font-lock-string-face fontified t) 36 48 (fontified t) 48 89 (fontified t) 89 95 (face font-lock-string-face fontified t) 95 103 (fontified t) 103 109 (face font-lock-string-face fontified t) 109 117 (fontified t)) . -3461) nil (3411 . 3420) nil (3407 . 3411) nil (nil fontified nil 984 . 985) (nil fontified nil 963 . 984) (963 . 985) nil (962 . 963) nil (nil fontified nil 830 . 831) (nil fontified nil 809 . 830) (809 . 831) nil (#("    c = common_context" 0 21 (fontified t) 21 22 (rear-nonsticky t fontified t)) . 809) nil (930 . 932) nil (#("{'worksphoto': worksphoto})" 0 1 (fontified t) 1 2 (face font-lock-string-face fontified t) 2 12 (face font-lock-string-face fontified t) 12 13 (face font-lock-string-face fontified t) 13 27 (fontified t)) . 930) nil (#(")" 0 1 (fontified t)) . -889) nil (851 . 854) nil (843 . 851) nil (#("d" 0 1 (face font-lock-string-face fontified t)) . -843) nil (837 . 844) nil (#("@" 0 1 (fontified t)) . -837) nil (837 . 838) nil (#("@" 0 1 (fontified t)) . -837) nil (837 . 838) nil (#("." 0 1 (fontified t)) . -837) nil (#("u" 0 1 (fontified t)) . -838) nil (#("p" 0 1 (fontified t)) . -839) nil (#("d" 0 1 (fontified t)) . -840) nil (#("a" 0 1 (fontified t)) . -841) nil (#("t" 0 1 (fontified t)) . -842) nil (#("e" 0 1 (fontified t)) . -843) nil (#("(" 0 1 (fontified t)) . -844) nil (880 . 881) nil (#(" " 0 1 (fontified t)) . 845) nil (836 . 845) nil (#("=" 0 1 (fontified t)) . 836) nil (#(" " 0 1 (fontified t)) . 836) nil (#("worksphoto" 0 10 (fontified t)) . 836) nil (nil rear-nonsticky nil 830 . 831) (nil fontified nil 809 . 831) (809 . 831) nil (nil rear-nonsticky nil 733 . 734) (nil fontified nil 712 . 734) (712 . 734) nil (#("    c = common_context" 0 22 (fontified t)) . 712) nil (808 . 809) nil (773 . 776) nil (#("
" 0 1 (fontified t)) . 735) nil (nil rear-nonsticky nil 734 . 735) (nil fontified nil 712 . 735) (712 . 735) nil (711 . 712) (t 20713 . 29508) nil (#("
" 0 1 (rear-nonsticky t fontified t)) . 679) nil (nil rear-nonsticky nil 679 . 680) (nil fontified nil 656 . 680) (nil fontified nil 647 . 656) (nil fontified nil 624 . 647) (nil fontified nil 616 . 624) (nil fontified nil 592 . 616) (nil fontified nil 583 . 592) (nil fontified nil 566 . 583) (nil fontified nil 552 . 566) (552 . 680) nil (551 . 552) (t 20639 . 45190) nil (3192 . 3198) nil (#("all" 0 3 (fontified t)) . 3192) nil (#("
" 0 1 (fontified t)) . 3123) nil (#("    logging.info(Note.objects.public_count())" 0 12 (fontified t) 12 45 (fontified t)) . 3123) (t 20639 . 45059) nil (#("e" 0 1 (fontified t)) . -3165) (t 20639 . 45049) nil (3168 . 3169) nil (3167 . 3168) nil (3147 . 3167) nil (3127 . 3147) nil (3123 . 3127) nil (3122 . 3123) nil (468 . 477) nil (458 . 459) nil (458 . 459) (#(" " 0 1 (fontified nil)) . 458) (#("
" 0 1 (fontified t)) . -458) nil (#("import" 0 6 (fontified t face font-lock-keyword-face)) . 459) nil (452 . 453) nil (452 . 453) (#(" " 0 1 (fontified nil)) . 452) (#("
" 0 1 (fontified t)) . -452) nil (#("import" 0 6 (fontified t face font-lock-keyword-face)) . 453) nil (513 . 514) nil (nil rear-nonsticky nil 552 . 553) (nil fontified nil 513 . 553) (513 . 553) (t 20639 . 43251) nil (3052 . 3059) (t 20604 . 46027) nil (320 . 327) nil (269 . 276) nil (206 . 213) (t 20604 . 45281) nil (309 . 324) nil (#("t" 0 1 (fontified t)) . -309) nil (305 . 310) nil (#(" " 0 1 (fontified t)) . -305) nil (298 . 306) nil (278 . 298) nil (#(" " 0 1 (fontified t)) . 278) nil (#("," 0 1 (fontified t)) . 278) nil (#(", NoteImage" 0 11 (fontified t)) . 278) nil (#(" " 0 1 (fontified t)) . 274) nil (#("," 0 1 (fontified t)) . 274) nil (254 . 274) nil (234 . 254) nil (206 . 216) nil (#("models" 0 6 (fontified t)) . 206) nil (#("def admin_works(request, adminpath):
    worksphoto = WorksPhoto.objects.all()

    # WorksPhotoテーブルのレコードと実際の画像ファイルが一致している必要がある。
    # 何らかのイレギュラーが起きてこれが相違している場合、辻褄を合わせる。
    image_files = glob.glob(WorksPhoto.objects.get_image_file_dir() + '*')
    invalid_record = []
    for wp in worksphoto:
        flag = False
        for i in range(len(image_files)):
            if wp.image_abs_path == image_files[i]:
                del image_files[i]
                flag = True
                break
        if not flag:
            invalid_record.append(wp)
    # 画像ファイルがないのに存在するレコードを削除
    for i in range(len(invalid_record)):
        d = WorksPhoto.objects.get(number = invalid_record[i].number)
        d.delete()
    # レコードに存在しない画像ファイルを削除
    for i in range(len(image_files)):
        if not os.path.isdir(image_files[i]): # ディレクトリは無視
            os.remove(image_files[i])

    # ポストされたオーダーを取得する
    def getOrder(post_order):
        # 更新申請時とフォトセット取得申請の２回にわたってポストされたオーダーをチェックするのでルーチン化する
        if not post_order:
            raise Exception('\"order\" is undefind in POST.')
        order = json.loads(post_order)
        if not isinstance(order, list):
            raise Exception('\"order\" is not list.')
        return order

    # 初回リクエスト
    if request.method == 'GET':
        template = adminpath + 'admin_works.html'
        form = fileupload.UploadForm()
        return render_to_response(template, {'worksphoto': worksphoto, 'form': form,})

    # 非同期リクエスト
    else:
        indication = request.POST.get('indication', False)

        # 削除申請
        if (indication == 'delete'):
            itemname = request.POST.get('item', False)
            itemnumber = 0
            error = False
            try:
                itemnumber = int(WorksPhoto.objects.name_to_number(itemname))
            except:
                response = 'ERROR: \"' + itemname + '\" is invalid name.'
                error = True
            if itemnumber:
                item = WorksPhoto.objects.get(number = itemnumber)
                try:
                    os.remove(item.image_abs_path)
                    os.remove(item.s_image_abs_path)
                except:
                    response = 'ERROR: failure remove file: ' + item.image_abs_path
                    error = True
            if not error:
                item.delete()
                response = 'Success: deletion complete.'

        # ファイルアップロード
        elif indication == 'upload':
            # 写真追加申請の前段階でリクエストされる。この段階では一時ファイルを保存するのみ
            # アップロードフォームの提示やファイルの追加は'fileupload'モジュールにより行う
            if not request.FILES:
                response = 'ERROR: request File is not found.'
            else:
                try:
                    form = fileupload.UploadForm(request.POST, request.FILES)
                except Exception as inst:
                    return HttpResponse(inst)
                if form.is_valid():
                    response = fileupload.upload(request.FILES['file'])
                else:
                    response = 'ERROR: invalid form request.'
                if not response:
                    response = 'ERROR: failure get temporary file.'

        # 写真追加申請
        elif indication == 'add':
            # ファイルアップロードの後にリクエストされる。追加写真は直前に保存した一時ファイルを用いる
            template = 'photoindex_item.html'
            newphoto = fileupload.save()
            if not newphoto:
                response = 'ERROR: fauilure insert to worksphoto.'
            else:
                return render_to_response(template, {'photo': newphoto})

        # 更新申請
        elif (indication == 'update'):
            try: 
                order = getOrder(request.POST.get('order', False))
                photo_order = {}
                for i, itemname in enumerate(order):
                    photo_order[int(WorksPhoto.objects.name_to_number(itemname))] = i + 1
                for p in worksphoto:
                    if p.number in photo_order:
                        p.index = photo_order[p.number]
                    else:
                        p.index = None
                    p.save()
                response = 'Success: update complete.'
            except Exception as inst:
                response = str(type(inst)) + '\\n' + str(inst)

        # フォトセット取得申請
        elif (indication == 'get_new_photoset'):
            # 更新申請の前段階でリクエストされる。
            # 編集により変更されたオーダーに対応するスライドショー用の写真セットを返す
            template = 'photoset.html'
            try: 
                order = getOrder(request.POST.get('order', False))
                photoset = []
                for i, itemname in enumerate(order):
                    itemnumber = WorksPhoto.objects.name_to_number(itemname)
                    photoset.append(WorksPhoto.objects.get(number = itemnumber))
                return render_to_response(template, {'worksphoto': photoset})
            except Exception as inst:
                response = str(type(inst)) + '\\n' + str(inst)

        else:
            response = 'ERROR: indication is invalid or undefind.'

        return HttpResponse(response)


" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 15 (fontified t face font-lock-function-name-face) 15 84 (fontified t) 84 129 (fontified t face font-lock-comment-face) 129 133 (fontified t) 133 170 (fontified t face font-lock-comment-face) 170 240 (fontified t) 240 243 (fontified t face font-lock-string-face) 243 245 (fontified t) 245 273 (fontified t) 273 276 (fontified t face font-lock-keyword-face) 276 280 (fontified t) 280 282 (fontified t face font-lock-keyword-face) 282 310 (fontified t) 310 315 (fontified t face font-lock-keyword-face) 315 324 (fontified t) 324 327 (fontified t face font-lock-keyword-face) 327 330 (fontified t) 330 332 (fontified t face font-lock-keyword-face) 332 333 (fontified t) 333 338 (fontified t face font-lock-builtin-face) 338 339 (fontified t) 339 342 (fontified t face font-lock-builtin-face) 342 370 (fontified t) 370 372 (fontified t face font-lock-keyword-face) 372 426 (fontified t) 426 429 (fontified t face font-lock-keyword-face) 429 445 (fontified t) 445 468 (fontified t) 468 472 (fontified t face font-lock-keyword-face) 472 489 (fontified t) 489 494 (fontified t face font-lock-keyword-face) 494 503 (fontified t) 503 505 (fontified t face font-lock-keyword-face) 505 506 (fontified t) 506 509 (fontified t face font-lock-keyword-face) 509 558 (fontified t) 558 583 (fontified t face font-lock-comment-face) 583 587 (fontified t) 587 590 (fontified t face font-lock-keyword-face) 590 593 (fontified t) 593 595 (fontified t face font-lock-keyword-face) 595 596 (fontified t) 596 601 (fontified t face font-lock-builtin-face) 601 602 (fontified t) 602 605 (fontified t face font-lock-builtin-face) 605 717 (fontified t) 717 739 (fontified t face font-lock-comment-face) 739 743 (fontified t) 743 746 (fontified t face font-lock-keyword-face) 746 749 (fontified t) 749 751 (fontified t face font-lock-keyword-face) 751 752 (fontified t) 752 757 (fontified t face font-lock-builtin-face) 757 758 (fontified t) 758 761 (fontified t face font-lock-builtin-face) 761 777 (fontified t) 777 785 (fontified t) 785 787 (fontified t face font-lock-keyword-face) 787 788 (fontified t) 788 791 (fontified t face font-lock-keyword-face) 791 823 (fontified t) 823 835 (fontified t face font-lock-comment-face) 835 878 (fontified t) 878 896 (fontified t face font-lock-comment-face) 896 900 (fontified t) 900 903 (fontified t face font-lock-keyword-face) 903 904 (fontified t) 904 912 (fontified t face font-lock-function-name-face) 912 934 (fontified t) 934 987 (fontified t face font-lock-comment-face) 987 995 (fontified t) 995 997 (fontified t face font-lock-keyword-face) 997 998 (fontified t) 998 1001 (fontified t face font-lock-keyword-face) 1001 1026 (fontified t) 1026 1031 (fontified t face font-lock-keyword-face) 1031 1032 (fontified t) 1032 1041 (fontified t face font-lock-type-face) 1041 1042 (fontified t) 1042 1072 (fontified t face font-lock-string-face) 1072 1121 (fontified t) 1121 1123 (fontified t face font-lock-keyword-face) 1123 1124 (fontified t) 1124 1127 (fontified t face font-lock-keyword-face) 1127 1128 (fontified t) 1128 1138 (fontified t face font-lock-builtin-face) 1138 1146 (fontified t) 1146 1150 (fontified t face font-lock-builtin-face) 1150 1165 (fontified t) 1165 1170 (fontified t face font-lock-keyword-face) 1170 1171 (fontified t) 1171 1180 (fontified t face font-lock-type-face) 1180 1181 (fontified t) 1181 1203 (fontified t face font-lock-string-face) 1203 1213 (fontified t) 1213 1219 (fontified t face font-lock-keyword-face) 1219 1231 (fontified t) 1231 1241 (fontified t face font-lock-comment-face) 1241 1245 (fontified t) 1245 1247 (fontified t face font-lock-keyword-face) 1247 1266 (fontified t) 1266 1271 (fontified t face font-lock-string-face) 1271 1304 (fontified t) 1304 1322 (fontified t face font-lock-string-face) 1322 1323 (fontified t) 1323 1370 (fontified t) 1370 1376 (fontified t face font-lock-keyword-face) 1376 1407 (fontified t) 1407 1419 (fontified t face font-lock-string-face) 1419 1433 (fontified t) 1433 1439 (fontified t face font-lock-string-face) 1439 1454 (fontified t) 1454 1465 (fontified t face font-lock-comment-face) 1465 1469 (fontified t) 1469 1473 (fontified t face font-lock-keyword-face) 1473 1513 (fontified t) 1513 1525 (fontified t face font-lock-string-face) 1525 1527 (fontified t) 1527 1532 (fontified t face font-lock-keyword-face) 1532 1534 (fontified t) 1534 1543 (fontified t) 1543 1550 (fontified t face font-lock-comment-face) 1550 1558 (fontified t) 1558 1560 (fontified t face font-lock-keyword-face) 1560 1576 (fontified t) 1576 1584 (fontified t face font-lock-string-face) 1584 1627 (fontified t) 1627 1633 (fontified t face font-lock-string-face) 1633 1635 (fontified t) 1635 1640 (fontified t face font-lock-keyword-face) 1640 1689 (fontified t) 1689 1694 (fontified t face font-lock-keyword-face) 1694 1707 (fontified t) 1707 1710 (fontified t face font-lock-keyword-face) 1710 1741 (fontified t) 1741 1744 (fontified t face font-lock-builtin-face) 1744 1802 (fontified t) 1802 1808 (fontified t face font-lock-keyword-face) 1808 1837 (fontified t) 1837 1847 (fontified t face font-lock-string-face) 1847 1861 (fontified t) 1861 1881 (fontified t face font-lock-string-face) 1881 1882 (fontified t) 1882 1906 (fontified t) 1906 1910 (fontified t face font-lock-keyword-face) 1910 1923 (fontified t) 1923 1925 (fontified t face font-lock-keyword-face) 1925 2021 (fontified t) 2021 2024 (fontified t face font-lock-keyword-face) 2024 2146 (fontified t) 2146 2152 (fontified t face font-lock-keyword-face) 2152 2185 (fontified t) 2185 2215 (fontified t face font-lock-string-face) 2215 2266 (fontified t) 2266 2270 (fontified t face font-lock-keyword-face) 2270 2283 (fontified t) 2283 2285 (fontified t face font-lock-keyword-face) 2285 2286 (fontified t) 2286 2289 (fontified t face font-lock-keyword-face) 2289 2354 (fontified t) 2354 2383 (fontified t face font-lock-string-face) 2383 2384 (fontified t) 2384 2393 (fontified t) 2393 2406 (fontified t face font-lock-comment-face) 2406 2414 (fontified t) 2414 2418 (fontified t face font-lock-keyword-face) 2418 2433 (fontified t) 2433 2441 (fontified t face font-lock-string-face) 2441 2455 (fontified t) 2455 2497 (fontified t face font-lock-comment-face) 2497 2509 (fontified t) 2509 2556 (fontified t face font-lock-comment-face) 2556 2568 (fontified t) 2568 2570 (fontified t face font-lock-keyword-face) 2570 2571 (fontified t) 2571 2574 (fontified t face font-lock-keyword-face) 2574 2617 (fontified t) 2617 2652 (fontified t face font-lock-string-face) 2652 2665 (fontified t) 2665 2669 (fontified t face font-lock-keyword-face) 2669 2687 (fontified t) 2687 2690 (fontified t face font-lock-keyword-face) 2690 2786 (fontified t) 2786 2792 (fontified t face font-lock-keyword-face) 2792 2793 (fontified t) 2793 2802 (fontified t face font-lock-type-face) 2802 2803 (fontified t) 2803 2805 (fontified t face font-lock-keyword-face) 2805 2832 (fontified t) 2832 2838 (fontified t face font-lock-keyword-face) 2838 2874 (fontified t) 2874 2876 (fontified t face font-lock-keyword-face) 2876 2894 (fontified t) 2894 2957 (fontified t) 2957 2963 (fontified t face font-lock-string-face) 2963 2982 (fontified t) 2982 2986 (fontified t face font-lock-keyword-face) 2986 3019 (fontified t) 3019 3049 (fontified t face font-lock-string-face) 3049 3066 (fontified t) 3066 3068 (fontified t face font-lock-keyword-face) 3068 3069 (fontified t) 3069 3072 (fontified t face font-lock-keyword-face) 3072 3114 (fontified t) 3114 3150 (fontified t face font-lock-string-face) 3150 3160 (fontified t) 3160 3169 (fontified t face font-lock-comment-face) 3169 3177 (fontified t) 3177 3181 (fontified t face font-lock-keyword-face) 3181 3196 (fontified t) 3196 3201 (fontified t face font-lock-string-face) 3201 3215 (fontified t) 3215 3262 (fontified t face font-lock-comment-face) 3262 3285 (fontified t) 3285 3307 (fontified t face font-lock-string-face) 3307 3361 (fontified t) 3361 3363 (fontified t face font-lock-keyword-face) 3363 3364 (fontified t) 3364 3367 (fontified t face font-lock-keyword-face) 3367 3405 (fontified t) 3405 3444 (fontified t face font-lock-string-face) 3444 3445 (fontified t) 3445 3457 (fontified t) 3457 3461 (fontified t face font-lock-keyword-face) 3461 3479 (fontified t) 3479 3485 (fontified t face font-lock-keyword-face) 3485 3516 (fontified t) 3516 3523 (fontified t face font-lock-string-face) 3523 3545 (fontified t) 3545 3552 (fontified t face font-lock-comment-face) 3552 3560 (fontified t) 3560 3564 (fontified t face font-lock-keyword-face) 3564 3580 (fontified t) 3580 3588 (fontified t face font-lock-string-face) 3588 3603 (fontified t) 3603 3606 (fontified t face font-lock-keyword-face) 3606 3659 (fontified t) 3659 3666 (fontified t face font-lock-string-face) 3666 3668 (fontified t) 3668 3673 (fontified t face font-lock-keyword-face) 3673 3725 (fontified t) 3725 3728 (fontified t face font-lock-keyword-face) 3728 3741 (fontified t) 3741 3743 (fontified t face font-lock-keyword-face) 3743 3744 (fontified t) 3744 3753 (fontified t face font-lock-builtin-face) 3753 3794 (fontified t) 3794 3797 (fontified t face font-lock-builtin-face) 3797 3868 (fontified t) 3868 3871 (fontified t face font-lock-keyword-face) 3871 3874 (fontified t) 3874 3876 (fontified t face font-lock-keyword-face) 3876 3909 (fontified t) 3909 3911 (fontified t face font-lock-keyword-face) 3911 3921 (fontified t) 3921 3923 (fontified t face font-lock-keyword-face) 3923 3993 (fontified t) 3993 4013 (fontified t) 4013 4017 (fontified t face font-lock-keyword-face) 4017 4053 (fontified t) 4053 4057 (fontified t face font-lock-constant-face) 4057 4114 (fontified t) 4114 4141 (fontified t face font-lock-string-face) 4141 4154 (fontified t) 4154 4160 (fontified t face font-lock-keyword-face) 4160 4161 (fontified t) 4161 4170 (fontified t face font-lock-type-face) 4170 4171 (fontified t) 4171 4173 (fontified t face font-lock-keyword-face) 4173 4207 (fontified t) 4207 4210 (fontified t face font-lock-builtin-face) 4210 4211 (fontified t) 4211 4215 (fontified t face font-lock-builtin-face) 4215 4225 (fontified t) 4225 4229 (fontified t face font-lock-string-face) 4229 4232 (fontified t) 4232 4235 (fontified t face font-lock-builtin-face) 4235 4251 (fontified t) 4251 4264 (fontified t face font-lock-comment-face) 4264 4272 (fontified t) 4272 4276 (fontified t face font-lock-keyword-face) 4276 4292 (fontified t) 4292 4310 (fontified t face font-lock-string-face) 4310 4325 (fontified t) 4325 4346 (fontified t face font-lock-comment-face) 4346 4358 (fontified t) 4358 4397 (fontified t face font-lock-comment-face) 4397 4420 (fontified t) 4420 4435 (fontified t face font-lock-string-face) 4435 4448 (fontified t) 4448 4451 (fontified t face font-lock-keyword-face) 4451 4504 (fontified t) 4504 4511 (fontified t face font-lock-string-face) 4511 4513 (fontified t) 4513 4518 (fontified t face font-lock-keyword-face) 4518 4521 (fontified t) 4521 4567 (fontified t) 4567 4570 (fontified t face font-lock-keyword-face) 4570 4583 (fontified t) 4583 4585 (fontified t face font-lock-keyword-face) 4585 4586 (fontified t) 4586 4595 (fontified t face font-lock-builtin-face) 4595 4778 (fontified t) 4778 4784 (fontified t face font-lock-keyword-face) 4784 4815 (fontified t) 4815 4827 (fontified t face font-lock-string-face) 4827 4852 (fontified t) 4852 4858 (fontified t face font-lock-keyword-face) 4858 4859 (fontified t) 4859 4868 (fontified t face font-lock-type-face) 4868 4869 (fontified t) 4869 4871 (fontified t face font-lock-keyword-face) 4871 4905 (fontified t) 4905 4908 (fontified t face font-lock-builtin-face) 4908 4909 (fontified t) 4909 4913 (fontified t face font-lock-builtin-face) 4913 4923 (fontified t) 4923 4927 (fontified t face font-lock-string-face) 4927 4930 (fontified t) 4930 4933 (fontified t face font-lock-builtin-face) 4933 4949 (fontified t) 4949 4953 (fontified t face font-lock-keyword-face) 4953 4978 (fontified t) 4978 5021 (fontified t face font-lock-string-face) 5021 5022 (fontified t) 5022 5031 (fontified t) 5031 5037 (fontified t face font-lock-keyword-face) 5037 5063 (fontified t)) . -3628) nil (#("def date_format(dt):
    if isinstance(dt, datetime.datetime):
        return \"%s-%s-%s-%s-%s-%s\" % (dt.year, dt.month, dt.day, dt.hour, dt.minute, dt.second)
    else:
        return datetime.datetime(*[int(d) for d in dt.split('-')])

def admin_note(request, adminpath):
    # 初回リクエスト
    if request.method == 'GET':
        template = adminpath + 'admin_note.html'
        form = fileupload.UploadForm()
        return render_to_response(template, {'form': form,})

    else:
        indication = request.POST.get('indication', False)

        # タイトルリストの取得
        if indication == 'getTitle':
            title_list = Note.objects.get_title_list()
            simple_list = []
            for t in title_list:
                d = t['pub_date']
                simple_list.append({'pub_date': date_format(d),
                                    'title': t['title'],})
            return HttpResponse(json.dumps(simple_list))

        # ノート記事の取得
        elif indication == 'getNote':
            dt = date_format(request.POST.get('pub_date', False))
            entry = Note.objects.get(pub_date=dt)
            simple_entry = {
                'pub_date': date_format(entry.pub_date),
                'title': entry.title,
                'body': entry.body,
                }
            return HttpResponse(json.dumps(simple_entry))

        # ノートの削除
        elif indication == 'deleteNote':
            res = None
            dt = date_format(request.POST.get('pub_date', False))
            n = Note.objects.filter(pub_date=dt)
            if n.count(): 
                n.delete()
                res = True
            else: res = False
            return HttpResponse(res)

        # ノートの保存
        elif indication == 'saveNote':
            method = request.POST.get('method', False)
            res = None
            try:
                cnt = json.loads(request.POST.get('contents', False))
                dt = date_format(cnt['pub_date'])
                dt = Note.objects.get_specific_pub_date(dt)
                if method == 'insert':
                    n = Note(pub_date=dt)
                elif method == 'update':
                    key = date_format(request.POST.get('specificKey', False))
                    if not Note.objects.filter(pub_date=key).count(): 
                        raise Exception('error', 'not found this pub_date entry.')
                    n = Note.objects.get(pub_date=key)
                    n.pub_date = dt
                else: raise Exception('error', 'unknown mehod.')
                n.title = cnt['title']
                n.body = cnt['body']
                n.save()
            except Exception as inst:
                res = inst
            else:
                res = True
            return HttpResponse(res)

" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 15 (fontified t face font-lock-function-name-face) 15 25 (fontified t) 25 27 (fontified t face font-lock-keyword-face) 27 28 (fontified t) 28 38 (fontified t face font-lock-builtin-face) 38 71 (fontified t) 71 77 (fontified t face font-lock-keyword-face) 77 78 (fontified t) 78 97 (fontified t face font-lock-string-face) 97 163 (fontified t) 163 167 (fontified t face font-lock-keyword-face) 167 177 (fontified t) 177 183 (fontified t face font-lock-keyword-face) 183 204 (fontified t) 204 207 (fontified t face font-lock-builtin-face) 207 211 (fontified t) 211 214 (fontified t face font-lock-keyword-face) 214 217 (fontified t) 217 219 (fontified t face font-lock-keyword-face) 219 229 (fontified t) 229 232 (fontified t face font-lock-string-face) 232 237 (fontified t) 237 240 (fontified t face font-lock-keyword-face) 240 241 (fontified t) 241 251 (fontified t face font-lock-function-name-face) 251 277 (fontified t) 277 287 (fontified t face font-lock-comment-face) 287 291 (fontified t) 291 293 (fontified t face font-lock-keyword-face) 293 312 (fontified t) 312 317 (fontified t face font-lock-string-face) 317 350 (fontified t) 350 367 (fontified t face font-lock-string-face) 367 415 (fontified t) 415 421 (fontified t face font-lock-keyword-face) 421 452 (fontified t) 452 458 (fontified t face font-lock-string-face) 458 468 (fontified t) 468 473 (fontified t) 473 477 (fontified t face font-lock-keyword-face) 477 517 (fontified t) 517 529 (fontified t face font-lock-string-face) 529 531 (fontified t) 531 536 (fontified t face font-lock-keyword-face) 536 547 (fontified t) 547 560 (fontified t face font-lock-comment-face) 560 568 (fontified t) 568 570 (fontified t face font-lock-keyword-face) 570 585 (fontified t) 585 595 (fontified t face font-lock-string-face) 595 693 (fontified t) 693 696 (fontified t face font-lock-keyword-face) 696 699 (fontified t) 699 701 (fontified t face font-lock-keyword-face) 701 736 (fontified t) 736 746 (fontified t face font-lock-string-face) 746 784 (fontified t) 784 794 (fontified t face font-lock-string-face) 794 848 (fontified t) 848 855 (fontified t face font-lock-string-face) 855 859 (fontified t) 859 866 (fontified t face font-lock-string-face) 866 883 (fontified t) 883 889 (fontified t face font-lock-keyword-face) 889 937 (fontified t) 937 948 (fontified t face font-lock-comment-face) 948 956 (fontified t) 956 960 (fontified t face font-lock-keyword-face) 960 975 (fontified t) 975 984 (fontified t face font-lock-string-face) 984 986 (fontified t) 986 1032 (fontified t) 1032 1042 (fontified t face font-lock-string-face) 1042 1044 (fontified t) 1044 1049 (fontified t face font-lock-keyword-face) 1049 1147 (fontified t) 1147 1157 (fontified t face font-lock-string-face) 1157 1204 (fontified t) 1204 1211 (fontified t face font-lock-string-face) 1211 1242 (fontified t) 1242 1248 (fontified t face font-lock-string-face) 1248 1292 (fontified t) 1292 1298 (fontified t face font-lock-keyword-face) 1298 1347 (fontified t) 1347 1356 (fontified t face font-lock-comment-face) 1356 1364 (fontified t) 1364 1368 (fontified t face font-lock-keyword-face) 1368 1383 (fontified t) 1383 1395 (fontified t face font-lock-string-face) 1395 1415 (fontified t) 1415 1419 (fontified t face font-lock-constant-face) 1419 1466 (fontified t) 1466 1476 (fontified t face font-lock-string-face) 1476 1478 (fontified t) 1478 1483 (fontified t face font-lock-keyword-face) 1483 1535 (fontified t) 1535 1547 (fontified t) 1547 1549 (fontified t face font-lock-keyword-face) 1549 1611 (fontified t) 1611 1615 (fontified t face font-lock-keyword-face) 1615 1628 (fontified t) 1628 1632 (fontified t face font-lock-keyword-face) 1632 1640 (fontified t) 1640 1645 (fontified t face font-lock-keyword-face) 1645 1658 (fontified t) 1658 1664 (fontified t face font-lock-keyword-face) 1664 1692 (fontified t) 1692 1701 (fontified t face font-lock-comment-face) 1701 1709 (fontified t) 1709 1713 (fontified t face font-lock-keyword-face) 1713 1728 (fontified t) 1728 1738 (fontified t face font-lock-string-face) 1738 1778 (fontified t) 1778 1786 (fontified t face font-lock-string-face) 1786 1788 (fontified t) 1788 1793 (fontified t face font-lock-keyword-face) 1793 1813 (fontified t) 1813 1817 (fontified t face font-lock-constant-face) 1817 1830 (fontified t) 1830 1833 (fontified t face font-lock-keyword-face) 1833 1885 (fontified t) 1885 1895 (fontified t face font-lock-string-face) 1895 1897 (fontified t) 1897 1902 (fontified t face font-lock-keyword-face) 1902 1942 (fontified t) 1942 1952 (fontified t face font-lock-string-face) 1952 2031 (fontified t) 2031 2033 (fontified t face font-lock-keyword-face) 2033 2044 (fontified t) 2044 2052 (fontified t face font-lock-string-face) 2052 2054 (fontified t) 2054 2112 (fontified t) 2112 2116 (fontified t face font-lock-keyword-face) 2116 2127 (fontified t) 2127 2135 (fontified t face font-lock-string-face) 2135 2192 (fontified t) 2192 2205 (fontified t face font-lock-string-face) 2205 2207 (fontified t) 2207 2212 (fontified t face font-lock-keyword-face) 2212 2235 (fontified t) 2235 2237 (fontified t face font-lock-keyword-face) 2237 2238 (fontified t) 2238 2241 (fontified t face font-lock-keyword-face) 2241 2310 (fontified t) 2310 2315 (fontified t face font-lock-keyword-face) 2315 2316 (fontified t) 2316 2325 (fontified t face font-lock-type-face) 2325 2326 (fontified t) 2326 2333 (fontified t face font-lock-string-face) 2333 2335 (fontified t) 2335 2367 (fontified t face font-lock-string-face) 2367 2476 (fontified t) 2476 2480 (fontified t face font-lock-keyword-face) 2480 2482 (fontified t) 2482 2487 (fontified t face font-lock-keyword-face) 2487 2488 (fontified t) 2488 2497 (fontified t face font-lock-type-face) 2497 2498 (fontified t) 2498 2505 (fontified t face font-lock-string-face) 2505 2507 (fontified t) 2507 2523 (fontified t face font-lock-string-face) 2523 2555 (fontified t) 2555 2562 (fontified t face font-lock-string-face) 2562 2564 (fontified t) 2564 2593 (fontified t) 2593 2599 (fontified t face font-lock-string-face) 2599 2638 (fontified t) 2638 2644 (fontified t face font-lock-keyword-face) 2644 2645 (fontified t) 2645 2654 (fontified t face font-lock-type-face) 2654 2655 (fontified t) 2655 2657 (fontified t face font-lock-keyword-face) 2657 2703 (fontified t) 2703 2707 (fontified t face font-lock-keyword-face) 2707 2731 (fontified t) 2731 2735 (fontified t face font-lock-keyword-face) 2735 2748 (fontified t) 2748 2754 (fontified t face font-lock-keyword-face) 2754 2774 (fontified t)) . -3244) (t 20604 . 9226) nil (#("            
" 0 13 (fontified t)) . 6017) (t 20604 . 9197) nil (243 . 249) nil (#("I" 0 1 (fontified t)) . -243) nil (238 . 244) (t 20602 . 12472) nil (#("
" 0 1 (fontified t rear-nonsticky t)) . 5248) nil (#("                return HttpResponse(dt)" 0 16 (fontified t) 16 22 (fontified t face font-lock-keyword-face) 22 39 (fontified t)) . 5248) (t 20602 . 8857) nil (5264 . 5271) (t 20602 . 8835) nil (5277 . 5280) nil (#("json.loads(dt))" 0 15 (fontified t)) . 5277) (t 20602 . 8811) nil (5291 . 5292) nil (5274 . 5291) nil (#("c" 0 1 (fontified t)) . -5274) nil (5264 . 5275) nil (5248 . 5264) nil (5247 . 5248) (t 20602 . 8187) nil (5446 . 5447) nil (5400 . 5408) nil (#("." 0 1 (fontified t)) . -5400) nil (5396 . 5401) nil (#("だ" 0 1 (fontified t)) . -5396) (5396 . 5397) (#("だt" 0 2 (fontified t)) . -5396) (5396 . 5398) (#("だ" 0 1 (fontified t)) . -5396) (5396 . 5397) (#("d" 0 1 (fontified t)) . -5396) (5396 . 5397) 5461 (t 20602 . 8036) nil (5906 . 5910) nil (#("Exception" 0 9 (fontified t face font-lock-type-face)) . 5906) nil (5881 . 5882) nil (#("e" 0 1 (fontified t)) . -5881) nil (5864 . 5882) (t 20602 . 8019) nil (5888 . 5897) nil (#("False" 0 5 (fontified t face font-lock-keyword-face)) . 5888) nil (#("
" 0 1 (fontified t)) . 5939) nil (5912 . 5928) (#("                                " 0 16 (fontified t) 16 32 (fontified t)) . 5912) nil (nil rear-nonsticky nil 5954 . 5955) (nil fontified nil 5954 . 5955) (nil fontified nil 5950 . 5954) (nil fontified nil 5928 . 5950) (5928 . 5955) nil (5912 . 5928) nil (5911 . 5912) nil (5910 . 5911) nil (5906 . 5910) nil (5894 . 5906) (#("        " 0 8 (fontified t)) . 5894) 5902 nil (5894 . 5902) (#("    " 0 4 (fontified t)) . 5894) 5898 nil (5894 . 5898) nil (#("                " 0 16 (fontified t)) . 5894) 5910 nil (5894 . 5910) (#("        " 0 8 (fontified t)) . 5894) 5902 nil (5894 . 5902) (#("            " 0 12 (fontified t)) . 5894) 5906 nil (#("え" 0 1 (fontified t)) . -5906) (5906 . 5907) (#("えl" 0 2 (fontified t)) . -5906) (5906 . 5908) (#("えlせ" 0 3 (fontified t)) . -5906) (5906 . 5909) (#("えls" 0 3 (fontified t)) . -5906) (5906 . 5909) (#("えl" 0 2 (fontified t)) . -5906) (5906 . 5908) (#("え" 0 1 (fontified t)) . -5906) (5894 . 5907) (#("        " 0 8 (fontified t)) . 5894) 5902 nil (5894 . 5902) (#("    " 0 4 (fontified t)) . 5894) 5898 nil (5894 . 5898) nil (#("                " 0 16 (fontified t)) . 5894) 5910 nil (5894 . 5910) nil (5893 . 5894) nil (#("
" 0 1 (fontified t)) . 5846) nil (#("                res = True" 0 22 (fontified t) 22 26 (fontified t face font-lock-keyword-face)) . 5846) (t 20602 . 7106) nil (#("e" 0 1 (fontified t)) . -5698) (t 20602 . 6928) nil (#("
" 0 1 (fontified t)) . 5644) nil (#("                    dt = Note.objects.get_specific_pub_date(dt)" 0 20 (fontified t) 20 63 (fontified t)) . 5644) nil (5188 . 5204) (#("                    " 0 20 (fontified t)) . 5188) nil (nil rear-nonsticky nil 5251 . 5252) (nil fontified nil 5251 . 5252) (nil fontified nil 5188 . 5251) (5188 . 5252) nil (#("
" 0 1 (fontified t)) . 5227) nil (#("                    dt = Note.objects.get_specific_pub_date(dt)" 0 63 (fontified t)) . 5227) nil (5697 . 5711) nil (5677 . 5697) nil (5775 . 5779) nil (#("t" 0 1 (fontified t face font-lock-string-face)) . -5775) nil (5765 . 5776) nil (#("n" 0 1 (fontified t face font-lock-string-face)) . -5765) nil (5763 . 5766) nil (#("n" 0 1 (fontified t face font-lock-string-face)) . -5763) nil (#("o" 0 1 (fontified t face font-lock-string-face)) . -5764) nil (#("t" 0 1 (fontified t face font-lock-string-face)) . -5765) nil (#(" " 0 1 (fontified t face font-lock-string-face)) . -5766) nil (#("d" 0 1 (fontified t face font-lock-string-face)) . -5767) nil (#("o" 0 1 (fontified t face font-lock-string-face)) . -5768) nil (#("u" 0 1 (fontified t face font-lock-string-face)) . -5769) nil (#("n" 0 1 (fontified t face font-lock-string-face)) . -5770) nil (5763 . 5771) nil (#(" " 0 1 (fontified t face font-lock-string-face)) . -5763) nil (5755 . 5764) nil (5735 . 5755) nil (5730 . 5735) nil (5714 . 5730) (#("            " 0 12 (fontified t)) . 5714) 5726 nil (5714 . 5726) (#("        " 0 8 (fontified t)) . 5714) 5722 nil (5714 . 5722) (#("    " 0 4 (fontified t)) . 5714) 5718 nil (5714 . 5718) nil (#("                    " 0 20 (fontified t)) . 5714) 5734 nil (5714 . 5734) nil (5713 . 5714) nil (#("
" 0 1 (fontified t)) . 5714) nil (#("                    else: " 0 20 (fontified t) 20 24 (fontified t face font-lock-keyword-face) 24 26 (fontified t)) . 5714) nil (5678 . 5698) (#("                        " 0 24 (fontified t)) . 5678) 5698 nil (5648 . 5668) (#("                        " 0 24 (fontified t)) . 5648) 5668 nil (5593 . 5613) (#("                        " 0 24 (fontified t)) . 5593) 5617 nil (nil rear-nonsticky nil 5592 . 5593) (nil fontified nil 5592 . 5593) (nil fontified nil 5591 . 5592) (nil fontified nil 5590 . 5591) (nil fontified nil 5563 . 5590) (nil fontified nil 5560 . 5563) (nil fontified nil 5559 . 5560) (nil fontified nil 5557 . 5559) (nil fontified nil 5556 . 5557) (nil fontified nil 5551 . 5556) (nil fontified nil 5550 . 5551) (nil fontified nil 5549 . 5550) (nil fontified nil 5540 . 5549) (nil fontified nil 5539 . 5540) (nil fontified nil 5534 . 5539) (nil fontified nil 5510 . 5534) (5510 . 5593) nil (#("
" 0 1 (fontified t)) . 5670) nil (#("                        raise Exception('error', 'not found this pub_date entry.')" 0 24 (fontified t) 24 29 (fontified t face font-lock-keyword-face) 29 30 (fontified t) 30 39 (fontified t face font-lock-type-face) 39 40 (fontified t) 40 41 (fontified t face font-lock-string-face) 41 46 (fontified t face font-lock-string-face) 46 47 (fontified t face font-lock-string-face) 47 49 (fontified t) 49 50 (fontified t face font-lock-string-face) 50 53 (fontified t face font-lock-string-face) 53 80 (fontified t face font-lock-string-face) 80 81 (fontified t face font-lock-string-face) 81 82 (fontified t)) . 5670) nil (5462 . 5466) nil (5589 . 5598) nil (5565 . 5589) nil (5564 . 5565) nil (5247 . 5252) nil (5272 . 5285) nil (5260 . 5264) nil (5267 . 5268) nil (5247 . 5267) nil (5227 . 5247) nil (#("                        if (i > 10): break" 0 24 (fontified t) 24 26 (fontified t face font-lock-keyword-face) 26 37 (fontified t) 37 42 (fontified t face font-lock-keyword-face)) . 5227) nil (#("
" 0 1 (fontified t)) . 5227) nil (#("                        i += 1" 0 30 (fontified t)) . 5227) nil (#("
" 0 1 (fontified t)) . 5227) nil (#("                        dt = dt + datetime.timedelta(seconds=1)" 0 63 (fontified t)) . 5227) nil (#("
" 0 1 (fontified t)) . 5227) nil (#("                    while Note.objects.filter(pub_date=dt).count() > 0:" 0 20 (fontified t) 20 25 (fontified t face font-lock-keyword-face) 25 71 (fontified t)) . 5227) nil (#("
" 0 1 (fontified t)) . 5227) nil (#("                    i = 0" 0 25 (fontified t)) . 5227) nil (5761 . 5776) nil (5737 . 5761) nil (5736 . 5737) nil (5732 . 5735) nil (#("d" 0 1 (fontified t)) . -5732) nil (#("t" 0 1 (fontified t)) . -5733) nil (5663 . 5666) nil (#("d" 0 1 (fontified t)) . -5663) nil (#("t" 0 1 (fontified t)) . -5664) nil (5604 . 5610) nil (#("f" 0 1 (fontified t)) . -5604) nil (5586 . 5605) nil (5566 . 5586) nil (#("s" 0 1 (fontified t)) . -5566) nil (5566 . 5567) nil (5546 . 5566) nil (5545 . 5546) nil (#("規" 0 1 (fontified t face font-lock-comment-face)) . 4931) nil (#("新" 0 1 (fontified t face font-lock-comment-face)) . 4931) (t 20601 . 34283) nil (nil fontified nil 4915 . 4916) (nil fontified nil 4897 . 4915) (nil fontified nil 4891 . 4897) (nil fontified nil 4879 . 4891) (4879 . 4916) nil (#("
" 0 1 (fontified t rear-nonsticky t)) . 4653) nil (#("            return HttpResponse(res)" 0 12 (fontified t) 12 18 (face font-lock-keyword-face fontified t) 18 36 (fontified t)) . 4653) (t 20601 . 34159) nil (nil fontified nil 4689 . 4690) (nil fontified nil 4671 . 4689) (nil fontified nil 4665 . 4671) (nil fontified nil 4653 . 4665) (4653 . 4690) nil (#("
" 0 1 (fontified t rear-nonsticky t)) . 4719) nil (#("            return HttpResponse(res)" 0 12 (fontified t) 12 18 (face font-lock-keyword-face fontified t) 18 36 (fontified t)) . 4719) (t 20601 . 34143) nil (4756 . 4804) nil (4756 . 4757) nil (#("
" 0 1 (fontified t)) . 4756) nil (#("            n = Note.objects.filter(pub_date=dt)" 0 15 (fontified t) 15 48 (fontified t)) . 4756) (t 20601 . 34143) nil (nil fontified nil 4755 . 4756) (nil fontified nil 4737 . 4755) (nil fontified nil 4731 . 4737) (nil fontified nil 4719 . 4731) (4719 . 4756) nil (#("
" 0 1 (rear-nonsticky t fontified t)) . 4768) nil (#("            return HttpResponse(res)" 0 12 (fontified t) 12 18 (face font-lock-keyword-face fontified t) 18 36 (fontified t)) . 4768) (t 20601 . 34123) nil (nil rear-nonsticky nil 4804 . 4805) (nil fontified nil 4804 . 4805) (nil fontified nil 4786 . 4804) (nil fontified nil 4780 . 4786) (nil fontified nil 4768 . 4780) (4768 . 4805) nil (#("
" 0 1 (fontified t)) . 4879) nil (#("            return HttpResponse(res)" 0 12 (fontified t) 12 18 (face font-lock-keyword-face fontified t) 18 36 (fontified t)) . 4879) nil (#("
" 0 1 (fontified t)) . 4768) nil (#("            return" 0 12 (fontified t) 12 18 (face font-lock-keyword-face fontified t)) . 4768) nil (4780 . 4786) nil (4768 . 4780) nil (4767 . 4768) (t 20601 . 34065) nil (4914 . 4915) nil (#("9" 0 1 (fontified t)) . -4914) nil (#(";" 0 1 (fontified t)) . -4915) nil (4910 . 4916) nil (4891 . 4898) nil (4891 . 4903) nil (4879 . 4891) nil (4878 . 4879) nil (4865 . 4878) nil (4861 . 4865) nil (4849 . 4861) (#("        " 0 8 (fontified t)) . 4849) 4857 nil (4849 . 4857) (#("    " 0 4 (fontified t)) . 4849) 4853 nil (4849 . 4853) nil (#("                " 0 16 (fontified t)) . 4849) 4865 nil (4849 . 4865) nil (4848 . 4849) nil (4838 . 4848) nil (4822 . 4838) nil (4821 . 4822) nil (4795 . 4811) nil (4794 . 4795) nil (4650 . 4652) nil (#("t" 0 1 (fontified t)) . -4650) nil (#("e" 0 1 (fontified t)) . -4651) nil (4648 . 4652) nil (#("n" 0 1 (fontified t)) . -4648) nil (4642 . 4649) nil (4630 . 4642) nil (4629 . 4630) nil (4769 . 4781) nil (4757 . 4769) nil (#("." 0 1 (fontified t)) . -4744) nil (#("c" 0 1 (fontified t)) . -4745) nil (#("o" 0 1 (fontified t)) . -4746) nil (#("u" 0 1 (fontified t)) . -4747) nil (#("n" 0 1 (fontified t)) . -4748) nil (#("t" 0 1 (fontified t)) . -4749) nil (#("(" 0 1 (fontified t)) . -4750) nil (#(")" 0 1 (fontified t)) . -4751) nil (4708 . 4711) nil (#("i" 0 1 (fontified t)) . -4708) nil (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -4709) nil (4752 . 4764) nil (4751 . 4752) nil (4743 . 4751) nil (4731 . 4743) nil (4711 . 4731) nil (#("(" 0 1 (fontified t)) . -4711) nil (4708 . 4712) nil (4696 . 4708) nil (4695 . 4696) nil (4694 . 4695) nil (4682 . 4694) nil (4662 . 4682) nil (4642 . 4662) nil (4630 . 4642) nil (4629 . 4630) nil (4628 . 4629) nil (4621 . 4628) nil (#("c" 0 1 (face font-lock-string-face fontified t)) . -4621) nil (#("t" 0 1 (face font-lock-string-face fontified t)) . -4622) nil (4617 . 4623) nil (4597 . 4617) nil (4589 . 4597) nil (4588 . 4589) nil (4586 . 4588) (#("削除" 0 2 (face font-lock-comment-face fontified t)) . -4586) (4586 . 4588) (#("さくじょ" 0 4 (face font-lock-comment-face fontified t)) . -4586) (4586 . 4590) (#("さくj" 0 3 (face font-lock-comment-face fontified t)) . -4586) (4586 . 4589) (#("さく" 0 2 (face font-lock-comment-face fontified t)) . -4586) (4586 . 4588) (#("さk" 0 2 (face font-lock-comment-face fontified t)) . -4586) (4586 . 4588) (#("さ" 0 1 (face font-lock-comment-face fontified t)) . -4586) (4586 . 4587) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -4586) (4585 . 4587) (#("の" 0 1 (face font-lock-comment-face fontified t)) . -4585) (4585 . 4586) (#("n" 0 1 (face font-lock-comment-face fontified t)) . -4585) (4582 . 4586) (#("ノート" 0 3 (face font-lock-comment-face fontified t)) . -4582) (4582 . 4585) (#("のーと" 0 3 (face font-lock-comment-face fontified t)) . -4582) (4582 . 4585) (#("のーt" 0 3 (face font-lock-comment-face fontified t)) . -4582) (4582 . 4585) (#("のー" 0 2 (face font-lock-comment-face fontified t)) . -4582) (4582 . 4584) (#("の" 0 1 (face font-lock-comment-face fontified t)) . -4582) (4582 . 4583) (#("n" 0 1 (face font-lock-comment-face fontified t)) . -4582) (4580 . 4583) nil (4572 . 4580) nil (4571 . 4572) nil (4570 . 4571) (t 20601 . 30074) nil (#("
" 0 1 (rear-nonsticky t fontified t)) . 4795) nil (#("                return HttpResponse(res)" 0 16 (fontified t) 16 22 (face font-lock-keyword-face fontified t) 22 40 (fontified t)) . 4795) (t 20601 . 30058) nil (5112 . 5117) nil (#("+" 0 1 (fontified t)) . -5112) nil (#("+" 0 1 (fontified t)) . -5113) (t 20601 . 30049) nil (5150 . 5151) nil (5112 . 5114) nil (#(" " 0 1 (fontified t)) . -5112) nil (#("=" 0 1 (fontified t)) . -5113) nil (#(" " 0 1 (fontified t)) . -5114) nil (#("i" 0 1 (fontified t)) . -5115) nil (5113 . 5116) nil (#("+" 0 1 (fontified t)) . -5113) nil (#("=" 0 1 (fontified t)) . -5114) nil (#(" " 0 1 (fontified t)) . -5115) nil (#("1" 0 1 (fontified t)) . -5116) (t 20601 . 30021) nil (5112 . 5117) nil (#("+" 0 1 (fontified t)) . -5112) nil (#("+" 0 1 (fontified t)) . -5113) (t 20601 . 29944) nil (nil rear-nonsticky nil 4835 . 4836) (nil fontified nil 4835 . 4836) (nil fontified nil 4817 . 4835) (nil fontified nil 4811 . 4817) (nil fontified nil 4795 . 4811) (4795 . 4836) nil (#("
" 0 1 (fontified t)) . 4845) nil (#("                return HttpResponse(res)" 0 16 (fontified t) 16 22 (face font-lock-keyword-face fontified t) 22 40 (fontified t)) . 4845) (t 20601 . 29868) nil (5150 . 5156) nil (5139 . 5150) nil (5115 . 5139) nil (5114 . 5115) nil (5111 . 5114) nil (5087 . 5111) nil (5086 . 5087) nil (4945 . 4950) nil (4925 . 4945) nil (4924 . 4925) nil (4945 . 4950) nil (#("i" 0 1 (fontified t)) . -4945) nil (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -4946) (t 20601 . 19505) nil (4881 . 4885) nil (4861 . 4881) nil (4845 . 4861) nil (4844 . 4845) (t 20601 . 19436) nil (#("
" 0 1 (fontified t)) . 5017) nil (#("                        if i > 500: break" 0 24 (fontified t) 24 26 (fontified t face font-lock-keyword-face) 26 36 (fontified t) 36 41 (fontified t face font-lock-keyword-face)) . 5017) nil (#("
" 0 1 (fontified t)) . 5017) nil (#("                        i++" 0 27 (fontified t)) . 5017) nil (4904 . 4906) nil (#("while" 0 5 (fontified t face font-lock-keyword-face)) . 4904) nil (#("
" 0 1 (fontified t)) . 4884) nil (#("                    i = 0" 0 25 (fontified t)) . 4884) (t 20601 . 19361) nil (5108 . 5115) nil (5098 . 5108) nil (5074 . 5098) nil (5073 . 5074) nil (5070 . 5073) nil (5046 . 5070) nil (5045 . 5046) nil (#("                        
" 0 24 (fontified t) 24 25 (fontified t)) . 4982) nil (4982 . 5006) nil (4981 . 4982) nil (4904 . 4909) nil (4884 . 4904) nil (4883 . 4884) nil (4956 . 4980) (#("                            " 0 28 (fontified t)) . 4956) (t 20601 . 19289) nil (#("
" 0 1 (fontified t)) . 5066) nil (#("                            break" 0 28 (fontified t) 28 33 (fontified t face font-lock-keyword-face)) . 5066) nil (5024 . 5044) (#("                " 0 16 (fontified t)) . 5024) 5040 nil (5024 . 5040) (#("            " 0 12 (fontified t)) . 5024) 5036 nil (5024 . 5036) (#("        " 0 8 (fontified t)) . 5024) 5032 nil (5024 . 5032) (#("    " 0 4 (fontified t)) . 5024) 5028 nil (5024 . 5028) nil (#("                            " 0 28 (fontified t)) . 5024) 5052 nil (#("
" 0 1 (fontified t)) . 5024) nil (#("                        else:" 0 24 (fontified t) 24 28 (fontified t face font-lock-keyword-face) 28 29 (fontified t)) . 5024) nil (4954 . 4955) nil (4950 . 4954) nil (#("　" 0 1 (fontified t)) . -4950) nil (#(">" 0 1 (fontified t)) . -4951) nil (#("　" 0 1 (fontified t)) . -4952) nil (#("０" 0 1 (fontified t)) . -4953) (4951 . 4954) nil (#("=" 0 1 (fontified t)) . -4951) nil (#("=" 0 1 (fontified t)) . -4952) nil (4950 . 4953) nil (#(":" 0 1 (fontified t)) . -4950) nil (#(" " 0 1 (fontified t)) . -4909) nil (#("(" 0 1 (fontified t)) . -4910) nil (#("1" 0 1 (fontified t)) . -4911) nil (#(")" 0 1 (fontified t)) . -4912) nil (#(":" 0 1 (fontified t)) . -4913) nil (#("f" 0 1 (fontified t)) . 4914) nil (#("i" 0 1 (fontified t face font-lock-keyword-face)) . 4914) nil (#(" " 0 1 (fontified t)) . 4914) nil (4914 . 4915) (#("                        " 0 24 (fontified nil)) . 4914) (#("
" 0 1 (fontified t)) . -4914) (t 20601 . 17112) nil (5160 . 5165) nil (5132 . 5160) nil (5131 . 5132) nil (5047 . 5048) (5017 . 5022) (t 20601 . 16501) nil (5017 . 5026) nil (#("だ" 0 1 (fontified t)) . -5017) (5017 . 5018) (#("だt" 0 2 (fontified t)) . -5017) (5017 . 5019) (#("だ" 0 1 (fontified t)) . -5017) (5017 . 5018) (#("d" 0 1 (fontified t)) . -5017) (5017 . 5018) 5066 (t 20601 . 16156) nil (#("
" 0 1 (fontified t)) . 4685) nil (#("            return HttpResponse(method)" 0 12 (fontified t) 12 18 (fontified t face font-lock-keyword-face) 18 39 (fontified t)) . 4685) (t 20601 . 16081) nil (#(";" 0 1 (fontified t)) . -4724) (t 20601 . 16079) nil (4724 . 4725) nil (4719 . 4724) nil (#("h" 0 1 (fontified t)) . -4719) nil (#("t" 0 1 (fontified t)) . -4720) nil (#("o" 0 1 (fontified t)) . -4721) nil (4704 . 4722) nil (#("r" 0 1 (fontified t)) . -4704) nil (#("e" 0 1 (fontified t)) . -4705) nil (#("n" 0 1 (fontified t)) . -4706) nil (#("d" 0 1 (fontified t)) . -4707) nil (#("e" 0 1 (fontified t)) . -4708) nil (#("r" 0 1 (fontified t)) . -4709) nil (4697 . 4710) nil (#("れ" 0 1 (fontified t)) . -4697) (4697 . 4698) (#("れつ" 0 2 (fontified t)) . -4697) (4697 . 4699) (#("れt" 0 2 (fontified t)) . -4697) (4697 . 4699) (#("れ" 0 1 (fontified t)) . -4697) (4697 . 4698) (#("r" 0 1 (fontified t)) . -4697) (4685 . 4698) nil (4684 . 4685) (t 20600 . 64007) nil (#("]" 0 1 (fontified t)) . 4457) nil (#("'" 0 1 (face font-lock-string-face fontified t)) . 4457) nil (#("]" 0 1 (face font-lock-string-face fontified t)) . 4495) nil (#("'" 0 1 (face font-lock-string-face fontified t)) . 4495) nil (4490 . 4491) nil (#("'" 0 1 (face font-lock-string-face fontified t)) . 4490) nil (#("[" 0 1 (face font-lock-string-face fontified t)) . 4490) nil (4451 . 4452) nil (#("'" 0 1 (face font-lock-string-face fontified t)) . 4451) nil (#("[" 0 1 (fontified t)) . 4451) nil (#("]" 0 1 (fontified t)) . 4418) nil (#("'" 0 1 (face font-lock-string-face fontified t)) . 4418) nil (4409 . 4410) nil (#("[" 0 1 (fontified t)) . -4409) nil (#("'" 0 1 (face font-lock-string-face fontified t)) . -4410) nil (#("
" 0 1 (fontified t)) . 4335) nil (#("            return HttpResponse(json.dumps(entry.title))" 0 12 (fontified t) 12 18 (face font-lock-keyword-face fontified t) 18 56 (fontified t)) . 4335) (t 20600 . 63975) nil (4375 . 4376) nil (4388 . 4389) nil (4367 . 4377) (t 20600 . 63954) nil (#(";" 0 1 (fontified t)) . -4379) nil (4379 . 4380) nil (4367 . 4379) nil (#("json.dumps(date_formatentry.pub_date))" 0 37 (fontified t) 37 38 (fontified t)) . 4367) nil (4378 . 4389) (t 20600 . 63929) nil (4392 . 4393) nil (4367 . 4378) (t 20600 . 63837) nil (4367 . 4381) (t 20600 . 63819) nil (#("e" 0 1 (fontified t)) . -4367) nil (#("n" 0 1 (fontified t)) . -4368) nil (#("t" 0 1 (fontified t)) . -4369) nil (#("r" 0 1 (fontified t)) . -4370) nil (#("y" 0 1 (fontified t)) . -4371) nil (#("[" 0 1 (fontified t)) . -4372) nil (#("'" 0 1 (face font-lock-string-face fontified t)) . -4373) nil (#("p" 0 1 (face font-lock-string-face fontified t)) . -4374) nil (#("u" 0 1 (face font-lock-string-face fontified t)) . -4375) nil (#("b" 0 1 (face font-lock-string-face fontified t)) . -4376) nil (#("_" 0 1 (face font-lock-string-face fontified t)) . -4377) nil (#("d" 0 1 (face font-lock-string-face fontified t)) . -4378) nil (#("a" 0 1 (face font-lock-string-face fontified t)) . -4379) nil (#("t" 0 1 (face font-lock-string-face fontified t)) . -4380) nil (#("e" 0 1 (face font-lock-string-face fontified t)) . -4381) nil (#("'" 0 1 (face font-lock-string-face fontified t)) . -4382) nil (#("]" 0 1 (fontified t)) . -4383) nil (#("b" 0 1 (fontified t)) . -4384) nil (#("b" 0 1 (fontified t)) . -4385) nil (4384 . 4386) (t 20600 . 63799) nil (#(")" 0 1 (fontified t)) . -4384) nil (#("d" 0 1 (fontified t)) . -4367) nil (#("a" 0 1 (fontified t)) . -4368) nil (#("t" 0 1 (fontified t)) . -4369) nil (#("e" 0 1 (fontified t)) . -4370) nil (#("_" 0 1 (fontified t)) . -4371) nil (#("f" 0 1 (fontified t)) . -4372) nil (#("o" 0 1 (fontified t)) . -4373) nil (#("r" 0 1 (fontified t)) . -4374) nil (#("m" 0 1 (fontified t)) . -4375) nil (#("a" 0 1 (fontified t)) . -4376) nil (#("t" 0 1 (fontified t)) . -4377) nil (#("(" 0 1 (fontified t)) . -4378) (t 20600 . 63782) nil (4397 . 4398) nil (4396 . 4397) nil (4387 . 4396) nil (4367 . 4387) nil (#("i" 0 1 (fontified t)) . -4367) nil (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -4368) nil (#("i" 0 1 (fontified t)) . -4369) nil (#("n" 0 1 (fontified t)) . -4370) nil (#("s" 0 1 (fontified t)) . -4371) nil (#("t" 0 1 (fontified t)) . -4372) nil (#("a" 0 1 (fontified t)) . -4373) nil (#("n" 0 1 (fontified t)) . -4374) nil (4367 . 4375) nil (4347 . 4367) nil (4335 . 4347) nil (4334 . 4335) (t 20600 . 63704) nil (4578 . 4579) nil (4574 . 4578) nil (4554 . 4574) nil (#("json_data, mimetype='application/json')" 0 20 (fontified t) 20 21 (face font-lock-string-face fontified t) 21 37 (face font-lock-string-face fontified t) 37 38 (face font-lock-string-face fontified t) 38 39 (fontified t)) . 4554) nil (4504 . 4520) 4505 nil (4503 . 4505) nil (4486 . 4487) nil (#("
" 0 1 (face font-lock-string-face fontified t)) . -4502) nil (4502 . 4503) nil (#("}" 0 1 (face font-lock-string-face fontified t)) . -4502) nil (4501 . 4503) nil (4486 . 4501) nil (4481 . 4486) nil (4465 . 4481) nil (4464 . 4465) nil (4463 . 4464) nil (4454 . 4463) nil (#("(" 0 1 (fontified t)) . -4454) nil (4447 . 4455) nil (4440 . 4447) nil (4424 . 4440) nil (4423 . 4424) nil (4422 . 4423) nil (4421 . 4422) nil (4410 . 4421) nil (4390 . 4410) nil (4380 . 4390) nil (#("'" 0 1 (face font-lock-string-face fontified t)) . -4380) nil (#("p" 0 1 (face font-lock-string-face fontified t)) . -4381) nil (#("u" 0 1 (face font-lock-string-face fontified t)) . -4382) nil (#("b" 0 1 (face font-lock-string-face fontified t)) . -4383) nil (#("_" 0 1 (face font-lock-string-face fontified t)) . -4384) nil (#("d" 0 1 (face font-lock-string-face fontified t)) . -4385) nil (#("a" 0 1 (face font-lock-string-face fontified t)) . -4386) nil (#("t" 0 1 (face font-lock-string-face fontified t)) . -4387) nil (#("e" 0 1 (face font-lock-string-face fontified t)) . -4388) nil (#("'" 0 1 (face font-lock-string-face fontified t)) . -4389) nil (#(":" 0 1 (fontified t)) . -4390) nil (#(" " 0 1 (fontified t)) . -4391) nil (4390 . 4392) nil (4380 . 4390) nil (4364 . 4380) nil (4363 . 4364) nil (4350 . 4363) nil (4318 . 4321) nil (#("filter" 0 6 (fontified t)) . 4318) nil (4350 . 4353) nil (#("d" 0 1 (fontified t)) . -4350) nil (#("s" 0 1 (fontified t)) . -4351) nil (4351 . 4352) nil (#("i" 0 1 (fontified t)) . -4351) nil (#("m" 0 1 (fontified t)) . -4352) nil (4350 . 4353) nil (4338 . 4350) nil (#("            json_data = serializers.serialize('json', entry, ensure_ascii=False)" 0 46 (fontified t) 46 52 (face font-lock-string-face fontified t) 52 74 (fontified t) 74 79 (face font-lock-keyword-face fontified t) 79 80 (fontified t)) . 4338) (t 20600 . 63478) nil (4318 . 4324) nil (#("get" 0 3 (fontified t)) . 4318) (t 20600 . 62868) nil (#("
" 0 1 (fontified t)) . 4335) nil (#("            return HttpResponse(entry)" 0 12 (fontified t) 12 18 (face font-lock-keyword-face fontified t) 18 38 (fontified t)) . 4335) (t 20600 . 62844) nil (4364 . 4373) nil (#("c" 0 1 (fontified t)) . -4364) nil (4347 . 4365) nil (4335 . 4347) nil (4334 . 4335) nil (#("
" 0 1 (fontified t rear-nonsticky t)) . 4416) nil (#("            return HttpResponse()" 0 12 (fontified t) 12 18 (face font-lock-keyword-face fontified t) 18 33 (fontified t)) . 4416) (t 20600 . 62668) nil (nil fontified nil 4449 . 4450) (nil fontified nil 4434 . 4449) (nil fontified nil 4428 . 4434) (nil fontified nil 4416 . 4428) (4416 . 4450) nil (#("
" 0 1 (rear-nonsticky t fontified t)) . 4335) nil (#("            return HttpResponse()" 0 12 (fontified t) 12 18 (face font-lock-keyword-face fontified t) 18 33 (fontified t)) . 4335) (t 20600 . 62638) nil (nil rear-nonsticky nil 4368 . 4369) (nil fontified nil 4368 . 4369) (nil fontified nil 4353 . 4368) (nil fontified nil 4347 . 4353) (nil fontified nil 4335 . 4347) (4335 . 4369) nil (#("
" 0 1 (fontified t)) . 4285) nil (#("            return HttpResponse()" 0 12 (fontified t) 12 18 (face font-lock-keyword-face fontified t) 18 33 (fontified t)) . 4285) (t 20600 . 62627) nil (4307 . 4318) nil (#("o" 0 1 (fontified t)) . -4307) nil (4297 . 4308) nil (4285 . 4297) nil (4284 . 4285) nil (4331 . 4334) nil (#(")" 0 1 (rear-nonsticky t fontified t)) . -4284) nil (nil rear-nonsticky nil 4284 . 4285) (nil fontified nil 4284 . 4285) (nil fontified nil 4283 . 4284) (nil fontified nil 4282 . 4283) (nil fontified nil 4277 . 4282) (nil fontified nil 4275 . 4277) (nil fontified nil 4274 . 4275) (nil fontified nil 4265 . 4274) (nil fontified nil 4236 . 4265) (4236 . 4285) nil (4231 . 4236) nil (4219 . 4231) nil (4218 . 4219) nil (#("date_format(request.POST.get('pub_date', False)))" 0 29 (fontified t) 29 38 (face font-lock-string-face fontified t) 38 39 (face font-lock-string-face fontified t) 39 41 (fontified t) 41 46 (face font-lock-keyword-face fontified t) 46 47 (fontified t) 47 48 (fontified t rear-nonsticky t) 48 49 (fontified t)) . 4265) (t 20600 . 62493) nil (#("s" 0 1 (fontified t)) . -4930) nil (3382 . 3383) nil (3371 . 3372) nil (3362 . 3363) nil (3354 . 3355) nil (3344 . 3345) nil (3335 . 3336) nil (#("d" 0 1 (fontified t)) . -3335) nil (3335 . 3336) (t 20600 . 62139) nil (173 . 175) nil (#("i" 0 1 (fontified t)) . 173) nil (#("z" 0 1 (fontified t)) . 173) (t 20600 . 59569) nil (4450 . 4461) nil (4430 . 4450) nil (#("e" 0 1 (fontified t)) . -4430) nil (4429 . 4431) nil (4409 . 4429) nil (#("render_to_response('note_entry.html', {'entry': entry,})" 0 19 (fontified t) 19 20 (face font-lock-string-face fontified t) 20 35 (face font-lock-string-face fontified t) 35 36 (face font-lock-string-face fontified t) 36 39 (fontified t) 39 40 (face font-lock-string-face fontified t) 40 45 (face font-lock-string-face fontified t) 45 46 (face font-lock-string-face fontified t) 46 56 (fontified t)) . 4409) nil (4369 . 4389) nil (4349 . 4369) nil (4329 . 4349) nil (#("e" 0 1 (fontified t)) . -4329) nil (#(" " 0 1 (fontified t)) . -4330) nil (4321 . 4331) nil (#("j" 0 1 (fontified t)) . -4321) nil (4321 . 4322) nil (171 . 178) nil (#("c" 0 1 (fontified t)) . -171) nil (161 . 172) nil (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -161) nil (143 . 162) nil (#("d" 0 1 (fontified t)) . -143) nil (142 . 144) nil (4253 . 4261) nil (#("query" 0 5 (face font-lock-string-face fontified t)) . 4253) nil (4270 . 4282) nil (4269 . 4270) (t 20600 . 58229) nil (5223 . 5243) nil (#("t" 0 1 (fontified t)) . -5223) nil (#("." 0 1 (fontified t)) . -5224) nil (5223 . 5225) nil (5207 . 5223) nil (5206 . 5207) nil (5204 . 5206) nil (5184 . 5204) nil (5168 . 5184) (#("            " 0 12 (fontified t)) . 5168) 5180 nil (5168 . 5180) (#("        " 0 8 (fontified t)) . 5168) 5176 nil (5168 . 5176) (#("    " 0 4 (fontified t)) . 5168) 5172 nil (5168 . 5172) nil (#("                    " 0 20 (fontified t)) . 5168) 5188 nil (5168 . 5188) nil (#("                n = Note(pub_date=cnt['pub_date'], title=cnt['title'], body=cnt['body'])" 0 16 (fontified t) 16 38 (fontified t) 38 39 (face font-lock-string-face fontified t) 39 47 (face font-lock-string-face fontified t) 47 48 (face font-lock-string-face fontified t) 48 61 (fontified t) 61 62 (face font-lock-string-face fontified t) 62 67 (face font-lock-string-face fontified t) 67 68 (face font-lock-string-face fontified t) 68 80 (fontified t) 80 81 (face font-lock-string-face fontified t) 81 85 (face font-lock-string-face fontified t) 85 86 (face font-lock-string-face fontified t) 86 88 (fontified t)) . 5168) nil (5044 . 5057) nil (5024 . 5044) nil (5000 . 5024) nil (4999 . 5000) nil (#("b" 0 1 (fontified t)) . -4999) nil (#("r" 0 1 (fontified t)) . -5000) nil (#("e" 0 1 (fontified t)) . -5001) nil (#("a" 0 1 (fontified t)) . -5002) nil (#("k" 0 1 (face font-lock-keyword-face fontified t rear-nonsticky t)) . -5003) nil (4891 . 4892) nil (4871 . 4891) nil (#("
" 0 1 (fontified t)) . 4620) nil (#("                n = " 0 20 (fontified t)) . 4620) nil (4636 . 4640) nil (4620 . 4636) nil (4620 . 4621) nil (#("
" 0 1 (fontified t)) . 4620) nil (#("                n" 0 17 (fontified t)) . 4620) nil (4636 . 4637) nil (4620 . 4636) nil (4619 . 4620) nil (4843 . 4871) nil (4842 . 4843) nil (4841 . 4842) nil (#(" " 0 1 (fontified t)) . -4841) nil (#("b" 0 1 (fontified t)) . -4842) nil (#("r" 0 1 (fontified t)) . -4843) nil (#("e" 0 1 (fontified t)) . -4844) nil (#("a" 0 1 (fontified t)) . -4845) nil (#("k" 0 1 (face font-lock-keyword-face fontified t)) . -4846) nil (4987 . 5011) nil (4986 . 4987) nil (4839 . 4841) nil (#("i" 0 1 (fontified t)) . -4839) nil (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -4840) nil (4984 . 4986) nil (4980 . 4984) nil (4960 . 4980) (#("                            " 0 28 (fontified t)) . 4960) nil (#(")" 0 1 (fontified t)) . 4943) nil (4909 . 4912) nil (4837 . 4847) nil (4813 . 4837) (#("                    " 0 20 (fontified t)) . 4813) 4833 nil (4813 . 4833) (#("                " 0 16 (fontified t)) . 4813) 4829 nil (4813 . 4829) (#("            " 0 12 (fontified t)) . 4813) 4825 nil (4813 . 4825) (#("        " 0 8 (fontified t)) . 4813) 4821 nil (4813 . 4821) (#("    " 0 4 (fontified t)) . 4813) 4817 nil (4813 . 4817) nil (#("                            " 0 28 (fontified t)) . 4813) 4841 nil (4813 . 4841) nil (4812 . 4813) nil (4759 . 4787) (#("                        " 0 24 (fontified t)) . 4759) 4808 nil (#(")" 0 1 (fontified t)) . -4749) nil (4760 . 4784) (#("                    " 0 20 (fontified t)) . 4760) 4780 nil (4760 . 4780) (#("                " 0 16 (fontified t)) . 4760) 4776 nil (4760 . 4776) (#("            " 0 12 (fontified t)) . 4760) 4772 nil (4760 . 4772) (#("        " 0 8 (fontified t)) . 4760) 4768 nil (4760 . 4768) (#("    " 0 4 (fontified t)) . 4760) 4764 nil (4760 . 4764) nil (#("                        " 0 24 (fontified t)) . 4760) 4784 nil (4760 . 4784) (#("                    " 0 20 (fontified t)) . 4760) 4780 nil (4760 . 4780) (#("                " 0 16 (fontified t)) . 4760) 4776 nil (4760 . 4776) (#("            " 0 12 (fontified t)) . 4760) 4772 nil (4760 . 4772) (#("        " 0 8 (fontified t)) . 4760) 4768 nil (4760 . 4768) (#("    " 0 4 (fontified t)) . 4760) 4764 nil (4760 . 4764) nil (#("                        " 0 24 (fontified t)) . 4760) 4784 nil (4760 . 4784) (#(" " 0 1 (fontified t)) . 4760) nil (4759 . 4760) nil (#(" " 0 1 (fontified t)) . -4759) nil (#("b" 0 1 (fontified t)) . -4760) nil (#("r" 0 1 (fontified t)) . -4761) nil (#("e" 0 1 (fontified t)) . -4762) nil (#("a" 0 1 (fontified t)) . -4763) nil (#("k" 0 1 (face font-lock-keyword-face rear-nonsticky t fontified t)) . -4764) nil (4765 . 4766) (#("                        " 0 24 (fontified nil)) . 4765) (#("
" 0 1 (fontified t)) . -4765) 4790 nil (#("e" 0 1 (fontified t)) . -4790) nil (#("l" 0 1 (fontified t)) . -4791) nil (#("s" 0 1 (fontified t)) . -4792) nil (#("e" 0 1 (fontified t)) . -4793) nil (#(":" 0 1 (fontified t)) . -4794) nil (#(" " 0 1 (fontified t)) . -4795) nil (nil rear-nonsticky nil 4930 . 4931) (nil fontified nil 4926 . 4931) (nil fontified nil 4924 . 4926) (nil fontified nil 4923 . 4924) (nil fontified nil 4915 . 4923) (nil fontified nil 4883 . 4915) (4883 . 4931) nil (nil rear-nonsticky nil 4764 . 4765) (nil fontified nil 4760 . 4765) (nil fontified nil 4758 . 4760) (nil fontified nil 4757 . 4758) (nil fontified nil 4749 . 4757) (nil fontified nil 4717 . 4749) (4717 . 4765) nil (#("Note.objects.filter(pub_date=dt)).count(): break" 0 32 (fontified t) 32 40 (fontified t) 40 41 (rear-nonsticky t fontified t) 41 43 (fontified t) 43 48 (face font-lock-keyword-face fontified t)) . 4717) nil (4863 . 4883) nil (4862 . 4863) nil (4822 . 4838) (#("                        " 0 24 (fontified t)) . 4822) nil (#("
" 0 1 (fontified t)) . 4822) nil (#("                        if method == 'insert': break" 0 24 (fontified t) 24 26 (face font-lock-keyword-face fontified t) 26 37 (fontified t) 37 38 (face font-lock-string-face fontified t) 38 44 (face font-lock-string-face fontified t) 44 45 (face font-lock-string-face fontified t) 45 47 (fontified t) 47 52 (face font-lock-keyword-face fontified t)) . 4822) nil (#("
" 0 1 (fontified t)) . 4822) nil (#("                    elif:" 0 20 (fontified t) 20 24 (face font-lock-keyword-face fontified t) 24 25 (fontified t)) . 4822) nil (#("
" 0 1 (fontified t)) . 4822) nil (#("                        elif method == 'update': break" 0 24 (fontified t) 24 28 (face font-lock-keyword-face fontified t) 28 39 (fontified t) 39 40 (face font-lock-string-face fontified t) 40 46 (face font-lock-string-face fontified t) 46 47 (face font-lock-string-face fontified t) 47 49 (fontified t) 49 54 (face font-lock-keyword-face fontified t)) . 4822) nil (#("
" 0 1 (rear-nonsticky t fontified t)) . 4690) nil (#("                        le = " 0 24 (fontified t) 24 29 (fontified t)) . 4690) nil (nil rear-nonsticky nil 4787 . 4788) (nil fontified nil 4779 . 4788) (nil fontified nil 4747 . 4779) (4747 . 4788) nil (#("l" 0 1 (fontified t)) . -4747) nil (#("e" 0 1 (fontified t)) . -4748) nil (#("Note.objects.filter(pub_date=dt)).count()" 0 32 (fontified t) 32 41 (fontified t)) . 4719) nil (#("
" 0 1 (fontified t)) . 4761) nil (4690 . 4714) (#("                " 0 16 (fontified t)) . 4690) nil (nil rear-nonsticky nil 4752 . 4753) (nil fontified nil 4752 . 4753) (nil fontified nil 4743 . 4752) (nil fontified nil 4711 . 4743) (nil fontified nil 4706 . 4711) (nil fontified nil 4690 . 4706) (4690 . 4753) nil (4689 . 4690) nil (#("
" 0 1 (fontified t)) . 4620) nil (#("                le = Note.objects.filter(pub_date=dt)).count()" 0 16 (fontified t) 16 21 (fontified t) 21 53 (fontified t) 53 62 (fontified t)) . 4620) nil (4819 . 4820) (#("                            " 0 28 (fontified nil)) . 4819) (#("
" 0 1 (fontified t)) . -4819) 4849 nil (4818 . 4819) nil (4814 . 4818) nil (4790 . 4814) nil (4789 . 4790) nil (4782 . 4789) nil (4777 . 4782) nil (4753 . 4777) nil (#("                        if method == 'insert':" 0 24 (fontified t) 24 26 (face font-lock-keyword-face fontified t) 26 37 (fontified t) 37 38 (face font-lock-string-face fontified t) 38 44 (face font-lock-string-face fontified t) 44 45 (face font-lock-string-face fontified t) 45 46 (fontified t)) . 4753) nil (4751 . 4752) nil (4746 . 4751) nil (#("s" 0 1 (fontified t)) . -4746) nil (4742 . 4747) nil (#("t" 0 1 (fontified t)) . -4742) nil (#("h" 0 1 (fontified t)) . -4743) nil (#("i" 0 1 (fontified t)) . -4744) nil (4742 . 4745) nil (#("て" 0 1 (fontified t)) . -4742) (4742 . 4743) (#("てぃ" 0 2 (fontified t)) . -4742) (4742 . 4744) (#("てぃl" 0 3 (fontified t)) . -4742) (4742 . 4745) (#("てぃ" 0 2 (fontified t)) . -4742) (4742 . 4744) (#("th" 0 2 (fontified t)) . -4742) (4742 . 4744) (#("t" 0 1 (fontified t)) . -4742) (4722 . 4743) nil (#("                    lambda" 0 20 (fontified t) 20 26 (face font-lock-keyword-face fontified t)) . 4722) nil (4742 . 4748) nil (4722 . 4742) nil (4721 . 4722) nil (4720 . 4721) nil (4702 . 4720) nil (4683 . 4699) (#("                    " 0 20 (fontified t)) . 4683) 4706 nil (#(":" 0 1 (rear-nonsticky t fontified t)) . -4682) nil (nil rear-nonsticky nil 4682 . 4683) (nil fontified nil 4673 . 4683) (nil fontified nil 4641 . 4673) (4641 . 4683) nil (#("Note.objects.filter(pub_date=dt)).count():" 0 32 (fontified t) 32 42 (fontified t)) . 4665) nil (4638 . 4641) nil (#("n" 0 1 (face font-lock-builtin-face fontified t)) . -4638) nil (4636 . 4639) nil (#("c" 0 1 (fontified t)) . -4636) nil (4636 . 4637) nil (4620 . 4636) nil (#("                while (1):" 0 16 (fontified t) 16 21 (face font-lock-keyword-face fontified t) 21 26 (fontified t)) . 4620) nil (5073 . 5083) nil (5053 . 5073) nil (#(" " 0 1 (face font-lock-string-face fontified t)) . -5053) nil (5045 . 5054) nil (5025 . 5045) nil (#("t" 0 1 (fontified t)) . -5025) nil (#("h" 0 1 (fontified t)) . -5026) nil (#("r" 0 1 (fontified t)) . -5027) nil (#("o" 0 1 (fontified t)) . -5028) nil (#("w" 0 1 (fontified t)) . -5029) nil (5025 . 5030) nil (4997 . 5025) (#("                        " 0 24 (fontified t)) . 4997) 5021 nil (4995 . 4996) nil (4992 . 4995) nil (4972 . 4992) nil (4948 . 4972) nil (4947 . 4948) nil (4940 . 4947) nil (4939 . 4940) nil (4919 . 4939) nil (4895 . 4919) nil (4894 . 4895) nil (4893 . 4894) nil (4889 . 4893) nil (4869 . 4889) (#("                " 0 16 (fontified t)) . 4869) 4885 nil (4869 . 4885) (#("            " 0 12 (fontified t)) . 4869) 4881 nil (4869 . 4881) (#("        " 0 8 (fontified t)) . 4869) 4877 nil (4869 . 4877) (#("    " 0 4 (fontified t)) . 4869) 4873 nil (4869 . 4873) nil (#("                        " 0 24 (fontified t)) . 4869) 4893 nil (4869 . 4893) (#("                            " 0 28 (fontified t)) . 4869) 4897 nil (4862 . 4868) nil (4863 . 4891) nil (4862 . 4863) nil (4861 . 4862) nil (4858 . 4861) nil (4838 . 4858) nil (4814 . 4838) (#("                    " 0 20 (fontified t)) . 4814) 4834 nil (4814 . 4834) (#("                " 0 16 (fontified t)) . 4814) 4830 nil (4814 . 4830) (#("            " 0 12 (fontified t)) . 4814) 4826))
