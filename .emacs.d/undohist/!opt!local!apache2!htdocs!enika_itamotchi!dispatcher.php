
((digest . "47846a33fda1e7f281613e897ba7b691") (undo-list nil (#("
" 0 1 (fontified t)) . 484) ((marker) . -1) ((marker) . -1) ((marker) . -1) nil (#("$properties['query'] = $query;" 0 1 (fontified t) 1 11 (fontified t face font-lock-variable-name-face) 11 12 (fontified t) 12 19 (fontified t face font-lock-string-face) 19 24 (fontified t) 24 29 (fontified t face font-lock-variable-name-face) 29 30 (fontified t)) . 484) ((marker) . -30) nil (#("
" 0 1 (fontified t)) . 95) nil (#("$query = null;" 0 1 (fontified t) 1 6 (fontified t face font-lock-variable-name-face) 6 9 (fontified t) 9 13 (fontified t face font-lock-constant-face) 13 14 (fontified t)) . 95) (t 19938 . 23568) nil (108 . 109) nil (94 . 108) nil (514 . 515) nil (513 . 514) nil (504 . 513) nil (484 . 504) nil (#("#" 0 1 (fontified t)) . -484) nil (484 . 485) (t 19849 . 58342) nil (689 . 690) nil (688 . 689) nil (#("                                   $properties['status']);" 0 36 (fontified t) 36 46 (fontified t face font-lock-variable-name-face) 46 47 (fontified t) 47 55 (fontified t face font-lock-string-face) 55 58 (fontified t)) . 688) nil (#("
" 0 1 (fontified t)) . 688) nil (#("                                   $properties['template']," 0 36 (fontified t) 36 46 (fontified t face font-lock-variable-name-face) 46 47 (fontified t) 47 57 (fontified t face font-lock-string-face) 57 59 (fontified t)) . 688) nil (#("
" 0 1 (fontified t)) . 688) nil (#("                                   $properties['title']," 0 36 (fontified t) 36 46 (fontified t face font-lock-variable-name-face) 46 47 (fontified t) 47 54 (fontified t face font-lock-string-face) 54 56 (fontified t)) . 688) nil (#("
" 0 1 (fontified t)) . 688) nil (#("                                   $properties['dir_2']," 0 36 (fontified t) 36 46 (fontified t face font-lock-variable-name-face) 46 47 (fontified t) 47 54 (fontified t face font-lock-string-face) 54 56 (fontified t)) . 688) nil (#("
" 0 1 (fontified t)) . 688) nil (#("['dir_1']," 0 1 (fontified t) 1 8 (fontified t face font-lock-string-face) 8 10 (fontified t)) . 688) (t 19849 . 58089) nil (640 . 641) nil (639 . 640) nil (623 . 639) nil (616 . 623) nil (615 . 616) nil (#(" " 0 1 (fontified t)) . -615) nil (602 . 616) nil (555 . 557) (t 19849 . 58042) nil (537 . 538) nil (511 . 512) nil (504 . 511) (t 19849 . 57952) nil (904 . 905) nil (903 . 904) nil (902 . 903) nil (893 . 902) nil (#("0" 0 1 (face font-lock-variable-name-face fontified t)) . -893) nil (893 . 894) nil (#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -893) nil (#("-" 0 1 (fontified t)) . -894) nil (881 . 895) (t 19849 . 56481) nil (#("
" 0 1 (fontified t)) . 823) nil (#("                                   $properties['controller']," 0 35 (fontified t) 35 36 (fontified t) 36 46 (face font-lock-variable-name-face fontified t) 46 47 (fontified t) 47 59 (face font-lock-string-face fontified t) 59 61 (fontified t)) . 823) (t 19849 . 56383) nil (942 . 943) nil (941 . 942) nil (940 . 941) nil (#(":" 0 1 (fontified t)) . -940) nil (940 . 941) nil (931 . 940) nil (920 . 931) (#("$pro" 0 1 (fontified nil) 1 4 (face font-lock-variable-name-face fontified nil)) . -920) nil (920 . 924) nil (885 . 920) nil (884 . 885) nil (883 . 884) nil (869 . 883) nil (858 . 869) (#("$pro" 0 1 (fontified nil) 1 4 (face font-lock-variable-name-face fontified nil)) . -858) nil (858 . 862) nil (823 . 858) nil (822 . 823) nil (821 . 822) nil (820 . 821) nil (#(":" 0 1 (fontified t)) . -820) nil (820 . 821) nil (818 . 820) nil (798 . 818) nil (763 . 798) nil (762 . 763) nil (761 . 762) nil (752 . 761) nil (741 . 752) (#("$pro" 0 1 (fontified nil) 1 4 (face font-lock-variable-name-face fontified nil)) . -741) nil (741 . 745) nil (706 . 741) nil (705 . 706) nil (704 . 705) nil (695 . 704) nil (684 . 695) (#("$pro" 0 1 (fontified nil) 1 4 (face font-lock-variable-name-face fontified nil)) . -684) nil (684 . 688) nil (649 . 684) nil (648 . 649) nil (647 . 648) nil (638 . 647) nil (#(", $query);" 0 3 (fontified t) 3 8 (face font-lock-variable-name-face fontified t) 8 10 (fontified t)) . 638) (t 19849 . 55611) nil (590 . 591) nil (589 . 590) nil (584 . 588) (583 . 585) nil (566 . 583) nil (565 . 566) nil (559 . 565) nil (#("'" 0 1 (face font-lock-string-face fontified t)) . -559) nil (558 . 560) nil (546 . 558) nil (#("
" 0 1 (fontified t)) . -545) nil (#("r" 0 1 (face font-lock-warning-face fontified nil)) . -546) nil (#("e" 0 1 (face font-lock-warning-face fontified t)) . -547) nil (546 . 548) nil (546 . 547) nil (565 . 581) nil (#("Controller" 0 10 (face font-lock-type-face fontified t)) . 565) nil (532 . 533) nil (#("\"" 0 1 (face font-lock-string-face fontified t)) . 532) nil (543 . 544) nil (#("\"" 0 1 (face font-lock-string-face fontified t)) . -543) nil (544 . 545) nil (543 . 544) nil (#("'" 0 1 (face font-lock-string-face fontified t)) . -543) nil (529 . 544) nil (527 . 529) nil (#("7" 0 1 (face font-lock-string-face fontified t)) . -527) nil (524 . 528) nil (504 . 524) nil (#("
" 0 1 (fontified t rear-nonsticky t)) . -483) nil (#("
" 0 1 (fontified t)) . -484) nil (485 . 486) nil (484 . 485) nil (487 . 504) nil (#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -487) nil (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -488) nil (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -489) nil (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -490) nil (485 . 491) nil (485 . 486) nil (484 . 485) nil (#("
" 0 1 (fontified t)) . -484) nil (#("
" 0 1 (fontified t)) . -485) nil (517 . 527) nil (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -517) nil (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -518) nil (517 . 519) nil (#("2" 0 1 (face font-lock-variable-name-face fontified t)) . 517) nil (#("_" 0 1 (face font-lock-variable-name-face fontified t)) . 517) nil (#(", $dir" 0 2 (fontified t) 2 3 (fontified t) 3 6 (face font-lock-variable-name-face fontified t)) . 517) nil (#("_1" 0 2 (face font-lock-variable-name-face fontified t)) . 517) nil (#("dir" 0 3 (face font-lock-variable-name-face fontified t)) . 517) nil (485 . 486) nil (484 . 485) nil (520 . 528) nil (515 . 520) nil (#("uri" 0 3 (face font-lock-variable-name-face fontified t)) . 515) nil (335 . 340) nil (#("r" 0 1 (face font-lock-string-face fontified t)) . -335) nil (#("c" 0 1 (face font-lock-string-face fontified t)) . -336) nil (330 . 337) nil (#("s" 0 1 (face font-lock-warning-face fontified t)) . -330) nil (#("e" 0 1 (face font-lock-warning-face fontified t)) . -331) nil (#("l" 0 1 (face font-lock-warning-face fontified t)) . -332) nil (#("f" 0 1 (face font-lock-constant-face fontified t)) . -333) nil (#(":" 0 1 (fontified t)) . -334) nil (#(":" 0 1 (fontified t)) . -335) nil (#("D" 0 1 (face default fontified t)) . -336) nil (#("B" 0 1 (face default fontified t)) . -337) nil (#("_" 0 1 (face default fontified t)) . -338) nil (#("T" 0 1 (face default fontified t)) . -339) nil (#("A" 0 1 (face default fontified t)) . -340) nil (#("B" 0 1 (face default fontified t)) . -341) nil (#("L" 0 1 (face default fontified t)) . -342) nil (#("E" 0 1 (face default fontified t)) . -343) nil (nil rear-nonsticky nil 56 . 57) (nil fontified nil 56 . 57) (nil fontified nil 55 . 56) (nil fontified nil 53 . 55) (nil fontified nil 46 . 53) (nil fontified nil 43 . 46) (nil fontified nil 34 . 43) (nil fontified nil 31 . 34) (nil fontified nil 24 . 31) (nil fontified nil 8 . 24) (8 . 57) nil (#("
" 0 1 (fontified t)) . 46) nil (#("
" 0 1 (fontified t)) . 46) nil (#("error_reporting(E_ERROR | E_WARNING | E_PARSE);" 0 16 (face default fontified t) 16 23 (face font-lock-constant-face fontified t) 23 26 (fontified t) 26 35 (face font-lock-constant-face fontified t) 35 38 (fontified t) 38 45 (face font-lock-constant-face fontified t) 45 47 (fontified t)) . 46) nil (43 . 44) nil (42 . 43) nil (34 . 42) nil (#("e" 0 1 (face font-lock-string-face fontified t)) . -34) nil (28 . 35) nil (21 . 28) nil (7 . 21) nil (#("
" 0 1 (fontified t)) . -8) nil (#("r" 0 1 (face font-lock-warning-face fontified nil)) . -8) nil (#("e" 0 1 (face font-lock-warning-face fontified t)) . -9) nil (#("q" 0 1 (face font-lock-warning-face fontified nil)) . -10) nil (#("u" 0 1 (face font-lock-warning-face fontified t)) . -11) nil (#("i" 0 1 (face font-lock-warning-face fontified nil)) . -12) nil (#("r" 0 1 (face font-lock-warning-face fontified nil)) . -13) nil (#("e" 0 1 (face font-lock-keyword-face fontified t)) . -14) nil (8 . 15) nil (8 . 9) nil (7 . 8) nil (#("
" 0 1 (fontified t)) . 265) nil (#("$this->query = $query;" 0 1 (fontified t) 1 5 (face font-lock-constant-face fontified t) 5 7 (fontified t) 7 12 (face font-lock-variable-name-face fontified t) 12 16 (fontified t) 16 21 (face font-lock-variable-name-face fontified t) 21 22 (fontified t)) . 265) nil (118 . 119) nil (220 . 221) nil (#("    " 0 4 (fontified t)) . 436) (#("    " 0 4 (fontified t)) . 434) (393 . 395) (#("      " 0 6 (fontified t)) . 393) (#("    " 0 4 (fontified t)) . 369) (#("    " 0 4 (fontified t)) . 330) (#("    " 0 4 (fontified t)) . 287) (#("    " 0 4 (fontified t)) . 263) (#("    " 0 4 (fontified t)) . 220) nil (nil rear-nonsticky nil 502 . 503) (nil fontified nil 499 . 503) (nil fontified nil 493 . 499) (nil fontified nil 491 . 493) (nil fontified nil 483 . 491) (nil fontified nil 479 . 483) (nil fontified nil 469 . 479) (nil fontified nil 455 . 469) (nil fontified nil 450 . 455) (nil fontified nil 447 . 450) (nil fontified nil 440 . 447) (nil fontified nil 438 . 440) (nil fontified nil 430 . 438) (nil fontified nil 428 . 430) (nil fontified nil 420 . 428) (nil fontified nil 413 . 420) (nil fontified nil 408 . 413) (nil fontified nil 403 . 408) (nil fontified nil 402 . 403) (nil fontified nil 394 . 402) (nil fontified nil 391 . 394) (nil fontified nil 389 . 391) (nil fontified nil 382 . 389) (nil fontified nil 377 . 382) (nil fontified nil 374 . 377) (nil fontified nil 367 . 374) (nil fontified nil 365 . 367) (nil fontified nil 357 . 365) (nil fontified nil 355 . 357) (nil fontified nil 347 . 355) (nil fontified nil 340 . 347) (nil fontified nil 331 . 340) (nil fontified nil 329 . 331) (nil fontified nil 325 . 329) (nil fontified nil 323 . 325) (nil fontified nil 315 . 323) (nil fontified nil 314 . 315) (nil fontified nil 311 . 314) (nil fontified nil 308 . 311) (nil fontified nil 300 . 308) (nil fontified nil 292 . 300) (nil fontified nil 287 . 292) (nil fontified nil 283 . 287) (nil fontified nil 278 . 283) (nil fontified nil 276 . 278) (nil fontified nil 272 . 276) (nil fontified nil 264 . 272) (nil fontified nil 261 . 264) (nil fontified nil 258 . 261) (nil fontified nil 255 . 258) (nil fontified nil 247 . 255) (nil fontified nil 243 . 247) (nil fontified nil 238 . 243) (nil fontified nil 235 . 238) (nil fontified nil 230 . 235) (nil fontified nil 229 . 230) (nil fontified nil 224 . 229) (nil fontified nil 220 . 224) (220 . 503) nil (#("
" 0 1 (fontified t)) . 8) nil (#("
" 0 1 (fontified t)) . 8) nil (#("require_once ('class/Controller.php');" 0 12 (face font-lock-keyword-face fontified t) 12 14 (fontified t) 14 36 (face font-lock-string-face fontified t) 36 38 (fontified t)) . 8) nil (#("
" 0 1 (fontified t)) . 8) nil (#("
" 0 1 (fontified t)) . 8) nil (#(" */" 0 1 (fontified t) 1 3 (fontified t)) . 8) nil (#("
" 0 1 (fontified t)) . 8) nil (#(" * 'Controller'オブジェクトによって作成する" 0 3 (fontified t) 3 15 (face font-lock-string-face fontified t) 15 29 (face font-lock-warning-face fontified t)) . 8) nil (#("
" 0 1 (fontified t)) . 8) nil (#(" * URIからページに必要な構成を" 0 3 (fontified t) 3 18 (face font-lock-warning-face fontified t)) . 8) nil (#("
" 0 1 (fontified t)) . 8) nil (#(" * 一旦すべてこのプログラムへ送られる" 0 3 (fontified t) 3 20 (face font-lock-warning-face fontified t)) . 8) nil (#("
" 0 1 (fontified t)) . 8) nil (#(" * 'enika_itamotchi'以下のファイルへのリクエストは" 0 3 (fontified t) 3 20 (face font-lock-string-face fontified t) 20 35 (face font-lock-warning-face fontified t)) . 8) nil (#("
" 0 1 (fontified t)) . 8) nil (#(" * Apacheの設定により" 0 3 (fontified t) 3 15 (face font-lock-warning-face fontified t)) . 8) nil (#("
" 0 1 (fontified t)) . 8) nil (#("/* " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 8) (t 19849 . 23780) nil (#("
" 0 1 (fontified t)) . 228) nil (#("
" 0 1 (fontified t)) . 228) nil (#("session_regenerate_id(true);" 0 22 (fontified t face default) 22 26 (fontified t face font-lock-constant-face) 26 28 (fontified t)) . 228) nil (#("
" 0 1 (fontified t)) . 228) nil (#("session_start();" 0 14 (fontified t face default) 14 16 (fontified t)) . 228) (t 19844 . 51861) nil (#("
" 0 1 (fontified t)) . 228) nil (#("
" 0 1 (fontified t)) . 228) nil (#("if ($array[2] == 'admin') header (\"Location: $array[2]\");" 0 2 (face font-lock-keyword-face fontified t) 2 4 (fontified t) 4 5 (fontified t) 5 10 (face font-lock-variable-name-face fontified t) 10 11 (fontified t) 11 12 (face default fontified t) 12 17 (fontified t) 17 24 (face font-lock-string-face fontified t) 24 26 (fontified t) 26 32 (face default fontified t) 32 34 (face default fontified t) 34 55 (face font-lock-string-face fontified t) 55 57 (fontified t)) . 228) nil (#("
" 0 1 (fontified t)) . 228) nil (#("$array = explode($_SERVER['REQUEST_URI']);" 0 1 (fontified t) 1 6 (face font-lock-variable-name-face fontified t) 6 9 (fontified t) 9 17 (face default fontified t) 17 18 (fontified t) 18 25 (face font-lock-constant-face fontified t) 25 26 (fontified t) 26 39 (face font-lock-string-face fontified t) 39 42 (fontified t)) . 228) (t 19844 . 49381) nil (327 . 328) nil (326 . 327) nil (325 . 326) nil (317 . 325) nil (#("_" 0 1 (face font-lock-string-face fontified t)) . -317) nil (#("S" 0 1 (face font-lock-string-face fontified t)) . -318) nil (#("E" 0 1 (face font-lock-string-face fontified t)) . -319) nil (#("R" 0 1 (face font-lock-string-face fontified t)) . -320) nil (314 . 321) nil (304 . 314) nil (296 . 304) nil (295 . 296) nil (284 . 295) nil (274 . 284) nil (270 . 274) nil (269 . 270) nil (268 . 269) nil (260 . 268) nil (#("D" 0 1 (face font-lock-string-face fontified t)) . -260) nil (253 . 261) nil (245 . 253) (#("$_s" 0 1 (fontified nil) 1 3 (face font-lock-variable-name-face fontified nil)) . -245) nil (244 . 248) nil (237 . 244) nil (#("$" 0 1 (face font-lock-warning-face fontified t)) . -237) nil (234 . 238) nil (#("[" 0 1 (fontified t)) . -234) nil (#("]" 0 1 (fontified t)) . -235) nil (228 . 236) nil (#("if ($arra" 0 2 (face font-lock-keyword-face fontified t) 2 4 (fontified t) 4 5 (fontified t) 5 9 (face font-lock-variable-name-face fontified t)) . 228) nil (232 . 237) nil (#("p" 0 1 (face font-lock-warning-face fontified t)) . -232) nil (#("r" 0 1 (face font-lock-warning-face fontified t)) . -233) nil (#("e" 0 1 (face font-lock-warning-face fontified nil)) . -234) nil (#("g" 0 1 (face font-lock-warning-face fontified nil)) . -235) nil (231 . 236) nil (228 . 231) nil (228 . 229) nil (227 . 228) (t 19844 . 26964) nil (129 . 133) nil (#("作成する" 0 4 (fontified t face font-lock-comment-face)) . -129) (129 . 133) (#("さくせいする" 0 6 (fontified t face font-lock-comment-face)) . -129) (129 . 135) (#("さくせいすr" 0 6 (fontified t face font-lock-comment-face)) . -129) (129 . 135) (#("さくせいす" 0 5 (fontified t face font-lock-comment-face)) . -129) (129 . 134) (#("さくせいs" 0 5 (fontified t face font-lock-comment-face)) . -129) (129 . 134) (#("さくせい" 0 4 (fontified t face font-lock-comment-face)) . -129) (129 . 133) (#("さくせ" 0 3 (fontified t face font-lock-comment-face)) . -129) (129 . 132) (#("さくs" 0 3 (fontified t face font-lock-comment-face)) . -129) (129 . 132) (#("さく" 0 2 (fontified t face font-lock-comment-face)) . -129) (129 . 131) (#("さk" 0 2 (fontified t face font-lock-comment-face)) . -129) (129 . 131) (#("さ" 0 1 (fontified t face font-lock-comment-face)) . -129) (129 . 130) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -129) (129 . 130) (#("さ" 0 1 (fontified t face font-lock-comment-face)) . -129) nil (#("せ" 0 1 (fontified t face font-lock-comment-face)) . -130) nil (#("区" 0 1 (fontified t face font-lock-comment-face)) . -131) nil (129 . 132) (#("させ区" 0 3 (fontified nil)) . -129) (129 . 132) (#("させ区政" 0 4 (fontified t face font-lock-comment-face)) . -129) (129 . 133) (#("させくせい" 0 5 (fontified t face font-lock-comment-face)) . -129) (129 . 134) (#("させくせ" 0 4 (fontified t face font-lock-comment-face)) . -129) (129 . 133) (#("させくs" 0 4 (fontified t face font-lock-comment-face)) . -129) (129 . 133) (#("させく" 0 3 (fontified t face font-lock-comment-face)) . -129) (129 . 132) (#("させk" 0 3 (fontified t face font-lock-comment-face)) . -129) (129 . 132) (#("させ" 0 2 (fontified t face font-lock-comment-face)) . -129) (129 . 131) (#("さs" 0 2 (fontified t face font-lock-comment-face)) . -129) (129 . 131) (#("さ" 0 1 (fontified t face font-lock-comment-face)) . -129) (129 . 130) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -129) (125 . 130) nil (#("によって" 0 4 (fontified t face font-lock-comment-face)) . -125) (125 . 129) (#("によっt" 0 4 (fontified t face font-lock-comment-face)) . -125) (125 . 129) (#("によt" 0 3 (fontified t face font-lock-comment-face)) . -125) (125 . 128) (#("によ" 0 2 (fontified t face font-lock-comment-face)) . -125) (125 . 127) (#("にy" 0 2 (fontified t face font-lock-comment-face)) . -125) (125 . 127) (#("に" 0 1 (fontified t face font-lock-comment-face)) . -125) (125 . 126) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -125) (125 . 126) 103 nil (102 . 103) nil (#("を" 0 1 (fontified t face font-lock-comment-face)) . -102) (102 . 103) (#("w" 0 1 (fontified t face font-lock-comment-face)) . -102) (102 . 103) (#("は" 0 1 (fontified t face font-lock-comment-face)) . -102) nil (119 . 125) (#("オブジェクト" 0 6 (fontified t face font-lock-comment-face)) . -119) (119 . 125) (#("おぶじぇくと" 0 6 (fontified t face font-lock-comment-face)) . -119) (119 . 125) (#("おぶじぇくt" 0 6 (fontified t face font-lock-comment-face)) . -119) (119 . 125) (#("おぶじぇく" 0 5 (fontified t face font-lock-comment-face)) . -119) (119 . 124) (#("おぶじぇk" 0 5 (fontified t face font-lock-comment-face)) . -119) (119 . 124) (#("おぶじぇ" 0 4 (fontified t face font-lock-comment-face)) . -119) (119 . 123) (#("おぶj" 0 3 (fontified t face font-lock-comment-face)) . -119) (119 . 122) (#("おぶ" 0 2 (fontified t face font-lock-comment-face)) . -119) (119 . 121) (#("おb" 0 2 (fontified t face font-lock-comment-face)) . -119) (119 . 121) (#("お" 0 1 (fontified t face font-lock-comment-face)) . -119) (107 . 120) nil (#("C" 0 1 (fontified t face font-lock-comment-face)) . -107) nil (106 . 108) (104 . 105) (104 . 105) nil (103 . 104) nil (100 . 103) (#("構成は" 0 3 (fontified t face font-lock-comment-face)) . -100) (100 . 103) (#("こうせいは" 0 5 (fontified t face font-lock-comment-face)) . -100) (100 . 105) (#("こうせいh" 0 5 (fontified t face font-lock-comment-face)) . -100) (100 . 105) (#("こうせい" 0 4 (fontified t face font-lock-comment-face)) . -100) (100 . 104) (#("こうせ" 0 3 (fontified t face font-lock-comment-face)) . -100) (100 . 103) (#("こうs" 0 3 (fontified t face font-lock-comment-face)) . -100) (100 . 103) (#("こう" 0 2 (fontified t face font-lock-comment-face)) . -100) (100 . 102) (#("こ" 0 1 (fontified t face font-lock-comment-face)) . -100) (100 . 101) (#("k" 0 1 (fontified t face font-lock-comment-face)) . -100) (93 . 101) nil (#("ページに必要な" 0 7 (fontified t face font-lock-comment-face)) . -93) (93 . 100) (#("ぺーじにひつような" 0 9 (fontified t face font-lock-comment-face)) . -93) (93 . 102) (#("ぺーじにひつようn" 0 9 (fontified t face font-lock-comment-face)) . -93) (93 . 102) (#("ぺーじにひつよう" 0 8 (fontified t face font-lock-comment-face)) . -93) (93 . 101) (#("ぺーじにひつよ" 0 7 (fontified t face font-lock-comment-face)) . -93) (93 . 100) (#("ぺーじにひつy" 0 7 (fontified t face font-lock-comment-face)) . -93) (93 . 100) (#("ぺーじにひつ" 0 6 (fontified t face font-lock-comment-face)) . -93) (93 . 99) (#("ぺーじにひt" 0 6 (fontified t face font-lock-comment-face)) . -93) (93 . 99) (#("ぺーじにひ" 0 5 (fontified t face font-lock-comment-face)) . -93) (93 . 98) (#("ぺーじにh" 0 5 (fontified t face font-lock-comment-face)) . -93) (93 . 98) (#("ぺーじに" 0 4 (fontified t face font-lock-comment-face)) . -93) (93 . 97) (#("ぺーじn" 0 4 (fontified t face font-lock-comment-face)) . -93) (93 . 97) (#("ぺーじ" 0 3 (fontified t face font-lock-comment-face)) . -93) (93 . 96) (#("ぺーj" 0 3 (fontified t face font-lock-comment-face)) . -93) (93 . 96) (#("ぺー" 0 2 (fontified t face font-lock-comment-face)) . -93) (93 . 95) (#("ぺ" 0 1 (fontified t face font-lock-comment-face)) . -93) (93 . 94) (#("p" 0 1 (fontified t face font-lock-comment-face)) . -93) (93 . 94) (#("pr" 0 2 (fontified t face font-lock-comment-face)) . -93) (93 . 95) (#("pr−" 0 3 (fontified t face font-lock-comment-face)) . -93) (93 . 96) (#("pr" 0 2 (fontified t face font-lock-comment-face)) . -93) (93 . 95) (#("p" 0 1 (fontified t face font-lock-comment-face)) . -93) (93 . 94) (#("サ" 0 1 (fontified t face font-lock-comment-face)) . -93) nil (#("イ" 0 1 (fontified t face font-lock-comment-face)) . -94) nil (#("ト" 0 1 (fontified t face font-lock-comment-face)) . -95) nil (#("に" 0 1 (fontified t face font-lock-comment-face)) . -96) nil (#("必" 0 1 (fontified t face font-lock-comment-face)) . -97) nil (#("要" 0 1 (fontified t face font-lock-comment-face)) . -98) nil (#("な" 0 1 (fontified t face font-lock-comment-face)) . -99) nil (#("k" 0 1 (fontified t face font-lock-comment-face)) . -100) (97 . 101) (#("必要な" 0 3 (fontified t face font-lock-comment-face)) . -97) (97 . 100) (#("ひつような" 0 5 (fontified t face font-lock-comment-face)) . -97) (97 . 102) (#("ひつようn" 0 5 (fontified t face font-lock-comment-face)) . -97) (97 . 102) (#("ひつよう" 0 4 (fontified t face font-lock-comment-face)) . -97) (97 . 101) (#("ひつよ" 0 3 (fontified t face font-lock-comment-face)) . -97) (97 . 100) (#("ひつy" 0 3 (fontified t face font-lock-comment-face)) . -97) (97 . 100) (#("ひつ" 0 2 (fontified t face font-lock-comment-face)) . -97) (97 . 99) (#("ひt" 0 2 (fontified t face font-lock-comment-face)) . -97) (97 . 99) (#("ひ" 0 1 (fontified t face font-lock-comment-face)) . -97) (97 . 98) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -97) (93 . 98) (#("サイトに" 0 4 (fontified t face font-lock-comment-face)) . -93) (93 . 97) (#("さいとに" 0 4 (fontified t face font-lock-comment-face)) . -93) (93 . 97) (#("さいとn" 0 4 (fontified t face font-lock-comment-face)) . -93) (93 . 97) (#("さいと" 0 3 (fontified t face font-lock-comment-face)) . -93) (93 . 96) (#("さいt" 0 3 (fontified t face font-lock-comment-face)) . -93) (93 . 96) (#("さい" 0 2 (fontified t face font-lock-comment-face)) . -93) (93 . 95) (#("さ" 0 1 (fontified t face font-lock-comment-face)) . -93) (93 . 94) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -93) (91 . 94) (#("から" 0 2 (fontified t face font-lock-comment-face)) . -91) (91 . 93) (#("かr" 0 2 (fontified t face font-lock-comment-face)) . -91) (91 . 93) (#("か" 0 1 (fontified t face font-lock-comment-face)) . -91) (91 . 92) (#("k" 0 1 (fontified t face font-lock-comment-face)) . -91) (87 . 92) nil (80 . 84) (#("送られる" 0 4 (fontified t face font-lock-comment-face)) . -80) (80 . 84) (#("おくられる" 0 5 (fontified t face font-lock-comment-face)) . -80) (80 . 85) (#("おくられr" 0 5 (fontified t face font-lock-comment-face)) . -80) (80 . 85) (#("おくられ" 0 4 (fontified t face font-lock-comment-face)) . -80) (80 . 84) (#("おくられs" 0 5 (fontified t face font-lock-comment-face)) . -80) (80 . 85) (#("おくられ" 0 4 (fontified t face font-lock-comment-face)) . -80) (80 . 84) (#("おくられr" 0 5 (fontified t face font-lock-comment-face)) . -80) (80 . 85) (#("おくられ" 0 4 (fontified t face font-lock-comment-face)) . -80) (80 . 84) (#("おくらr" 0 4 (fontified t face font-lock-comment-face)) . -80) (80 . 84) (#("おくら" 0 3 (fontified t face font-lock-comment-face)) . -80) (80 . 83) (#("おくr" 0 3 (fontified t face font-lock-comment-face)) . -80) (80 . 83) (#("おく" 0 2 (fontified t face font-lock-comment-face)) . -80) (80 . 82) (#("おk" 0 2 (fontified t face font-lock-comment-face)) . -80) (80 . 82) (#("お" 0 1 (fontified t face font-lock-comment-face)) . -80) (74 . 81) nil (#("プログラムへ" 0 6 (fontified t face font-lock-comment-face)) . -74) (74 . 80) (#("ぷろぐらむへ" 0 6 (fontified t face font-lock-comment-face)) . -74) (74 . 80) (#("ぷろぐらむh" 0 6 (fontified t face font-lock-comment-face)) . -74) (74 . 80) (#("ぷろぐらむ" 0 5 (fontified t face font-lock-comment-face)) . -74) (74 . 79) (#("ぷろぐらm" 0 5 (fontified t face font-lock-comment-face)) . -74) (74 . 79) (#("ぷろぐら" 0 4 (fontified t face font-lock-comment-face)) . -74) (74 . 78) (#("ぷろぐらっ" 0 5 (fontified t face font-lock-comment-face)) . -74) (74 . 79) (#("ぷろぐらっm" 0 6 (fontified t face font-lock-comment-face)) . -74) (74 . 80) (#("ぷろぐらm" 0 5 (fontified t face font-lock-comment-face)) . -74) (74 . 79) (#("ぷろぐら" 0 4 (fontified t face font-lock-comment-face)) . -74) (74 . 78) (#("ぷろぐらめ" 0 5 (fontified t face font-lock-comment-face)) . -74) (74 . 79) (#("ぷろぐらm" 0 5 (fontified t face font-lock-comment-face)) . -74) (74 . 79) (#("ぷろぐら" 0 4 (fontified t face font-lock-comment-face)) . -74) (74 . 78) (#("ぷろぐr" 0 4 (fontified t face font-lock-comment-face)) . -74) (74 . 78) (#("ぷろぐ" 0 3 (fontified t face font-lock-comment-face)) . -74) (74 . 77) (#("ぷろg" 0 3 (fontified t face font-lock-comment-face)) . -74) (74 . 77) (#("ぷろ" 0 2 (fontified t face font-lock-comment-face)) . -74) (74 . 76) (#("ぷr" 0 2 (fontified t face font-lock-comment-face)) . -74) (74 . 76) (#("ぷ" 0 1 (fontified t face font-lock-comment-face)) . -74) (74 . 75) (#("p" 0 1 (fontified t face font-lock-comment-face)) . -74) (74 . 75) (#("P" 0 1 (fontified t face font-lock-comment-face)) . -74) nil (#("U" 0 1 (fontified t face font-lock-comment-face)) . -75) nil (72 . 76) (#("この" 0 2 (fontified t face font-lock-comment-face)) . -72) (72 . 74) (#("こn" 0 2 (fontified t face font-lock-comment-face)) . -72) (72 . 74) (#("こ" 0 1 (fontified t face font-lock-comment-face)) . -72) (72 . 73) (#("k" 0 1 (fontified t face font-lock-comment-face)) . -72) (69 . 73) (#("すべて" 0 3 (fontified t face font-lock-comment-face)) . -69) (69 . 72) (#("すべt" 0 3 (fontified t face font-lock-comment-face)) . -69) (69 . 72) (#("すべ" 0 2 (fontified t face font-lock-comment-face)) . -69) (69 . 71) (#("すb" 0 2 (fontified t face font-lock-comment-face)) . -69) (69 . 71) (#("す" 0 1 (fontified t face font-lock-comment-face)) . -69) (69 . 70) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -69) (67 . 70) (#("一旦" 0 2 (fontified t face font-lock-comment-face)) . -67) (67 . 69) (#("いったん" 0 4 (fontified t face font-lock-comment-face)) . -67) (67 . 71) (#("いったn" 0 4 (fontified t face font-lock-comment-face)) . -67) (67 . 71) (#("いった" 0 3 (fontified t face font-lock-comment-face)) . -67) (67 . 70) (#("いっt" 0 3 (fontified t face font-lock-comment-face)) . -67) (67 . 70) (#("いt" 0 2 (fontified t face font-lock-comment-face)) . -67) (67 . 69) (#("い" 0 1 (fontified t face font-lock-comment-face)) . -67) (66 . 68) nil (62 . 63) (#("は" 0 1 (fontified t face font-lock-comment-face)) . -62) (62 . 63) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -62) (57 . 63) nil (#("リクエスト" 0 5 (fontified t face font-lock-comment-face)) . -57) (57 . 62) (#("りくえすと" 0 5 (fontified t face font-lock-comment-face)) . -57) (57 . 62) (#("りくえすt" 0 5 (fontified t face font-lock-comment-face)) . -57) (57 . 62) (#("りくえす" 0 4 (fontified t face font-lock-comment-face)) . -57) (57 . 61) (#("りくえs" 0 4 (fontified t face font-lock-comment-face)) . -57) (57 . 61) (#("りくえ" 0 3 (fontified t face font-lock-comment-face)) . -57) (57 . 60) (#("りく" 0 2 (fontified t face font-lock-comment-face)) . -57) (57 . 59) (#("りk" 0 2 (fontified t face font-lock-comment-face)) . -57) (57 . 59) (#("り" 0 1 (fontified t face font-lock-comment-face)) . -57) (57 . 58) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -57) (57 . 58) (nil rear-nonsticky nil 56 . 57) (nil fontified nil 31 . 57) (31 . 57) nil (#("Y" 0 1 (fontified t face font-lock-comment-face)) . -31) nil (31 . 32) nil (#("'enika_itamotchi'以下のファイルへの" 0 26 (fontified t face font-lock-comment-face)) . 27) nil (#("あ" 0 1 (fontified t face font-lock-comment-face)) . -57) (56 . 58) nil (47 . 53) (#("ファイルへの" 0 6 (fontified t face font-lock-comment-face)) . -47) (47 . 53) (#("ふぁいるへの" 0 6 (fontified t face font-lock-comment-face)) . -47) (47 . 53) (#("ふぁいるへn" 0 6 (fontified t face font-lock-comment-face)) . -47) (47 . 53) (#("ふぁいるへ" 0 5 (fontified t face font-lock-comment-face)) . -47) (47 . 52) (#("ふぁいるh" 0 5 (fontified t face font-lock-comment-face)) . -47) (47 . 52) (#("ふぁいる" 0 4 (fontified t face font-lock-comment-face)) . -47) (47 . 51) (#("ふぁいr" 0 4 (fontified t face font-lock-comment-face)) . -47) (47 . 51) (#("ふぁい" 0 3 (fontified t face font-lock-comment-face)) . -47) (47 . 50) (#("ふぁ" 0 2 (fontified t face font-lock-comment-face)) . -47) (47 . 49) (#("f" 0 1 (fontified t face font-lock-comment-face)) . -47) (44 . 48) (#("以下の" 0 3 (fontified t face font-lock-comment-face)) . -44) (44 . 47) (#("いかの" 0 3 (fontified t face font-lock-comment-face)) . -44) (44 . 47) (#("いかn" 0 3 (fontified t face font-lock-comment-face)) . -44) (44 . 47) (#("いか" 0 2 (fontified t face font-lock-comment-face)) . -44) (44 . 46) (#("いk" 0 2 (fontified t face font-lock-comment-face)) . -44) (44 . 46) (#("い" 0 1 (fontified t face font-lock-comment-face)) . -44) (34 . 45) nil (28 . 34) (#("え" 0 1 (fontified t face font-lock-comment-face)) . -28) (28 . 29) (#("えに" 0 2 (fontified t face font-lock-comment-face)) . -28) (28 . 30) (#("えにk" 0 3 (fontified t face font-lock-comment-face)) . -28) (28 . 31) (#("えに" 0 2 (fontified t face font-lock-comment-face)) . -28) (28 . 30) (#("えn" 0 2 (fontified t face font-lock-comment-face)) . -28) (28 . 30) (#("え" 0 1 (fontified t face font-lock-comment-face)) . -28) (27 . 29) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -27) (24 . 28) (#("により" 0 3 (fontified t face font-lock-comment-face)) . -24) (24 . 27) (#("によr" 0 3 (fontified t face font-lock-comment-face)) . -24) (24 . 27) (#("によ" 0 2 (fontified t face font-lock-comment-face)) . -24) (24 . 26) (#("にy" 0 2 (fontified t face font-lock-comment-face)) . -24) (24 . 26) (#("に" 0 1 (fontified t face font-lock-comment-face)) . -24) (24 . 25) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -24) (22 . 25) (#("設定" 0 2 (fontified t face font-lock-comment-face)) . -22) (22 . 24) (#("せってい" 0 4 (fontified t face font-lock-comment-face)) . -22) (22 . 26) (#("せって" 0 3 (fontified t face font-lock-comment-face)) . -22) (22 . 25) (#("せっt" 0 3 (fontified t face font-lock-comment-face)) . -22) (22 . 25) (#("せt" 0 2 (fontified t face font-lock-comment-face)) . -22) (22 . 24) (#("せ" 0 1 (fontified t face font-lock-comment-face)) . -22) (22 . 23) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -22) (21 . 23) (#("の" 0 1 (fontified t face font-lock-comment-face)) . -21) (21 . 22) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -21) (14 . 22) nil (27 . 28) nil (26 . 27) nil (24 . 25) (24 . 25) nil (23 . 24) nil (21 . 22) (21 . 22) nil (20 . 21) nil (18 . 19) (18 . 19) nil (17 . 18) nil (15 . 16) (15 . 16) nil (14 . 15) nil (12 . 13) (12 . 13) nil (11 . 12) nil (9 . 11) nil (8 . 9) nil (7 . 8) (t 19844 . 14222) nil (#("error_reporting" 0 15 (face font-lock-warning-face fontified t)) . 95) nil (nil rear-nonsticky nil 94 . 95) (nil fontified nil 48 . 95) (48 . 95) nil (48 . 63) nil (48 . 49) nil (47 . 48) (t 19844 . 11574) nil (94 . 95) nil (47 . 48) nil (#("    " 0 4 (fontified t)) . 64) nil (#("a" 0 1 (fontified t face font-lock-warning-face)) . -64) nil (64 . 65) nil (#("    " 0 4 (fontified t)) . 47) (t 19844 . 11543) nil (nil rear-nonsticky nil 99 . 100) (nil fontified nil 98 . 100) (nil fontified nil 94 . 98) (nil fontified nil 72 . 94) (nil fontified nil 68 . 72) (nil fontified nil 67 . 68) (nil fontified nil 65 . 67) (nil fontified nil 51 . 65) (nil fontified nil 47 . 51) (47 . 100) (t 19844 . 11438) nil (#("
" 0 1 (fontified t)) . 48) nil (#("$uri = " 0 1 (fontified t) 1 2 (fontified t face font-lock-variable-name-face) 2 3 (fontified t face font-lock-variable-name-face) 3 4 (fontified t face font-lock-variable-name-face) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . 48) nil (#("$uri;" 0 1 (fontified t) 1 2 (fontified t face font-lock-variable-name-face) 2 3 (fontified t face font-lock-variable-name-face) 3 4 (fontified t face font-lock-variable-name-face) 4 5 (fontified t)) . 116) nil (nil rear-nonsticky nil 115 . 116) (nil fontified nil 113 . 116) (nil fontified nil 100 . 113) (nil fontified nil 99 . 100) (nil fontified nil 92 . 99) (nil fontified nil 89 . 92) (nil fontified nil 86 . 89) (nil fontified nil 77 . 86) (77 . 116) nil (#("explode ('?', $_SERVER['REQUEST_URI']);" 0 9 (fontified t face default) 9 12 (fontified t face font-lock-string-face) 12 15 (fontified t) 15 22 (fontified t face font-lock-constant-face) 22 23 (fontified t) 23 36 (fontified t face font-lock-string-face) 36 39 (fontified t)) . 55) (t 19844 . 11351) nil (53 . 54) nil (52 . 53) nil (51 . 52) nil (50 . 51) nil (49 . 50) nil (48 . 49) nil (48 . 88) nil (74 . 75) nil (73 . 74) nil (72 . 73) nil (71 . 72) nil (70 . 71) nil (#(" explode ('?', $_SERVER['REQUEST_URI']);" 0 1 (fontified nil) 1 10 (fontified nil face default) 10 13 (fontified nil face font-lock-string-face) 13 16 (fontified nil) 16 23 (fontified nil face font-lock-constant-face) 23 24 (fontified nil) 24 37 (fontified nil face font-lock-string-face) 37 39 (fontified nil) 39 40 (fontified nil rear-nonsticky nil)) . 70) (nil rear-nonsticky t 109 . 110) nil (70 . 71) nil (47 . 48) nil (#("
$query = null" 0 1 (fontified t) 1 2 (fontified t) 2 7 (fontified t face font-lock-variable-name-face) 7 10 (fontified t) 10 14 (fontified t face font-lock-constant-face)) . 47) nil (#(";" 0 1 (fontified t)) . 61) nil (#("
" 0 1 (fontified t)) . 62) nil (62 . 63) nil (61 . 62) nil (47 . 61) nil (#("
" 0 1 (fontified t)) . 47) nil (#(" " 0 1 (fontified t)) . 70) nil (nil rear-nonsticky nil 109 . 110) (70 . 110) nil (#("$" 0 1 (fontified t face font-lock-warning-face)) . 70) nil (#("u" 0 1 (fontified t face font-lock-variable-name-face)) . 71) nil (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . 72) nil (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . 73) nil (#(";" 0 1 (fontified t)) . 74) nil (#(" explode ('?', $_SERVER['REQUEST_URI']);" 0 1 (fontified t) 1 10 (fontified t face default) 10 13 (fontified t face font-lock-string-face) 13 16 (fontified t) 16 23 (fontified t face font-lock-constant-face) 23 24 (fontified t) 24 37 (fontified t face font-lock-string-face) 37 40 (fontified t)) . 48) (t 19844 . 11341) nil (48 . 88) nil (74 . 75) nil (73 . 74) nil (72 . 73) nil (71 . 72) nil (70 . 71) nil (#(" explode ('?', $_SERVER['REQUEST_URI']);" 0 1 (fontified nil) 1 10 (fontified nil face default) 10 13 (fontified nil face font-lock-string-face) 13 16 (fontified nil) 16 23 (fontified nil face font-lock-constant-face) 23 24 (fontified nil) 24 37 (fontified nil face font-lock-string-face) 37 39 (fontified nil) 39 40 (fontified nil rear-nonsticky nil)) . 70) (nil rear-nonsticky t 109 . 110) nil (70 . 71) nil (47 . 48) nil (#("
$query = null" 0 1 (fontified t) 1 2 (fontified t) 2 7 (fontified t face font-lock-variable-name-face) 7 10 (fontified t) 10 14 (fontified t face font-lock-constant-face)) . 47) nil (#(";" 0 1 (fontified t)) . 61) nil (#("
" 0 1 (fontified t)) . 62) (t 19844 . 11251) nil (62 . 63) nil (61 . 62) nil (47 . 61) nil (#("
" 0 1 (fontified t)) . -47) nil (#(" " 0 1 (fontified t)) . -70) nil (nil rear-nonsticky nil 109 . 110) (nil fontified nil 107 . 110) (nil fontified nil 94 . 107) (nil fontified nil 93 . 94) (nil fontified nil 86 . 93) (nil fontified nil 83 . 86) (nil fontified nil 80 . 83) (nil fontified nil 71 . 80) (nil fontified nil 70 . 71) (70 . 110) nil (#("$" 0 1 (fontified nil face font-lock-warning-face)) . -70) nil (#("u" 0 1 (fontified nil face font-lock-variable-name-face)) . -71) nil (#("r" 0 1 (fontified nil face font-lock-variable-name-face)) . -72) nil (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -73) nil (#(";" 0 1 (fontified t)) . -74) nil (#(" explode ('?', $_SERVER['REQUEST_URI']);" 0 1 (fontified t) 1 10 (fontified t face default) 10 13 (fontified t face font-lock-string-face) 13 16 (fontified t) 16 23 (fontified t face font-lock-constant-face) 23 24 (fontified t) 24 37 (fontified t face font-lock-string-face) 37 40 (fontified t)) . 48) nil (#("$" 0 1 (fontified t face font-lock-warning-face)) . -48) nil (#("u" 0 1 (fontified t face font-lock-variable-name-face)) . -49) nil (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -50) nil (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -51) nil (#(" " 0 1 (fontified t)) . -52) nil (#("=" 0 1 (fontified t)) . -53) (t 19844 . 7478) nil (#(" " 0 1 (fontified t)) . 260) nil (#("," 0 1 (fontified t)) . 260) nil (#(", $sub" 0 2 (fontified t) 2 3 (fontified t) 3 6 (face font-lock-variable-name-face fontified t)) . 260) nil (#("$theme" 0 1 (fontified t) 1 6 (face font-lock-variable-name-face fontified t)) . 260) nil (#("
" 0 1 (fontified t)) . 224) nil (#("list($theme, $sub) = explode ('/', $uri);" 0 5 (face default fontified t) 5 6 (fontified t) 6 11 (face font-lock-variable-name-face fontified t) 11 13 (fontified t) 13 14 (fontified t) 14 17 (face font-lock-variable-name-face fontified t) 17 21 (fontified t) 21 28 (face default fontified t) 28 30 (face default fontified t) 30 31 (face font-lock-string-face fontified t) 31 32 (face font-lock-string-face fontified t) 32 33 (face font-lock-string-face fontified t) 33 35 (fontified t) 35 36 (fontified t) 36 39 (face font-lock-variable-name-face fontified t) 39 41 (fontified t)) . 224) (t 19844 . 7385) nil (323 . 324) nil (322 . 323) nil (318 . 322) nil (314 . 318) nil (308 . 314) nil (300 . 308) nil (295 . 300) nil (287 . 295) nil (267 . 287) nil (#("echo \"uri: $uri, theme: $theme, sub: $sub, query: $query\";" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 57 (face font-lock-string-face fontified t) 57 58 (fontified t)) . 267) (t 19844 . 7313) nil (222 . 223) nil (221 . 222) nil (215 . 221) nil (211 . 215) nil (#(" " 0 1 (fontified t)) . -211) nil (#("," 0 1 (fontified t)) . -212) nil (212 . 213) nil (209 . 212) nil (196 . 209) nil (#("e" 0 1 (face font-lock-string-face fontified t)) . -196) nil (193 . 197) nil (191 . 193) nil (183 . 184) (183 . 190) nil (#("p" 0 1 (face font-lock-warning-face fontified nil)) . -183) nil (#("b" 0 1 (face font-lock-warning-face fontified t)) . -184) nil (#("r" 0 1 (face font-lock-warning-face fontified t)) . -185) nil (#("k" 0 1 (face font-lock-warning-face fontified t)) . -186) nil (#(" " 0 1 (fontified t)) . -187) nil (#("(" 0 1 (face default fontified t)) . -188) nil (#("'" 0 1 (face font-lock-string-face fontified t)) . -189) nil (188 . 190) nil (173 . 188) nil (172 . 173) nil (#("," 0 1 (fontified t)) . -178) nil (#(" " 0 1 (fontified t)) . -179) (t 19844 . 7122) nil (#("
" 0 1 (fontified t)) . 217) nil (#("$query = (array_key_exists(1, $uri_pre)) ? $uri_pre[1] : null;" 0 1 (fontified t) 1 6 (face font-lock-variable-name-face fontified t) 6 8 (fontified t) 8 10 (fontified t) 10 27 (face default fontified t) 27 28 (face default fontified t) 28 30 (fontified t) 30 31 (fontified t) 31 38 (face font-lock-variable-name-face fontified t) 38 43 (fontified t) 43 44 (fontified t) 44 51 (face font-lock-variable-name-face fontified t) 51 52 (fontified t) 52 53 (face default fontified t) 53 57 (fontified t) 57 61 (face font-lock-constant-face fontified t) 61 62 (fontified t)) . 217) nil (#("
" 0 1 (fontified t)) . 217) nil (#("$sub   = (array_key_exists(3, $uris)) ? $uris[3] : null;" 0 1 (fontified t) 1 4 (face font-lock-variable-name-face fontified t) 4 10 (fontified t) 10 27 (face default fontified t) 27 28 (face default fontified t) 28 30 (fontified t) 30 31 (fontified t) 31 35 (face font-lock-variable-name-face fontified t) 35 40 (fontified t) 40 41 (fontified t) 41 45 (face font-lock-variable-name-face fontified t) 45 46 (fontified t) 46 47 (face default fontified t) 47 51 (fontified t) 51 55 (face font-lock-constant-face fontified t) 55 56 (fontified t)) . 217) nil (#("
" 0 1 (fontified t)) . 217) nil (#("$theme = $uris[2];" 0 1 (fontified t) 1 6 (face font-lock-variable-name-face fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 14 (face font-lock-variable-name-face fontified t) 14 15 (fontified t) 15 16 (face default fontified t) 16 17 (fontified t) 17 18 (fontified t)) . 217) nil (#("
" 0 1 (fontified t)) . 217) nil (#("$uris = explode ('/', $uri);" 0 1 (fontified t) 1 5 (face font-lock-variable-name-face fontified t) 5 8 (fontified t) 8 15 (face default fontified t) 15 17 (face default fontified t) 17 18 (face font-lock-string-face fontified t) 18 19 (face font-lock-string-face fontified t) 19 20 (face font-lock-string-face fontified t) 20 22 (fontified t) 22 23 (fontified t) 23 26 (face font-lock-variable-name-face fontified t) 26 27 (fontified t) 27 28 (fontified t)) . 217) nil (215 . 216) nil (214 . 215) nil (208 . 214) nil (206 . 208) nil (#("." 0 1 (face font-lock-string-face fontified t)) . -206) nil (206 . 207) nil (#("," 0 1 (face font-lock-string-face fontified t)) . -206) nil (206 . 207) nil (204 . 206) nil (193 . 204) nil (192 . 193) nil (186 . 192) nil (181 . 186) nil (#("u" 0 1 (face font-lock-variable-name-face fontified nil)) . -181) nil (#("r" 0 1 (face font-lock-variable-name-face fontified nil)) . -182) nil (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -183) nil (#(")" 0 1 (fontified t)) . -184) nil (#(" " 0 1 (fontified t)) . -185) nil (#("=" 0 1 (fontified t)) . -186) nil (#(" " 0 1 (fontified t)) . -187) nil (185 . 188) nil (184 . 185) nil (178 . 184) nil (#("$" 0 1 (face font-lock-warning-face fontified t)) . -178) nil (177 . 179) nil (#(" " 0 1 (fontified t)) . -177) nil (173 . 178) nil (#("$" 0 1 (face font-lock-warning-face fontified nil)) . -173) nil (#("u" 0 1 (face font-lock-variable-name-face fontified nil)) . -174) nil (#("r" 0 1 (face font-lock-variable-name-face fontified nil)) . -175) nil (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -176) nil (#(" " 0 1 (fontified t)) . -177) nil (#("=" 0 1 (fontified t)) . -178) nil (#(" " 0 1 (fontified t)) . -179) nil (#("s" 0 1 (face font-lock-warning-face fontified nil)) . -180) nil (#("t" 0 1 (face font-lock-warning-face fontified nil)) . -181) nil (#("r" 0 1 (face font-lock-warning-face fontified nil)) . -182) nil (#("p" 0 1 (face font-lock-warning-face fontified nil)) . -183) nil (#("b" 0 1 (face font-lock-warning-face fontified t)) . -184) nil (#("r" 0 1 (face font-lock-warning-face fontified t)) . -185) nil (#("k" 0 1 (face font-lock-warning-face fontified t)) . -186) nil (#(" " 0 1 (fontified t)) . -187) nil (#("(" 0 1 (face default fontified t)) . -188) nil (#("$" 0 1 (face font-lock-warning-face fontified t)) . -189) nil (#("u" 0 1 (face font-lock-variable-name-face fontified nil)) . -190) nil (#("r" 0 1 (face font-lock-variable-name-face fontified nil)) . -191) nil (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -192) nil (#("," 0 1 (fontified t)) . -193) nil (#(" " 0 1 (fontified t)) . -194) nil (193 . 195) nil (191 . 193) nil (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -191) nil (188 . 192) nil (173 . 188) nil (173 . 174) (t 19844 . 6884) nil (#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -170) nil (#("p" 0 1 (face font-lock-variable-name-face fontified t)) . -171) nil (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -172) nil (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -173) nil (#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -174) nil (174 . 175) nil (173 . 174) nil (172 . 173) nil (171 . 172) nil (170 . 171) nil (#("
u" 0 1 (fontified t) 1 2 (face font-lock-warning-face fontified t)) . 172) nil (173 . 174) nil (#("$uri = strpbrk " 0 1 (fontified t) 1 4 (face font-lock-variable-name-face fontified t) 4 7 (fontified t) 7 14 (face font-lock-warning-face fontified t) 14 15 (fontified t)) . 173) nil (#("('" 0 1 (face default fontified t) 1 2 (face font-lock-string-face fontified t)) . 188) nil (#("/'" 0 2 (face font-lock-string-face fontified t)) . 190) nil (#(", $uri" 0 2 (fontified t) 2 3 (fontified t) 3 6 (face font-lock-variable-name-face fontified t)) . 192) nil (#(")" 0 1 (fontified t)) . 198) nil (#(";" 0 1 (face font-lock-string-face fontified nil)) . 199) (#("'" 0 1 (face font-lock-string-face fontified t)) . 194) nil (194 . 195) nil (#("
print_r " 0 1 (fontified t) 1 8 (face font-lock-warning-face fontified t) 8 9 (fontified t)) . 94) nil (#("($uri" 0 1 (face default fontified t) 1 2 (fontified t) 2 5 (face font-lock-variable-name-face fontified t)) . 103) nil (#(")" 0 1 (fontified t)) . 108) nil (#(";" 0 1 (fontified t)) . 109) nil (322 . 384) nil (322 . 323) nil (261 . 262) nil (#("0" 0 1 (face default fontified t)) . 261) nil (95 . 110) nil (95 . 96) nil (#("
print_r " 0 1 (fontified t) 1 8 (face font-lock-warning-face fontified t) 8 9 (fontified t)) . 121) nil (#("($uri" 0 1 (face default fontified t) 1 2 (fontified t) 2 5 (face font-lock-variable-name-face fontified t)) . 130) nil (#(")" 0 1 (fontified t)) . 135) nil (#(";" 0 1 (fontified t)) . 136) (t 19844 . 6815) nil (136 . 137) nil (135 . 136) nil (130 . 135) nil (121 . 130) (t 19844 . 6708) nil (#("
" 0 1 (fontified t)) . 95) nil (#("print_r ($uri);" 0 7 (face default fontified t) 7 9 (face default fontified t) 9 10 (fontified t) 10 13 (face font-lock-variable-name-face fontified t) 13 15 (fontified t)) . 95) nil (261 . 262) nil (#("2" 0 1 (face default fontified t)) . -261) nil (#("
" 0 1 (fontified t)) . 322) nil (#("$query = (array_key_exists(1, $uri_pre)) ? $uri_pre[1] : null;" 0 1 (fontified t) 1 6 (face font-lock-variable-name-face fontified t) 6 8 (fontified t) 8 10 (fontified t) 10 27 (face default fontified t) 27 28 (face default fontified t) 28 30 (fontified t) 30 31 (fontified t) 31 38 (face font-lock-variable-name-face fontified t) 38 43 (fontified t) 43 44 (fontified t) 44 51 (face font-lock-variable-name-face fontified t) 51 52 (fontified t) 52 53 (face default fontified t) 53 57 (fontified t) 57 61 (face font-lock-constant-face fontified t) 61 62 (fontified t)) . 322) (t 19844 . 6606) nil (109 . 110) nil (108 . 109) nil (103 . 108) nil (94 . 103) (t 19844 . 6567) nil (#("'" 0 1 (face font-lock-string-face fontified t)) . -194) nil (194 . 195) (199 . 200) nil (198 . 199) nil (192 . 198) nil (190 . 192) nil (188 . 190) nil (173 . 188) nil (#("u" 0 1 (face font-lock-warning-face fontified t)) . -173) nil (172 . 174) nil (#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -170) nil (#("p" 0 1 (face font-lock-variable-name-face fontified t)) . -171) nil (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -172) nil (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -173) nil (#("[" 0 1 (fontified t)) . -174) nil (#("0" 0 1 (face default fontified t)) . -175) nil (#("]" 0 1 (fontified t)) . -176) nil (120 . 121) nil (113 . 120) nil (112 . 113) nil (104 . 112) nil (99 . 104) nil (95 . 99) nil (#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -52) nil (#("p" 0 1 (face font-lock-variable-name-face fontified t)) . -53) nil (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -54) nil (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -55) nil (98 . 99) (t 19844 . 6215) nil (#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -183) nil (#("p" 0 1 (face font-lock-variable-name-face fontified t)) . -184) nil (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -185) nil (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -186) nil (#("[" 0 1 (fontified t)) . -187) nil (#("0" 0 1 (face default fontified t)) . -188) nil (#("]" 0 1 (fontified t)) . -189) (t 19844 . 6190) nil (303 . 307) (t 19844 . 6180) nil (312 . 316) nil (#("_pre" 0 4 (face font-lock-variable-name-face fontified t)) . 312) nil (#("_pre" 0 4 (face font-lock-variable-name-face fontified t)) . 303) (t 19844 . 6048) nil (#("(?>=enika_itamotchi" 0 19 (face font-lock-string-face fontified t)) . 121) nil (#("/" 0 1 (face font-lock-string-face fontified t)) . 140) nil (#(")" 0 1 (face font-lock-string-face fontified t)) . 141) nil (#("." 0 1 (face font-lock-string-face fontified t)) . 142) nil (142 . 143) nil (#("." 0 1 (face font-lock-string-face fontified t)) . -142) nil (142 . 143) nil (141 . 142) nil (140 . 141) nil (121 . 140) (t 19844 . 6048) nil (303 . 307) (t 19844 . 6042) nil (312 . 316) (t 19844 . 6026) nil (382 . 383) nil (373 . 382) nil (366 . 373) nil (360 . 366) nil (355 . 360) nil (347 . 355) nil (340 . 347) nil (334 . 340) nil (331 . 334) nil (183 . 187) nil (147 . 151) nil (52 . 56) nil (#("[" 0 1 (fontified t)) . -99) nil (#("0" 0 1 (face default fontified t)) . -100) nil (#("]" 0 1 (fontified t)) . -101) nil (#("u" 0 1 (face font-lock-string-face fontified t)) . -322) nil (#("r" 0 1 (face font-lock-string-face fontified t)) . -323) nil (#("i" 0 1 (face font-lock-string-face fontified t)) . -324) nil (322 . 325) nil (#("t" 0 1 (face font-lock-string-face fontified t)) . -322) nil (#("h" 0 1 (face font-lock-string-face fontified t)) . -323) nil (#("e" 0 1 (face font-lock-string-face fontified t)) . -324) nil (#("m" 0 1 (face font-lock-string-face fontified t)) . -325) nil (#("e" 0 1 (face font-lock-string-face fontified t)) . -326) nil (316 . 327) nil (#("$controller = new Controller($theme, " 0 1 (fontified t) 1 11 (face font-lock-variable-name-face fontified t) 11 14 (fontified t) 14 17 (face font-lock-keyword-face fontified t) 17 18 (fontified t) 18 28 (face font-lock-type-face fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 35 (face font-lock-variable-name-face fontified t) 35 37 (fontified t)) . 316) (t 19844 . 5914) nil (258 . 259) nil (252 . 258) nil (#("]" 0 1 (fontified t)) . -252) nil (251 . 253) nil (246 . 251) nil (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -246) nil (#("[" 0 1 (fontified t)) . -247) nil (243 . 248) nil (#("%" 0 1 (fontified t)) . -243) nil (243 . 244) nil (#("%" 0 1 (fontified t)) . -243) nil (242 . 244) nil (99 . 102) nil (143 . 146) nil (234 . 236) nil (233 . 234) nil (232 . 233) nil (225 . 232) nil (223 . 225) nil (207 . 223) (#("array" 0 5 (face font-lock-warning-face fontified t)) . -207) nil (209 . 212) nil (#("r" 0 1 (face font-lock-warning-face fontified nil)) . -209) nil (#("a" 0 1 (face font-lock-warning-face fontified t)) . -210) nil (#("_" 0 1 (face font-lock-warning-face fontified t)) . -211) nil (#("k" 0 1 (face font-lock-warning-face fontified t)) . -212) nil (#("e" 0 1 (face font-lock-warning-face fontified t)) . -213) nil (212 . 214) nil (206 . 212) nil (#("&" 0 1 (fontified t)) . -206) nil (197 . 207) nil (#("}" 0 1 (fontified t)) . 197) nil (#("
" 0 1 (fontified t)) . 197) nil (#("  if ($uris[2] == '') $theme = 'index.html';" 0 2 (fontified t) 2 4 (face font-lock-keyword-face fontified t) 4 6 (fontified t) 6 7 (fontified t) 7 11 (face font-lock-variable-name-face fontified t) 11 12 (fontified t) 12 13 (face default fontified t) 13 18 (fontified t) 18 19 (face font-lock-string-face fontified t) 19 20 (face font-lock-string-face fontified t) 20 22 (fontified t) 22 23 (fontified t) 23 28 (face font-lock-variable-name-face fontified t) 28 31 (fontified t) 31 32 (face font-lock-string-face fontified t) 32 37 (face font-lock-string-face fontified t) 37 38 (face font-lock-string-face fontified t) 38 42 (face font-lock-string-face fontified t) 42 43 (face font-lock-string-face fontified t) 43 44 (fontified t)) . 197) nil (#("
" 0 1 (fontified t)) . 197) nil (#("  $sub = null;" 0 2 (fontified t) 2 3 (fontified t) 3 6 (face font-lock-variable-name-face fontified t) 6 9 (fontified t) 9 13 (face font-lock-constant-face fontified t) 13 14 (fontified t)) . 197) nil (#("
" 0 1 (fontified t)) . 197) nil (#("} else {" 0 2 (fontified t) 2 6 (face font-lock-keyword-face fontified t) 6 8 (fontified t)) . 197) nil (#("
" 0 1 (fontified t)) . 197) nil (#("  if ($uris[3] == '') $sub = 'index.html';" 0 2 (fontified t) 2 4 (face font-lock-keyword-face fontified t) 4 7 (fontified t) 7 11 (face font-lock-variable-name-face fontified t) 11 12 (fontified t) 12 13 (face default fontified t) 13 18 (fontified t) 18 19 (face font-lock-string-face fontified t) 19 20 (face font-lock-string-face fontified t) 20 22 (fontified t) 22 23 (fontified t) 23 26 (face font-lock-variable-name-face fontified t) 26 29 (fontified t) 29 30 (face font-lock-string-face fontified t) 30 35 (face font-lock-string-face fontified t) 35 36 (face font-lock-string-face fontified t) 36 40 (face font-lock-string-face fontified t) 40 41 (face font-lock-string-face fontified t) 41 42 (fontified t)) . 197) nil (#("
" 0 1 (fontified t)) . 197) nil (#("  $sub = $uris[3];" 0 3 (fontified t) 3 6 (face font-lock-variable-name-face fontified t) 6 9 (fontified t) 9 10 (fontified t) 10 14 (face font-lock-variable-name-face fontified t) 14 15 (fontified t) 15 16 (face default fontified t) 16 18 (fontified t)) . 197) nil (#("
" 0 1 (fontified t)) . 197) nil (#("if (array_key_exists(3, $uris)) {" 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 21 (face default fontified t) 21 22 (face default fontified t) 22 24 (fontified t) 24 25 (fontified t) 25 29 (face font-lock-variable-name-face fontified t) 29 33 (fontified t)) . 197) nil (144 . 145) nil (143 . 144) nil (137 . 143) nil (125 . 137) nil (122 . 125) nil (120 . 122) nil (118 . 120) nil (116 . 118) nil (114 . 116) nil (#(" " 0 1 (fontified t)) . -114) nil (#("(" 0 1 (face default fontified t)) . -115) nil (115 . 116) nil (114 . 115) nil (94 . 114) nil (#("
" 0 1 (fontified t)) . -126) nil (126 . 127) nil (404 . 406) nil (397 . 404) nil (#(" " 0 1 (fontified t)) . -397) nil (#("(" 0 1 (fontified t)) . -398) nil (398 . 399) nil (388 . 398) nil (#("O" 0 1 (face font-lock-type-face fontified t)) . -388) nil (#("n" 0 1 (face font-lock-type-face fontified t)) . -389) nil (389 . 390) nil (369 . 389) nil (#("
" 0 1 (fontified t)) . -47) nil (#("echo \"theme: $theme, sub: $sub, query: $query\";" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 46 (face font-lock-string-face fontified t) 46 47 (fontified t)) . 370) (t 19844 . 5525) nil (214 . 220) nil (#(")" 0 1 (fontified t)) . 214) nil (206 . 207) nil (#("$" 0 1 (fontified t)) . 206) nil (#("(" 0 1 (fontified t)) . 206) nil (#("_null" 0 5 (face default fontified t)) . 206) nil (#("is" 0 2 (face default fontified t)) . 206) nil (284 . 290) nil (#(")" 0 1 (fontified t)) . 284) nil (#("(" 0 1 (fontified t)) . 276) nil (#("l" 0 1 (face default fontified t)) . 276) nil (#("l" 0 1 (face default fontified t)) . 276) nil (#("u" 0 1 (face default fontified t)) . 276) nil (#("n" 0 1 (face font-lock-constant-face fontified t)) . 276) nil (#("_" 0 1 (face default fontified t)) . 276) nil (#("is" 0 2 (face default fontified t)) . 276) nil (#("
" 0 1 (fontified t)) . 128) nil (#("print_r ($uris);" 0 7 (face default fontified t) 7 9 (face default fontified t) 9 10 (fontified t) 10 14 (face font-lock-variable-name-face fontified t) 14 16 (fontified t)) . 128) (t 19844 . 5474) nil (143 . 144) nil (142 . 143) nil (136 . 142) nil (134 . 136) nil (#("R" 0 1 (face font-lock-warning-face fontified t)) . -134) nil (#("r" 0 1 (face font-lock-warning-face fontified t)) . -135) nil (135 . 136) nil (#(" " 0 1 (fontified t)) . -135) nil (127 . 136) nil (#("fi " 0 1 (face font-lock-warning-face fontified t) 1 2 (face font-lock-warning-face fontified t) 2 3 (fontified t)) . 128) nil (130 . 131) nil (129 . 130) nil (128 . 129) nil (#("if " 0 1 (face font-lock-keyword-face fontified t) 1 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t)) . 128) nil (#("(array_l" 0 1 (fontified t) 1 7 (fontified t) 7 8 (fontified t)) . 131) nil (138 . 139) nil (#("key_" 0 4 (fontified t)) . 138) nil (132 . 142) (#("array_key_exists" 0 16 (fontified t)) . 132) nil (#("(2" 0 1 (face default fontified t) 1 2 (face default fontified t)) . 148) nil (#(", $uris" 0 3 (fontified t) 3 7 (face font-lock-variable-name-face fontified t)) . 150) nil (#(")" 0 1 (fontified t)) . 157) nil (#(")" 0 1 (fontified t)) . 158) nil (#(" " 0 1 (fontified t)) . 159) nil (#("{" 0 1 (fontified t)) . 160) nil (#("
" 0 1 (fontified t)) . 161) nil (#("  " 0 2 (fontified t)) . 162) nil (#("
" 0 1 (fontified t)) . 182) nil (#("} else " 0 2 (fontified t) 2 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t)) . 183) nil (#("_" 0 1 (face font-lock-warning-face fontified t)) . 190) nil (190 . 191) nil (183 . 190) nil (182 . 183) nil (162 . 164) nil (161 . 162) nil (160 . 161) nil (159 . 160) nil (158 . 159) nil (157 . 158) nil (150 . 157) nil (148 . 150) nil (132 . 148) (#("array_key_" 0 6 (fontified t) 6 10 (fontified t)) . 132) nil (138 . 142) nil (#("key_" 0 4 (fontified t)) . 138) nil (132 . 142) (#("array_key_exists" 0 16 (fontified t)) . 132) nil (#("(2" 0 1 (face default fontified t) 1 2 (face default fontified t)) . 148) nil (#(", $uris" 0 3 (fontified t) 3 7 (face font-lock-variable-name-face fontified t)) . 150) nil (#(")" 0 1 (fontified t)) . 157) nil (#(")" 0 1 (fontified t)) . 158) nil (#(" " 0 1 (fontified t)) . 159) nil (160 . 166) nil (160 . 161) nil (160 . 161) nil (#("$theme" 0 1 (fontified nil) 1 5 (face font-lock-variable-name-face fontified nil) 5 6 (face font-lock-variable-name-face rear-nonsticky nil fontified nil)) . 128) (nil rear-nonsticky t 133 . 134) nil (134 . 135) nil (134 . 135) nil (#(" =" 0 2 (fontified t)) . 134) nil (#("?" 0 1 (fontified t)) . 166) nil (326 . 348) nil (176 . 177) nil (#(" " 0 1 (fontified t)) . 176) nil (#(": " 0 2 (fontified t)) . 177) nil (#("$theme = 'index.html';" 0 1 (fontified nil) 1 6 (face font-lock-variable-name-face fontified nil) 6 9 (fontified nil) 9 15 (face font-lock-string-face fontified nil) 15 16 (face font-lock-string-face fontified nil) 16 20 (face font-lock-string-face fontified nil) 20 21 (face font-lock-string-face fontified nil) 21 22 (rear-nonsticky nil fontified nil)) . 179) (nil rear-nonsticky t 200 . 201) nil (179 . 185) nil (179 . 188) nil (#(" = 'index" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 9 (face font-lock-string-face fontified t)) . 179) nil (179 . 180) nil (179 . 180) nil (179 . 180) nil (316 . 341) nil (316 . 317) nil (#("if " 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t)) . 298) nil (#("($uris[2]" 0 1 (fontified t) 1 2 (fontified t) 2 6 (face font-lock-variable-name-face fontified t) 6 7 (fontified t) 7 8 (face default fontified t) 8 9 (fontified t)) . 301) nil (#(")" 0 1 (fontified t)) . 310) nil (#(")" 0 1 (fontified t)) . 311) nil (#("strstr" 0 6 (fontified t)) . 302) nil (#("(" 0 1 (face default fontified t)) . 308) nil (#(", '.htm'" 0 2 (fontified t) 2 8 (face font-lock-string-face fontified t)) . 317) nil (#("
" 0 1 (fontified t)) . 329) nil (#("  " 0 2 (fontified t)) . 330) nil (#("$sub" 0 1 (fontified t) 1 4 (face font-lock-variable-name-face fontified t)) . 332) nil (330 . 336) nil (246 . 291) nil (246 . 247) nil (#("  if (is_null($uris[3])) $sub = 'index.html';
" 0 2 (fontified nil) 2 4 (face font-lock-keyword-face fontified nil) 4 6 (fontified nil) 6 8 (face default fontified nil) 8 13 (face default fontified nil) 13 14 (face default fontified nil) 14 15 (fontified nil) 15 19 (face font-lock-variable-name-face fontified nil) 19 20 (fontified nil) 20 21 (face default fontified nil) 21 22 (fontified nil) 22 23 (fontified nil) 23 24 (fontified nil) 24 25 (fontified nil) 25 26 (fontified nil) 26 29 (face font-lock-variable-name-face fontified nil) 29 32 (fontified nil) 32 33 (face font-lock-string-face fontified nil) 33 38 (face font-lock-string-face fontified nil) 38 39 (face font-lock-string-face fontified nil) 39 43 (face font-lock-string-face fontified nil) 43 44 (face font-lock-string-face fontified nil) 44 45 (fontified nil) 45 46 (rear-nonsticky nil fontified nil)) . 284) (nil rear-nonsticky t 329 . 330) nil (286 . 288) nil (286 . 290) nil (286 . 291) nil (286 . 292) nil (286 . 288) nil (286 . 287) nil (286 . 287) nil (286 . 287) nil (286 . 287) nil (306 . 307) nil (#("
" 0 1 (fontified t)) . 306) nil (#("} l" 0 2 (fontified t) 2 3 (face font-lock-warning-face fontified t)) . 307) nil (309 . 310) nil (#("else " 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t)) . 309) nil (#("{" 0 1 (fontified t)) . 314) (t 19844 . 5414) nil (314 . 315) nil (309 . 314) nil (#("l" 0 1 (face font-lock-warning-face fontified t)) . -309) nil (307 . 310) nil (306 . 307) nil (#("
" 0 1 (rear-nonsticky t fontified t)) . -306) nil (#(" " 0 1 (fontified t)) . 286) nil (#(")" 0 1 (fontified t)) . 286) nil (#(")" 0 1 (fontified t)) . 286) nil (#("]" 0 1 (fontified t)) . 286) nil (#("[3" 0 1 (fontified t) 1 2 (face default fontified t)) . 286) nil (#("($uris" 0 1 (fontified t) 1 2 (fontified t) 2 6 (face font-lock-variable-name-face fontified t)) . 286) nil (#("_null" 0 5 (face default fontified t)) . 286) nil (#(" (is" 0 2 (fontified t) 2 4 (face default fontified t)) . 286) nil (#("if" 0 2 (face font-lock-keyword-face fontified t)) . 286) nil (nil rear-nonsticky nil 329 . 330) (nil fontified nil 329 . 330) (nil fontified nil 328 . 329) (nil fontified nil 327 . 328) (nil fontified nil 323 . 327) (nil fontified nil 322 . 323) (nil fontified nil 317 . 322) (nil fontified nil 316 . 317) (nil fontified nil 313 . 316) (nil fontified nil 310 . 313) (nil fontified nil 309 . 310) (nil fontified nil 305 . 309) (nil fontified nil 304 . 305) (nil fontified nil 303 . 304) (nil fontified nil 299 . 303) (nil fontified nil 298 . 299) (nil fontified nil 290 . 298) (nil fontified nil 288 . 290) (nil fontified nil 286 . 288) (nil fontified nil 284 . 286) (284 . 330) nil (#("
" 0 1 (fontified t)) . 246) nil (#("  if (is_null($uris[3])) $sub = 'index.html';" 0 2 (fontified t) 2 4 (face font-lock-keyword-face fontified t) 4 6 (fontified t) 6 14 (face default fontified t) 14 15 (fontified t) 15 19 (face font-lock-variable-name-face fontified t) 19 20 (fontified t) 20 21 (face default fontified t) 21 25 (fontified t) 25 26 (fontified t) 26 29 (face font-lock-variable-name-face fontified t) 29 32 (fontified t) 32 33 (face font-lock-string-face fontified t) 33 38 (face font-lock-string-face fontified t) 38 39 (face font-lock-string-face fontified t) 39 43 (face font-lock-string-face fontified t) 43 44 (face font-lock-string-face fontified t) 44 45 (fontified t)) . 246) nil (#("  $sub" 0 2 (fontified t) 2 3 (fontified t) 3 6 (face font-lock-variable-name-face fontified t)) . 330) nil (332 . 336) nil (330 . 332) nil (329 . 330) nil (317 . 325) nil (308 . 309)))
